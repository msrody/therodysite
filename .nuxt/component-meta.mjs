export default {
  "ArticlesList": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/content/ArticlesList.vue",
    "pascalName": "ArticlesList",
    "kebabName": "articles-list",
    "chunkName": "components/articles-list",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/content/ArticlesList.vue",
    "export": "default",
    "priority": 1,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ArticlesList.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "path",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ArticlesList.vue",
              "range": [
                96,
                149
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"articles\""
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "path",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ArticlesList.vue",
              "range": [
                96,
                149
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ArticlesListItem": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/content/ArticlesListItem.vue",
    "pascalName": "ArticlesListItem",
    "kebabName": "articles-list-item",
    "chunkName": "components/articles-list-item",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/content/ArticlesListItem.vue",
    "export": "default",
    "priority": 1,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ArticlesListItem.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "article",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "Record<string, any>",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ArticlesListItem.vue",
              "range": [
                249,
                418
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ArticlesListItem.vue",
              "range": [
                249,
                418
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "featured",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ArticlesListItem.vue",
              "range": [
                422,
                475
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "false",
              "2": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "article",
          "type": "Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ArticlesListItem.vue",
              "range": [
                249,
                418
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "featured",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ArticlesListItem.vue",
              "range": [
                422,
                475
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        }
      ]
    }
  },
  "ContactForm": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/content/ContactForm.vue",
    "pascalName": "ContactForm",
    "kebabName": "contact-form",
    "chunkName": "components/contact-form",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/content/ContactForm.vue",
    "export": "default",
    "priority": 1,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ContactForm.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "submitButtonText",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ContactForm.vue",
              "range": [
                322,
                391
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"Send message\""
        },
        {
          "name": "fields",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Field[] | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ContactForm.vue",
              "range": [
                395,
                1127
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Field[] | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "array",
                "type": "Field[]",
                "schema": [
                  {
                    "kind": "object",
                    "type": "Field",
                    "schema": {
                      "type": {
                        "name": "type",
                        "global": false,
                        "description": "",
                        "tags": [],
                        "required": false,
                        "type": "string | undefined",
                        "declarations": [
                          {
                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/types/contact.ts",
                            "range": [
                              27,
                              41
                            ]
                          }
                        ],
                        "schema": {
                          "kind": "enum",
                          "type": "string | undefined",
                          "schema": {
                            "0": "undefined",
                            "1": "string"
                          }
                        }
                      },
                      "name": {
                        "name": "name",
                        "global": false,
                        "description": "",
                        "tags": [],
                        "required": true,
                        "type": "string",
                        "declarations": [
                          {
                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/types/contact.ts",
                            "range": [
                              44,
                              57
                            ]
                          }
                        ],
                        "schema": "string"
                      },
                      "placeholder": {
                        "name": "placeholder",
                        "global": false,
                        "description": "",
                        "tags": [],
                        "required": false,
                        "type": "string | undefined",
                        "declarations": [
                          {
                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/types/contact.ts",
                            "range": [
                              60,
                              81
                            ]
                          }
                        ],
                        "schema": "string | undefined"
                      },
                      "label": {
                        "name": "label",
                        "global": false,
                        "description": "",
                        "tags": [],
                        "required": false,
                        "type": "string | undefined",
                        "declarations": [
                          {
                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/types/contact.ts",
                            "range": [
                              84,
                              99
                            ]
                          }
                        ],
                        "schema": "string | undefined"
                      },
                      "required": {
                        "name": "required",
                        "global": false,
                        "description": "",
                        "tags": [],
                        "required": false,
                        "type": "boolean | undefined",
                        "declarations": [
                          {
                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/types/contact.ts",
                            "range": [
                              102,
                              121
                            ]
                          }
                        ],
                        "schema": {
                          "kind": "enum",
                          "type": "boolean | undefined",
                          "schema": {
                            "0": "undefined",
                            "1": "false",
                            "2": "true"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "default": "[\n    {\n        type: \"text\",\n        model: \"name\",\n        name: \"Name\",\n        placeholder: \"Your name\",\n        required: true,\n        layout: \"default\"\n    },\n    {\n        type: \"email\",\n        model: \"email\",\n        name: \"Email\",\n        placeholder: \"Your email\",\n        required: true,\n        layout: \"default\"\n    },\n    {\n        type: \"text\",\n        model: \"text\",\n        name: \"Subject\",\n        required: false,\n        layout: \"default\"\n    },\n    {\n        type: \"textarea\",\n        model: \"message\",\n        name: \"Message\",\n        placeholder: \"Your message\",\n        required: true,\n        layout: \"big\"\n    }\n]"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "submitButtonText",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ContactForm.vue",
              "range": [
                322,
                391
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "fields",
          "type": "Field[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/ContactForm.vue",
              "range": [
                395,
                1127
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "Field[]",
            "schema": {
              "0": {
                "kind": "object",
                "type": "Field",
                "schema": {
                  "type": {
                    "name": "type",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "string | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/types/contact.ts",
                        "range": [
                          27,
                          41
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "string | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": "string"
                      }
                    }
                  },
                  "name": {
                    "name": "name",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "string",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/types/contact.ts",
                        "range": [
                          44,
                          57
                        ]
                      }
                    ],
                    "schema": "string"
                  },
                  "placeholder": {
                    "name": "placeholder",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "string | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/types/contact.ts",
                        "range": [
                          60,
                          81
                        ]
                      }
                    ],
                    "schema": "string | undefined"
                  },
                  "label": {
                    "name": "label",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "string | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/types/contact.ts",
                        "range": [
                          84,
                          99
                        ]
                      }
                    ],
                    "schema": "string | undefined"
                  },
                  "required": {
                    "name": "required",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "boolean | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/types/contact.ts",
                        "range": [
                          102,
                          121
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "boolean | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": "false",
                        "2": "true"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "Gallery": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/content/Gallery.vue",
    "pascalName": "Gallery",
    "kebabName": "gallery",
    "chunkName": "components/gallery",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/content/Gallery.vue",
    "export": "default",
    "priority": 1,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/Gallery.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "images",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string[] | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/Gallery.vue",
              "range": [
                78,
                152
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string[] | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "array",
                "type": "string[]",
                "schema": [
                  "string"
                ]
              }
            }
          },
          "default": "[]"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "images",
          "type": "string[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/Gallery.vue",
              "range": [
                78,
                152
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "string[]",
            "schema": {
              "0": "string"
            }
          }
        }
      ]
    }
  },
  "Hero": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/content/Hero.vue",
    "pascalName": "Hero",
    "kebabName": "hero",
    "chunkName": "components/hero",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/content/Hero.vue",
    "export": "default",
    "priority": 1,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/Hero.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "image",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/Hero.vue",
              "range": [
                41,
                89
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "null"
        },
        {
          "name": "imageAlt",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/Hero.vue",
              "range": [
                93,
                152
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"Hero Image\""
        },
        {
          "name": "imagePosition",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/Hero.vue",
              "range": [
                156,
                215
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"right\""
        }
      ],
      "slots": [
        {
          "name": "title",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        },
        {
          "name": "description",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { title?(_: { unwrap: string; }): any; description?(_: { unwrap: string; }): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { title?(_: { unwrap: string; }): any; description?(_: { unwrap: string; }): any; }",
            "schema": {
              "title": {
                "name": "title",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              },
              "description": {
                "name": "description",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "image",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/Hero.vue",
              "range": [
                41,
                89
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "imageAlt",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/Hero.vue",
              "range": [
                93,
                152
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "imagePosition",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/content/Hero.vue",
              "range": [
                156,
                215
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "Input": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/data-entry/Input.vue",
    "pascalName": "Input",
    "kebabName": "input",
    "chunkName": "components/input",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/data-entry/Input.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/data-entry/Input.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "modelValue",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/data-entry/Input.vue",
              "range": [
                160,
                214
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/data-entry/Input.vue",
              "range": [
                160,
                214
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "field",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "any",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/data-entry/Input.vue",
              "range": [
                218,
                400
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/data-entry/Input.vue",
              "range": [
                218,
                400
              ]
            }
          ],
          "schema": "any"
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "update:modelValue",
          "type": "any[]",
          "signature": "(event: \"update:modelValue\", ...args: any[]): void",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                4469,
                4504
              ]
            }
          ],
          "schema": [
            "any"
          ]
        }
      ],
      "exposed": [
        {
          "name": "onUpdate:modelValue",
          "type": "((...args: any[]) => any) | undefined",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "enum",
            "type": "((...args: any[]) => any) | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "event",
                "type": "(...args: any[]): any",
                "schema": [
                  "any"
                ]
              }
            }
          }
        },
        {
          "name": "modelValue",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/data-entry/Input.vue",
              "range": [
                160,
                214
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "field",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/data-entry/Input.vue",
              "range": [
                218,
                400
              ]
            }
          ],
          "schema": "any"
        }
      ]
    }
  },
  "AppFooter": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/AppFooter.vue",
    "pascalName": "AppFooter",
    "kebabName": "app-footer",
    "chunkName": "components/app-footer",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/AppFooter.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppFooter.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "AppHeader": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/AppHeader.vue",
    "pascalName": "AppHeader",
    "kebabName": "app-header",
    "chunkName": "components/app-header",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/AppHeader.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppHeader.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "AppLayout": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/AppLayout.vue",
    "pascalName": "AppLayout",
    "kebabName": "app-layout",
    "chunkName": "components/app-layout",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/AppLayout.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppLayout.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "padded",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppLayout.vue",
              "range": [
                79,
                129
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "false",
              "2": "true"
            }
          },
          "default": "true"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "padded",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppLayout.vue",
              "range": [
                79,
                129
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        }
      ]
    }
  },
  "AppLoadingBar": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/AppLoadingBar.vue",
    "pascalName": "AppLoadingBar",
    "kebabName": "app-loading-bar",
    "chunkName": "components/app-loading-bar",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/AppLoadingBar.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppLoadingBar.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "throttle",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "number | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppLoadingBar.vue",
              "range": [
                111,
                161
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "number | undefined",
            "schema": {
              "0": "undefined",
              "1": "number"
            }
          },
          "default": "200"
        },
        {
          "name": "duration",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "number | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppLoadingBar.vue",
              "range": [
                165,
                216
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "number | undefined",
            "schema": {
              "0": "undefined",
              "1": "number"
            }
          },
          "default": "2000"
        },
        {
          "name": "height",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "number | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppLoadingBar.vue",
              "range": [
                220,
                266
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "number | undefined",
            "schema": {
              "0": "undefined",
              "1": "number"
            }
          },
          "default": "3"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "throttle",
          "type": "number",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppLoadingBar.vue",
              "range": [
                111,
                161
              ]
            }
          ],
          "schema": "number"
        },
        {
          "name": "duration",
          "type": "number",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppLoadingBar.vue",
              "range": [
                165,
                216
              ]
            }
          ],
          "schema": "number"
        },
        {
          "name": "height",
          "type": "number",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/AppLoadingBar.vue",
              "range": [
                220,
                266
              ]
            }
          ],
          "schema": "number"
        }
      ]
    }
  },
  "Button": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/Button.vue",
    "pascalName": "Button",
    "kebabName": "button",
    "chunkName": "components/button",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/Button.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/Button.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "type",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/Button.vue",
              "range": [
                41,
                92
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"submit\""
        },
        {
          "name": "disabled",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/Button.vue",
              "range": [
                96,
                149
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "false",
              "2": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "type",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/Button.vue",
              "range": [
                41,
                92
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/Button.vue",
              "range": [
                96,
                149
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        }
      ]
    }
  },
  "ColorModeSwitch": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/ColorModeSwitch.vue",
    "pascalName": "ColorModeSwitch",
    "kebabName": "color-mode-switch",
    "chunkName": "components/color-mode-switch",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/ColorModeSwitch.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/ColorModeSwitch.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "DocumentDrivenNotFound": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/DocumentDrivenNotFound.vue",
    "pascalName": "DocumentDrivenNotFound",
    "kebabName": "document-driven-not-found",
    "chunkName": "components/document-driven-not-found",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/DocumentDrivenNotFound.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/DocumentDrivenNotFound.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "MainNav": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/MainNav.vue",
    "pascalName": "MainNav",
    "kebabName": "main-nav",
    "chunkName": "components/main-nav",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/MainNav.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/MainNav.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [
        {
          "name": "linkClick",
          "type": "any[]",
          "signature": "(event: \"linkClick\", ...args: any[]): void",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                4469,
                4504
              ]
            }
          ],
          "schema": [
            "any"
          ]
        }
      ],
      "exposed": [
        {
          "name": "onLinkClick",
          "type": "((...args: any[]) => any) | undefined",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "enum",
            "type": "((...args: any[]) => any) | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "event",
                "type": "(...args: any[]): any",
                "schema": [
                  "any"
                ]
              }
            }
          }
        }
      ]
    }
  },
  "SocialIcons": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/alpine/components/SocialIcons.vue",
    "pascalName": "SocialIcons",
    "kebabName": "social-icons",
    "chunkName": "components/social-icons",
    "shortPath": "node_modules/@nuxt-themes/alpine/components/SocialIcons.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/SocialIcons.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "socials",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Record<string, any> | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/SocialIcons.vue",
              "range": [
                55,
                109
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Record<string, any> | undefined",
            "schema": {
              "0": "undefined",
              "1": "Record<string, any>"
            }
          },
          "default": "() => { }"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "socials",
          "type": "Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/alpine/components/SocialIcons.vue",
              "range": [
                55,
                109
              ]
            }
          ],
          "schema": "Record<string, any>"
        }
      ]
    }
  },
  "ProseA": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseA.vue",
    "pascalName": "ProseA",
    "kebabName": "prose-a",
    "chunkName": "components/prose-a",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseA.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseA.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "href",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseA.vue",
              "range": [
                41,
                86
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "target",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseA.vue",
              "range": [
                90,
                165
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "undefined"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "href",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseA.vue",
              "range": [
                41,
                86
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "target",
          "type": "string | undefined",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseA.vue",
              "range": [
                90,
                165
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          }
        }
      ]
    }
  },
  "ProseBlockquote": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseBlockquote.vue",
    "pascalName": "ProseBlockquote",
    "kebabName": "prose-blockquote",
    "chunkName": "components/prose-blockquote",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseBlockquote.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseBlockquote.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseCode": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseCode.vue",
    "pascalName": "ProseCode",
    "kebabName": "prose-code",
    "chunkName": "components/prose-code",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseCode.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseCode.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "code",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseCode.vue",
              "range": [
                141,
                186
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "language",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseCode.vue",
              "range": [
                190,
                259
              ]
            }
          ],
          "schema": "any",
          "default": "null"
        },
        {
          "name": "filename",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseCode.vue",
              "range": [
                263,
                314
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "null"
        },
        {
          "name": "highlights",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "number[] | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseCode.vue",
              "range": [
                318,
                392
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "number[] | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "array",
                "type": "number[]",
                "schema": [
                  "number"
                ]
              }
            }
          },
          "default": "[]"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "code",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseCode.vue",
              "range": [
                141,
                186
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "language",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseCode.vue",
              "range": [
                190,
                259
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "filename",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseCode.vue",
              "range": [
                263,
                314
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "highlights",
          "type": "number[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseCode.vue",
              "range": [
                318,
                392
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "number[]",
            "schema": {
              "0": "number"
            }
          }
        }
      ]
    }
  },
  "ProseCodeInline": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseCodeInline.vue",
    "pascalName": "ProseCodeInline",
    "kebabName": "prose-code-inline",
    "chunkName": "components/prose-code-inline",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseCodeInline.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseCodeInline.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseEm": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseEm.vue",
    "pascalName": "ProseEm",
    "kebabName": "prose-em",
    "chunkName": "components/prose-em",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseEm.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseEm.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseH1": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseH1.vue",
    "pascalName": "ProseH1",
    "kebabName": "prose-h1",
    "chunkName": "components/prose-h1",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseH1.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH1.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH1.vue",
              "range": [
                111,
                121
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH1.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH1.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseH2": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseH2.vue",
    "pascalName": "ProseH2",
    "kebabName": "prose-h2",
    "chunkName": "components/prose-h2",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseH2.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH2.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH2.vue",
              "range": [
                111,
                121
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH2.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH2.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseH3": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseH3.vue",
    "pascalName": "ProseH3",
    "kebabName": "prose-h3",
    "chunkName": "components/prose-h3",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseH3.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH3.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH3.vue",
              "range": [
                111,
                121
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH3.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH3.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseH4": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseH4.vue",
    "pascalName": "ProseH4",
    "kebabName": "prose-h4",
    "chunkName": "components/prose-h4",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseH4.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH4.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH4.vue",
              "range": [
                111,
                121
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH4.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH4.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseH5": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseH5.vue",
    "pascalName": "ProseH5",
    "kebabName": "prose-h5",
    "chunkName": "components/prose-h5",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseH5.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH5.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH5.vue",
              "range": [
                111,
                121
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH5.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH5.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseH6": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseH6.vue",
    "pascalName": "ProseH6",
    "kebabName": "prose-h6",
    "chunkName": "components/prose-h6",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseH6.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH6.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH6.vue",
              "range": [
                111,
                121
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH6.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseH6.vue",
              "range": [
                111,
                121
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseHr": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseHr.vue",
    "pascalName": "ProseHr",
    "kebabName": "prose-hr",
    "chunkName": "components/prose-hr",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseHr.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseHr.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "ProseImg": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseImg.vue",
    "pascalName": "ProseImg",
    "kebabName": "prose-img",
    "chunkName": "components/prose-img",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseImg.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseImg.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "height",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | number | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseImg.vue",
              "range": [
                304,
                368
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | number | undefined",
            "schema": {
              "0": "undefined",
              "1": "string",
              "2": "number"
            }
          },
          "default": "undefined"
        },
        {
          "name": "src",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseImg.vue",
              "range": [
                141,
                185
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "alt",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseImg.vue",
              "range": [
                189,
                233
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "width",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | number | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseImg.vue",
              "range": [
                237,
                300
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | number | undefined",
            "schema": {
              "0": "undefined",
              "1": "string",
              "2": "number"
            }
          },
          "default": "undefined"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "height",
          "type": "string | number | undefined",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseImg.vue",
              "range": [
                304,
                368
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | number | undefined",
            "schema": {
              "0": "undefined",
              "1": "string",
              "2": "number"
            }
          }
        },
        {
          "name": "src",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseImg.vue",
              "range": [
                141,
                185
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "alt",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseImg.vue",
              "range": [
                189,
                233
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "width",
          "type": "string | number | undefined",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseImg.vue",
              "range": [
                237,
                300
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | number | undefined",
            "schema": {
              "0": "undefined",
              "1": "string",
              "2": "number"
            }
          }
        }
      ]
    }
  },
  "ProseLi": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseLi.vue",
    "pascalName": "ProseLi",
    "kebabName": "prose-li",
    "chunkName": "components/prose-li",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseLi.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseLi.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseOl": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseOl.vue",
    "pascalName": "ProseOl",
    "kebabName": "prose-ol",
    "chunkName": "components/prose-ol",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseOl.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseOl.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseP": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseP.vue",
    "pascalName": "ProseP",
    "kebabName": "prose-p",
    "chunkName": "components/prose-p",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseP.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseP.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseStrong": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseStrong.vue",
    "pascalName": "ProseStrong",
    "kebabName": "prose-strong",
    "chunkName": "components/prose-strong",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseStrong.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseStrong.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseTable": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseTable.vue",
    "pascalName": "ProseTable",
    "kebabName": "prose-table",
    "chunkName": "components/prose-table",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseTable.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseTable.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseTbody": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseTbody.vue",
    "pascalName": "ProseTbody",
    "kebabName": "prose-tbody",
    "chunkName": "components/prose-tbody",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseTbody.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseTbody.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseTd": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseTd.vue",
    "pascalName": "ProseTd",
    "kebabName": "prose-td",
    "chunkName": "components/prose-td",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseTd.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseTd.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseTh": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseTh.vue",
    "pascalName": "ProseTh",
    "kebabName": "prose-th",
    "chunkName": "components/prose-th",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseTh.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseTh.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseThead": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseThead.vue",
    "pascalName": "ProseThead",
    "kebabName": "prose-thead",
    "chunkName": "components/prose-thead",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseThead.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseThead.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseTr": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseTr.vue",
    "pascalName": "ProseTr",
    "kebabName": "prose-tr",
    "chunkName": "components/prose-tr",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseTr.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseTr.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseUl": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/typography/components/global/ProseUl.vue",
    "pascalName": "ProseUl",
    "kebabName": "prose-ul",
    "chunkName": "components/prose-ul",
    "shortPath": "node_modules/@nuxt-themes/typography/components/global/ProseUl.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/typography/components/global/ProseUl.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "Alert": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/Alert.vue",
    "pascalName": "Alert",
    "kebabName": "alert",
    "chunkName": "components/alert",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/Alert.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Alert.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "type",
          "global": false,
          "description": "",
          "tags": [
            {
              "name": "values",
              "text": "info, success, warning, danger"
            }
          ],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Alert.vue",
              "range": [
                111,
                280
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"info\""
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "type",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Alert.vue",
              "range": [
                111,
                280
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "Badge": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/Badge.vue",
    "pascalName": "Badge",
    "kebabName": "badge",
    "chunkName": "components/badge",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/Badge.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Badge.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "type",
          "global": false,
          "description": "",
          "tags": [
            {
              "name": "values",
              "text": "info, success, warning, danger"
            }
          ],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Badge.vue",
              "range": [
                97,
                266
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"info\""
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "type",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Badge.vue",
              "range": [
                97,
                266
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ButtonLink": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/ButtonLink.vue",
    "pascalName": "ButtonLink",
    "kebabName": "button-link",
    "chunkName": "components/button-link",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/ButtonLink.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/ButtonLink.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "Callout": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/Callout.vue",
    "pascalName": "Callout",
    "kebabName": "callout",
    "chunkName": "components/callout",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/Callout.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Callout.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "type",
          "global": false,
          "description": "",
          "tags": [
            {
              "name": "values",
              "text": "info, success, warning, danger"
            }
          ],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Callout.vue",
              "range": [
                111,
                280
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"info\""
        },
        {
          "name": "modelValue",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Callout.vue",
              "range": [
                284,
                352
              ]
            }
          ],
          "schema": "any",
          "default": "ref(false)"
        }
      ],
      "slots": [
        {
          "name": "summary",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        },
        {
          "name": "content",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": "any[]",
          "signature": "(event: \"update:modelValue\", ...args: any[]): void",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                4469,
                4504
              ]
            }
          ],
          "schema": [
            "any"
          ]
        }
      ],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { summary?(_: {}): any; content?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { summary?(_: {}): any; content?(_: {}): any; }",
            "schema": {
              "summary": {
                "name": "summary",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              },
              "content": {
                "name": "content",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "onUpdate:modelValue",
          "type": "((...args: any[]) => any) | undefined",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "enum",
            "type": "((...args: any[]) => any) | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "event",
                "type": "(...args: any[]): any",
                "schema": [
                  "any"
                ]
              }
            }
          }
        },
        {
          "name": "type",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Callout.vue",
              "range": [
                111,
                280
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "modelValue",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Callout.vue",
              "range": [
                284,
                352
              ]
            }
          ],
          "schema": "any"
        }
      ]
    }
  },
  "CodeBlock": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/CodeBlock.vue",
    "pascalName": "CodeBlock",
    "kebabName": "code-block",
    "chunkName": "components/code-block",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/CodeBlock.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CodeBlock.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "label",
          "global": false,
          "description": "Label to display for the tab",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CodeBlock.vue",
              "range": [
                87,
                136
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CodeBlock.vue",
              "range": [
                87,
                136
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "active",
          "global": false,
          "description": "Select which tab should be active\nTODO: seems like it's not used",
          "tags": [],
          "required": false,
          "type": "boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CodeBlock.vue",
              "range": [
                228,
                279
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "false",
              "2": "true"
            }
          },
          "default": "false"
        },
        {
          "name": "preview",
          "global": false,
          "description": "Preview block are bordered and have small padding.\nTODO: seems like it's not used",
          "tags": [],
          "required": false,
          "type": "boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CodeBlock.vue",
              "range": [
                387,
                439
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "false",
              "2": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "label",
          "type": "string",
          "description": "Label to display for the tab",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CodeBlock.vue",
              "range": [
                87,
                136
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "Select which tab should be active\nTODO: seems like it's not used",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CodeBlock.vue",
              "range": [
                228,
                279
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "preview",
          "type": "boolean",
          "description": "Preview block are bordered and have small padding.\nTODO: seems like it's not used",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CodeBlock.vue",
              "range": [
                387,
                439
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        }
      ]
    }
  },
  "CodeGroup": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/CodeGroup.vue",
    "pascalName": "CodeGroup",
    "kebabName": "code-group",
    "chunkName": "components/code-group",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/CodeGroup.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CodeGroup.vue",
    "meta": {
      "type": null,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "Container": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/Container.vue",
    "pascalName": "Container",
    "kebabName": "container",
    "chunkName": "components/container",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/Container.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Container.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "CopyButton": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/CopyButton.vue",
    "pascalName": "CopyButton",
    "kebabName": "copy-button",
    "chunkName": "components/copy-button",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/CopyButton.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CopyButton.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "content",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CopyButton.vue",
              "range": [
                100,
                148
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "content",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/CopyButton.vue",
              "range": [
                100,
                148
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "Ellipsis": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
    "pascalName": "Ellipsis",
    "kebabName": "ellipsis",
    "chunkName": "components/ellipsis",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "width",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                78,
                129
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"10rem\""
        },
        {
          "name": "height",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                133,
                185
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"10rem\""
        },
        {
          "name": "zIndex",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                189,
                238
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"10\""
        },
        {
          "name": "top",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                242,
                287
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"0\""
        },
        {
          "name": "left",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                291,
                340
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"auto\""
        },
        {
          "name": "right",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                344,
                394
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"auto\""
        },
        {
          "name": "blur",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                398,
                447
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"50px\""
        },
        {
          "name": "colors",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string[] | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                451,
                604
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string[] | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "array",
                "type": "string[]",
                "schema": [
                  "string"
                ]
              }
            }
          },
          "default": "[\"rgba(0, 71, 225, 0.22)\", \"rgba(26, 214, 255, 0.22)\", \"rgba(0, 220, 130, 0.22)\"]"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "width",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                78,
                129
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "height",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                133,
                185
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "zIndex",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                189,
                238
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "top",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                242,
                287
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "left",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                291,
                340
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "right",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                344,
                394
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "blur",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                398,
                447
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "colors",
          "type": "string[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Ellipsis.vue",
              "range": [
                451,
                604
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "string[]",
            "schema": {
              "0": "string"
            }
          }
        }
      ]
    }
  },
  "List": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/List.vue",
    "pascalName": "List",
    "kebabName": "list",
    "chunkName": "components/list",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/List.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/List.vue",
    "meta": {
      "type": null,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "NuxtImg": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/NuxtImg.vue",
    "pascalName": "NuxtImg",
    "kebabName": "nuxt-img",
    "chunkName": "components/nuxt-img",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/NuxtImg.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/NuxtImg.vue",
    "meta": {
      "type": null,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "Props": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/Props.vue",
    "pascalName": "Props",
    "kebabName": "props",
    "chunkName": "components/props",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/Props.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Props.vue",
    "meta": {
      "type": null,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "Sandbox": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
    "pascalName": "Sandbox",
    "kebabName": "sandbox",
    "chunkName": "components/sandbox",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "src",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
              "range": [
                55,
                99
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "repo",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
              "range": [
                103,
                148
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "branch",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
              "range": [
                152,
                199
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "dir",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
              "range": [
                203,
                247
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "file",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
              "range": [
                251,
                303
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"app.vue\""
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "src",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
              "range": [
                55,
                99
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "repo",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
              "range": [
                103,
                148
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "branch",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
              "range": [
                152,
                199
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "dir",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
              "range": [
                203,
                247
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "file",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Sandbox.vue",
              "range": [
                251,
                303
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "SourceLink": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/SourceLink.vue",
    "pascalName": "SourceLink",
    "kebabName": "source-link",
    "chunkName": "components/source-link",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/SourceLink.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/SourceLink.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "source",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/SourceLink.vue",
              "range": [
                41,
                92
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/SourceLink.vue",
              "range": [
                41,
                92
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "source",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/SourceLink.vue",
              "range": [
                41,
                92
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "TabsHeader": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/TabsHeader.vue",
    "pascalName": "TabsHeader",
    "kebabName": "tabs-header",
    "chunkName": "components/tabs-header",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/TabsHeader.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/TabsHeader.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "tabs",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "{ label: string; }[]",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/TabsHeader.vue",
              "range": [
                135,
                215
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/TabsHeader.vue",
              "range": [
                135,
                215
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "{ label: string; }[]",
            "schema": {
              "0": {
                "kind": "object",
                "type": "{ label: string; }",
                "schema": {
                  "label": {
                    "name": "label",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "string",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/TabsHeader.vue",
                        "range": [
                          173,
                          186
                        ]
                      }
                    ],
                    "schema": "string"
                  }
                }
              }
            }
          }
        },
        {
          "name": "activeTabIndex",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "number",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/TabsHeader.vue",
              "range": [
                219,
                277
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/TabsHeader.vue",
              "range": [
                219,
                277
              ]
            }
          ],
          "schema": "number"
        }
      ],
      "slots": [
        {
          "name": "footer",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [
        {
          "name": "update:activeTabIndex",
          "type": "any[]",
          "signature": "(event: \"update:activeTabIndex\", ...args: any[]): void",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                4469,
                4504
              ]
            }
          ],
          "schema": [
            "any"
          ]
        }
      ],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { footer?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { footer?(_: {}): any; }",
            "schema": {
              "footer": {
                "name": "footer",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "onUpdate:activeTabIndex",
          "type": "((...args: any[]) => any) | undefined",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "enum",
            "type": "((...args: any[]) => any) | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "event",
                "type": "(...args: any[]): any",
                "schema": [
                  "any"
                ]
              }
            }
          }
        },
        {
          "name": "tabs",
          "type": "{ label: string; }[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/TabsHeader.vue",
              "range": [
                135,
                215
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "{ label: string; }[]",
            "schema": {
              "0": {
                "kind": "object",
                "type": "{ label: string; }",
                "schema": {
                  "label": {
                    "name": "label",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "string",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/TabsHeader.vue",
                        "range": [
                          173,
                          186
                        ]
                      }
                    ],
                    "schema": "string"
                  }
                }
              }
            }
          }
        },
        {
          "name": "activeTabIndex",
          "type": "number",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/TabsHeader.vue",
              "range": [
                219,
                277
              ]
            }
          ],
          "schema": "number"
        }
      ]
    }
  },
  "Terminal": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/Terminal.vue",
    "pascalName": "Terminal",
    "kebabName": "terminal",
    "chunkName": "components/terminal",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/Terminal.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Terminal.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "content",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string | string[]",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Terminal.vue",
              "range": [
                131,
                222
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Terminal.vue",
              "range": [
                131,
                222
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | string[]",
            "schema": {
              "0": "string",
              "1": {
                "kind": "array",
                "type": "string[]",
                "schema": [
                  "string"
                ]
              }
            }
          }
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "content",
          "type": "string | string[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/Terminal.vue",
              "range": [
                131,
                222
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | string[]",
            "schema": {
              "0": "string",
              "1": {
                "kind": "array",
                "type": "string[]",
                "schema": [
                  "string"
                ]
              }
            }
          }
        }
      ]
    }
  },
  "VideoPlayer": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/globals/VideoPlayer.vue",
    "pascalName": "VideoPlayer",
    "kebabName": "video-player",
    "chunkName": "components/video-player",
    "shortPath": "node_modules/@nuxt-themes/elements/components/globals/VideoPlayer.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/VideoPlayer.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "src",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/VideoPlayer.vue",
              "range": [
                143,
                187
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "poster",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/VideoPlayer.vue",
              "range": [
                92,
                139
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "sources",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any[] | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/VideoPlayer.vue",
              "range": [
                191,
                263
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "any[] | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "array",
                "type": "any[]",
                "schema": [
                  "any"
                ]
              }
            }
          },
          "default": "[]"
        },
        {
          "name": "autoplay",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/VideoPlayer.vue",
              "range": [
                267,
                320
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "false",
              "2": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "src",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/VideoPlayer.vue",
              "range": [
                143,
                187
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "poster",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/VideoPlayer.vue",
              "range": [
                92,
                139
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "sources",
          "type": "any[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/VideoPlayer.vue",
              "range": [
                191,
                263
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "any[]",
            "schema": {
              "0": "any"
            }
          }
        },
        {
          "name": "autoplay",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/VideoPlayer.vue",
              "range": [
                267,
                320
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        }
      ]
    }
  },
  "IconCodeSandBox": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/icons/IconCodeSandBox.vue",
    "pascalName": "IconCodeSandBox",
    "kebabName": "icon-code-sand-box",
    "chunkName": "components/icon-code-sand-box",
    "shortPath": "node_modules/@nuxt-themes/elements/components/icons/IconCodeSandBox.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/icons/IconCodeSandBox.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "IconDocus": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/icons/IconDocus.vue",
    "pascalName": "IconDocus",
    "kebabName": "icon-docus",
    "chunkName": "components/icon-docus",
    "shortPath": "node_modules/@nuxt-themes/elements/components/icons/IconDocus.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/icons/IconDocus.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "IconNuxt": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/icons/IconNuxt.vue",
    "pascalName": "IconNuxt",
    "kebabName": "icon-nuxt",
    "chunkName": "components/icon-nuxt",
    "shortPath": "node_modules/@nuxt-themes/elements/components/icons/IconNuxt.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/icons/IconNuxt.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "IconNuxtContent": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/icons/IconNuxtContent.vue",
    "pascalName": "IconNuxtContent",
    "kebabName": "icon-nuxt-content",
    "chunkName": "components/icon-nuxt-content",
    "shortPath": "node_modules/@nuxt-themes/elements/components/icons/IconNuxtContent.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/icons/IconNuxtContent.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "IconNuxtLabs": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/icons/IconNuxtLabs.vue",
    "pascalName": "IconNuxtLabs",
    "kebabName": "icon-nuxt-labs",
    "chunkName": "components/icon-nuxt-labs",
    "shortPath": "node_modules/@nuxt-themes/elements/components/icons/IconNuxtLabs.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/icons/IconNuxtLabs.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "IconNuxtStudio": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/icons/IconNuxtStudio.vue",
    "pascalName": "IconNuxtStudio",
    "kebabName": "icon-nuxt-studio",
    "chunkName": "components/icon-nuxt-studio",
    "shortPath": "node_modules/@nuxt-themes/elements/components/icons/IconNuxtStudio.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/icons/IconNuxtStudio.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "IconStackBlitz": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/icons/IconStackBlitz.vue",
    "pascalName": "IconStackBlitz",
    "kebabName": "icon-stack-blitz",
    "chunkName": "components/icon-stack-blitz",
    "shortPath": "node_modules/@nuxt-themes/elements/components/icons/IconStackBlitz.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/icons/IconStackBlitz.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "IconVueTelescope": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/icons/IconVueTelescope.vue",
    "pascalName": "IconVueTelescope",
    "kebabName": "icon-vue-telescope",
    "chunkName": "components/icon-vue-telescope",
    "shortPath": "node_modules/@nuxt-themes/elements/components/icons/IconVueTelescope.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/icons/IconVueTelescope.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "BlockHero": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/landing/BlockHero.vue",
    "pascalName": "BlockHero",
    "kebabName": "block-hero",
    "chunkName": "components/block-hero",
    "shortPath": "node_modules/@nuxt-themes/elements/components/landing/BlockHero.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/BlockHero.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "cta",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string[] | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/BlockHero.vue",
              "range": [
                78,
                170
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string[] | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "array",
                "type": "string[]",
                "schema": [
                  "string"
                ]
              }
            }
          },
          "default": "[]"
        },
        {
          "name": "secondary",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string[] | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/BlockHero.vue",
              "range": [
                174,
                272
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string[] | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "array",
                "type": "string[]",
                "schema": [
                  "string"
                ]
              }
            }
          },
          "default": "[]"
        },
        {
          "name": "video",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/BlockHero.vue",
              "range": [
                276,
                343
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "snippet",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | string[] | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/BlockHero.vue",
              "range": [
                347,
                456
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | string[] | undefined",
            "schema": {
              "0": "undefined",
              "1": "string",
              "2": {
                "kind": "array",
                "type": "string[]",
                "schema": [
                  "string"
                ]
              }
            }
          },
          "default": "\"\""
        }
      ],
      "slots": [
        {
          "name": "announce",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        },
        {
          "name": "title",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        },
        {
          "name": "description",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        },
        {
          "name": "extra",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        },
        {
          "name": "actions",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        },
        {
          "name": "support",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { announce?(_: { unwrap: string; }): any; title?(_: { unwrap: string; }): any; description?(_: { unwrap: string; }): any; extra?(_: { ...; }): any; actions?(_: { ...; }): any; support?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { announce?(_: { unwrap: string; }): any; title?(_: { unwrap: string; }): any; description?(_: { unwrap: string; }): any; extra?(_: { ...; }): any; actions?(_: { ...; }): any; support?(_: {}): any; }",
            "schema": {
              "announce": {
                "name": "announce",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              },
              "title": {
                "name": "title",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              },
              "description": {
                "name": "description",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              },
              "extra": {
                "name": "extra",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              },
              "actions": {
                "name": "actions",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              },
              "support": {
                "name": "support",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "cta",
          "type": "string[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/BlockHero.vue",
              "range": [
                78,
                170
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "string[]",
            "schema": {
              "0": "string"
            }
          }
        },
        {
          "name": "secondary",
          "type": "string[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/BlockHero.vue",
              "range": [
                174,
                272
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "string[]",
            "schema": {
              "0": "string"
            }
          }
        },
        {
          "name": "video",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/BlockHero.vue",
              "range": [
                276,
                343
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "snippet",
          "type": "string | string[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/BlockHero.vue",
              "range": [
                347,
                456
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | string[]",
            "schema": {
              "0": "string",
              "1": {
                "kind": "array",
                "type": "string[]",
                "schema": [
                  "string"
                ]
              }
            }
          }
        }
      ]
    }
  },
  "Card": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/landing/Card.vue",
    "pascalName": "Card",
    "kebabName": "card",
    "chunkName": "components/card",
    "shortPath": "node_modules/@nuxt-themes/elements/components/landing/Card.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/Card.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "icon",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/Card.vue",
              "range": [
                41,
                86
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        },
        {
          "name": "title",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        },
        {
          "name": "description",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; title?(_: { unwrap: string; }): any; description?(_: { unwrap: string; }): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; title?(_: { unwrap: string; }): any; description?(_: { unwrap: string; }): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              },
              "title": {
                "name": "title",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              },
              "description": {
                "name": "description",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "icon",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/Card.vue",
              "range": [
                41,
                86
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "CardGrid": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/landing/CardGrid.vue",
    "pascalName": "CardGrid",
    "kebabName": "card-grid",
    "chunkName": "components/card-grid",
    "shortPath": "node_modules/@nuxt-themes/elements/components/landing/CardGrid.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/CardGrid.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "title",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/CardGrid.vue",
              "range": [
                41,
                95
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"Features\""
        }
      ],
      "slots": [
        {
          "name": "root",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        },
        {
          "name": "title",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        },
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { root?(_: {}): any; title?(_: { unwrap: string; }): any; default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { root?(_: {}): any; title?(_: { unwrap: string; }): any; default?(_: {}): any; }",
            "schema": {
              "root": {
                "name": "root",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              },
              "title": {
                "name": "title",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: { unwrap: string; }) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: { unwrap: string; }) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: { unwrap: string; }): any",
                      "schema": []
                    }
                  }
                }
              },
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "title",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/landing/CardGrid.vue",
              "range": [
                41,
                95
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "VoltaBoard": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/volta/VoltaBoard.vue",
    "pascalName": "VoltaBoard",
    "kebabName": "volta-board",
    "chunkName": "components/volta-board",
    "shortPath": "node_modules/@nuxt-themes/elements/components/volta/VoltaBoard.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/volta/VoltaBoard.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "token",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/volta/VoltaBoard.vue",
              "range": [
                118,
                167
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/volta/VoltaBoard.vue",
              "range": [
                118,
                167
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "token",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/volta/VoltaBoard.vue",
              "range": [
                118,
                167
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ComponentPlayground": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/meta/ComponentPlayground.vue",
    "pascalName": "ComponentPlayground",
    "kebabName": "component-playground",
    "chunkName": "components/component-playground",
    "shortPath": "node_modules/@nuxt-themes/elements/components/meta/ComponentPlayground.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlayground.vue",
    "meta": {
      "type": null,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "ComponentPlaygroundData": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundData.vue",
    "pascalName": "ComponentPlaygroundData",
    "kebabName": "component-playground-data",
    "chunkName": "components/component-playground-data",
    "shortPath": "node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundData.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundData.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "modelValue",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Record<string, any> | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundData.vue",
              "range": [
                575,
                655
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Record<string, any> | undefined",
            "schema": {
              "0": "undefined",
              "1": "Record<string, any>"
            }
          },
          "default": "{}"
        },
        {
          "name": "componentData",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Record<string, any> | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundData.vue",
              "range": [
                659,
                742
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Record<string, any> | undefined",
            "schema": {
              "0": "undefined",
              "1": "Record<string, any>"
            }
          },
          "default": "{}"
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "update:modelValue",
          "type": "any[]",
          "signature": "(event: \"update:modelValue\", ...args: any[]): void",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                4469,
                4504
              ]
            }
          ],
          "schema": [
            "any"
          ]
        }
      ],
      "exposed": [
        {
          "name": "onUpdate:modelValue",
          "type": "((...args: any[]) => any) | undefined",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "enum",
            "type": "((...args: any[]) => any) | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "event",
                "type": "(...args: any[]): any",
                "schema": [
                  "any"
                ]
              }
            }
          }
        },
        {
          "name": "modelValue",
          "type": "Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundData.vue",
              "range": [
                575,
                655
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "componentData",
          "type": "Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundData.vue",
              "range": [
                659,
                742
              ]
            }
          ],
          "schema": "Record<string, any>"
        }
      ]
    }
  },
  "ComponentPlaygroundProps": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundProps.vue",
    "pascalName": "ComponentPlaygroundProps",
    "kebabName": "component-playground-props",
    "chunkName": "components/component-playground-props",
    "shortPath": "node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundProps.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundProps.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "modelValue",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "Record<string, any>",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundProps.vue",
              "range": [
                763,
                817
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundProps.vue",
              "range": [
                763,
                817
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "componentData",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "Record<string, any>",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundProps.vue",
              "range": [
                821,
                878
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundProps.vue",
              "range": [
                821,
                878
              ]
            }
          ],
          "schema": "Record<string, any>"
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "update:modelValue",
          "type": "any[]",
          "signature": "(event: \"update:modelValue\", ...args: any[]): void",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                4469,
                4504
              ]
            }
          ],
          "schema": [
            "any"
          ]
        }
      ],
      "exposed": [
        {
          "name": "onUpdate:modelValue",
          "type": "((...args: any[]) => any) | undefined",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "enum",
            "type": "((...args: any[]) => any) | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "event",
                "type": "(...args: any[]): any",
                "schema": [
                  "any"
                ]
              }
            }
          }
        },
        {
          "name": "modelValue",
          "type": "Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundProps.vue",
              "range": [
                763,
                817
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "componentData",
          "type": "Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundProps.vue",
              "range": [
                821,
                878
              ]
            }
          ],
          "schema": "Record<string, any>"
        }
      ]
    }
  },
  "ComponentPlaygroundSlots": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundSlots.vue",
    "pascalName": "ComponentPlaygroundSlots",
    "kebabName": "component-playground-slots",
    "chunkName": "components/component-playground-slots",
    "shortPath": "node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundSlots.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundSlots.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "componentData",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "Record<string, any>",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundSlots.vue",
              "range": [
                184,
                241
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundSlots.vue",
              "range": [
                184,
                241
              ]
            }
          ],
          "schema": "Record<string, any>"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "componentData",
          "type": "Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundSlots.vue",
              "range": [
                184,
                241
              ]
            }
          ],
          "schema": "Record<string, any>"
        }
      ]
    }
  },
  "ComponentPlaygroundTokens": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundTokens.vue",
    "pascalName": "ComponentPlaygroundTokens",
    "kebabName": "component-playground-tokens",
    "chunkName": "components/component-playground-tokens",
    "shortPath": "node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundTokens.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundTokens.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "componentData",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "Record<string, any>",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundTokens.vue",
              "range": [
                148,
                205
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundTokens.vue",
              "range": [
                148,
                205
              ]
            }
          ],
          "schema": "Record<string, any>"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "componentData",
          "type": "Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/ComponentPlaygroundTokens.vue",
              "range": [
                148,
                205
              ]
            }
          ],
          "schema": "Record<string, any>"
        }
      ]
    }
  },
  "PreviewLayout": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/meta/PreviewLayout.vue",
    "pascalName": "PreviewLayout",
    "kebabName": "preview-layout",
    "chunkName": "components/preview-layout",
    "shortPath": "node_modules/@nuxt-themes/elements/components/meta/PreviewLayout.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/PreviewLayout.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "TokensPlayground": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt-themes/elements/components/meta/TokensPlayground.vue",
    "pascalName": "TokensPlayground",
    "kebabName": "tokens-playground",
    "chunkName": "components/tokens-playground",
    "shortPath": "node_modules/@nuxt-themes/elements/components/meta/TokensPlayground.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/meta/TokensPlayground.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "ContentDoc": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue",
    "pascalName": "ContentDoc",
    "kebabName": "content-doc",
    "chunkName": "components/content-doc",
    "shortPath": "node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "path",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2492,
                2505
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          }
        },
        {
          "name": "query",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2510,
                2521
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "head",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2526,
                2540
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "false",
              "2": "true"
            }
          }
        },
        {
          "name": "tag",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2545,
                2557
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          }
        },
        {
          "name": "excerpt",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2562,
                2579
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "false",
              "2": "true"
            }
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{ doc: ParsedContent; refresh: () => Promise<void>; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2678,
                2819
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "{ doc: ParsedContent; refresh: () => Promise<void>; }",
            "schema": {
              "doc": {
                "name": "doc",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "ParsedContent",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
                    "range": [
                      2715,
                      2734
                    ]
                  }
                ],
                "schema": {
                  "kind": "object",
                  "type": "ParsedContent",
                  "schema": {
                    "excerpt": {
                      "name": "excerpt",
                      "global": false,
                      "description": "Excerpt",
                      "tags": [],
                      "required": false,
                      "type": "MarkdownRoot | undefined",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            2604,
                            2627
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "enum",
                        "type": "MarkdownRoot | undefined",
                        "schema": {
                          "0": "undefined",
                          "1": {
                            "kind": "object",
                            "type": "MarkdownRoot",
                            "schema": {
                              "type": {
                                "name": "type",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": true,
                                "type": "\"root\"",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1645,
                                      1658
                                    ]
                                  }
                                ],
                                "schema": "\"root\""
                              },
                              "children": {
                                "name": "children",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": true,
                                "type": "MarkdownNode[]",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1663,
                                      1688
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "array",
                                  "type": "MarkdownNode[]",
                                  "schema": {
                                    "0": {
                                      "kind": "object",
                                      "type": "MarkdownNode",
                                      "schema": {
                                        "type": {
                                          "name": "type",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": true,
                                          "type": "string",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1401,
                                                1414
                                              ]
                                            }
                                          ],
                                          "schema": "string"
                                        },
                                        "tag": {
                                          "name": "tag",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "string | undefined",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1419,
                                                1432
                                              ]
                                            }
                                          ],
                                          "schema": {
                                            "kind": "enum",
                                            "type": "string | undefined",
                                            "schema": {
                                              "0": "undefined",
                                              "1": "string"
                                            }
                                          }
                                        },
                                        "value": {
                                          "name": "value",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "string | undefined",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1437,
                                                1452
                                              ]
                                            }
                                          ],
                                          "schema": "string | undefined"
                                        },
                                        "props": {
                                          "name": "props",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "Record<string, any> | undefined",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1457,
                                                1485
                                              ]
                                            }
                                          ],
                                          "schema": {
                                            "kind": "enum",
                                            "type": "Record<string, any> | undefined",
                                            "schema": {
                                              "0": "undefined",
                                              "1": "Record<string, any>"
                                            }
                                          }
                                        },
                                        "content": {
                                          "name": "content",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "any",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1490,
                                                1504
                                              ]
                                            }
                                          ],
                                          "schema": "any"
                                        },
                                        "children": {
                                          "name": "children",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "MarkdownNode[] | undefined",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1509,
                                                1535
                                              ]
                                            }
                                          ],
                                          "schema": {
                                            "kind": "enum",
                                            "type": "MarkdownNode[] | undefined",
                                            "schema": {
                                              "0": "undefined",
                                              "1": "MarkdownNode[]"
                                            }
                                          }
                                        },
                                        "attributes": {
                                          "name": "attributes",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "Record<string, any> | undefined",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1540,
                                                1573
                                              ]
                                            }
                                          ],
                                          "schema": "Record<string, any> | undefined"
                                        },
                                        "fmAttributes": {
                                          "name": "fmAttributes",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "Record<string, any> | undefined",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1578,
                                                1613
                                              ]
                                            }
                                          ],
                                          "schema": "Record<string, any> | undefined"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "props": {
                                "name": "props",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Record<string, any> | undefined",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1693,
                                      1721
                                    ]
                                  }
                                ],
                                "schema": "Record<string, any> | undefined"
                              },
                              "toc": {
                                "name": "toc",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Toc | undefined",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1726,
                                      1736
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "enum",
                                  "type": "Toc | undefined",
                                  "schema": {
                                    "0": "undefined",
                                    "1": {
                                      "kind": "object",
                                      "type": "Toc",
                                      "schema": {
                                        "title": {
                                          "name": "title",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": true,
                                          "type": "string",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1289,
                                                1303
                                              ]
                                            }
                                          ],
                                          "schema": "string"
                                        },
                                        "depth": {
                                          "name": "depth",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": true,
                                          "type": "number",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1308,
                                                1322
                                              ]
                                            }
                                          ],
                                          "schema": "number"
                                        },
                                        "searchDepth": {
                                          "name": "searchDepth",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": true,
                                          "type": "number",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1327,
                                                1347
                                              ]
                                            }
                                          ],
                                          "schema": "number"
                                        },
                                        "links": {
                                          "name": "links",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": true,
                                          "type": "TocLink[]",
                                          "declarations": [
                                            {
                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1352,
                                                1369
                                              ]
                                            }
                                          ],
                                          "schema": {
                                            "kind": "array",
                                            "type": "TocLink[]",
                                            "schema": {
                                              "0": {
                                                "kind": "object",
                                                "type": "TocLink",
                                                "schema": {
                                                  "id": {
                                                    "name": "id",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "string",
                                                    "declarations": [
                                                      {
                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                        "range": [
                                                          1192,
                                                          1203
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "string"
                                                  },
                                                  "text": {
                                                    "name": "text",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "string",
                                                    "declarations": [
                                                      {
                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                        "range": [
                                                          1208,
                                                          1221
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "string"
                                                  },
                                                  "depth": {
                                                    "name": "depth",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "number",
                                                    "declarations": [
                                                      {
                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                        "range": [
                                                          1226,
                                                          1240
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "number"
                                                  },
                                                  "children": {
                                                    "name": "children",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": false,
                                                    "type": "TocLink[] | undefined",
                                                    "declarations": [
                                                      {
                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                        "range": [
                                                          1245,
                                                          1266
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "enum",
                                                      "type": "TocLink[] | undefined",
                                                      "schema": {
                                                        "0": "undefined",
                                                        "1": "TocLink[]"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "body": {
                      "name": "body",
                      "global": false,
                      "description": "Content body",
                      "tags": [],
                      "required": true,
                      "type": "MarkdownRoot | null",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            2668,
                            2694
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "enum",
                        "type": "MarkdownRoot | null",
                        "schema": {
                          "0": "null",
                          "1": "MarkdownRoot"
                        }
                      }
                    },
                    "layout": {
                      "name": "layout",
                      "global": false,
                      "description": "Layout",
                      "tags": [],
                      "required": false,
                      "type": "LayoutKey | undefined",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            2471,
                            2490
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "enum",
                        "type": "LayoutKey | undefined",
                        "schema": {
                          "0": "undefined",
                          "1": "\"default\"",
                          "2": "\"article\"",
                          "3": "\"page\""
                        }
                      }
                    },
                    "_id": {
                      "name": "_id",
                      "global": false,
                      "description": "Content id",
                      "tags": [],
                      "required": true,
                      "type": "string",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            393,
                            405
                          ]
                        }
                      ],
                      "schema": "string"
                    },
                    "_source": {
                      "name": "_source",
                      "global": false,
                      "description": "Content source",
                      "tags": [],
                      "required": false,
                      "type": "string | undefined",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            448,
                            465
                          ]
                        }
                      ],
                      "schema": "string | undefined"
                    },
                    "_path": {
                      "name": "_path",
                      "global": false,
                      "description": "Content path, this path is source agnostic and it the content my live in any source",
                      "tags": [],
                      "required": false,
                      "type": "string | undefined",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            577,
                            592
                          ]
                        }
                      ],
                      "schema": "string | undefined"
                    },
                    "title": {
                      "name": "title",
                      "global": false,
                      "description": "Content title",
                      "tags": [],
                      "required": false,
                      "type": "string | undefined",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            634,
                            649
                          ]
                        }
                      ],
                      "schema": "string | undefined"
                    },
                    "_draft": {
                      "name": "_draft",
                      "global": false,
                      "description": "Content draft status",
                      "tags": [],
                      "required": false,
                      "type": "boolean | undefined",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            698,
                            715
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "enum",
                        "type": "boolean | undefined",
                        "schema": {
                          "0": "undefined",
                          "1": "false",
                          "2": "true"
                        }
                      }
                    },
                    "_partial": {
                      "name": "_partial",
                      "global": false,
                      "description": "Content partial status",
                      "tags": [],
                      "required": false,
                      "type": "boolean | undefined",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            766,
                            785
                          ]
                        }
                      ],
                      "schema": "boolean | undefined"
                    },
                    "_locale": {
                      "name": "_locale",
                      "global": false,
                      "description": "Content locale",
                      "tags": [],
                      "required": false,
                      "type": "string | undefined",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            828,
                            845
                          ]
                        }
                      ],
                      "schema": "string | undefined"
                    },
                    "_type": {
                      "name": "_type",
                      "global": false,
                      "description": "File type of the content, i.e `markdown`",
                      "tags": [],
                      "required": false,
                      "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\" | undefined",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            914,
                            959
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "enum",
                        "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\" | undefined",
                        "schema": {
                          "0": "undefined",
                          "1": "\"markdown\"",
                          "2": "\"yaml\"",
                          "3": "\"json\"",
                          "4": "\"csv\""
                        }
                      }
                    },
                    "_file": {
                      "name": "_file",
                      "global": false,
                      "description": "Path to the file relative to the content directory",
                      "tags": [],
                      "required": false,
                      "type": "string | undefined",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1038,
                            1053
                          ]
                        }
                      ],
                      "schema": "string | undefined"
                    },
                    "_extension": {
                      "name": "_extension",
                      "global": false,
                      "description": "Extension of the file",
                      "tags": [],
                      "required": false,
                      "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\" | undefined",
                      "declarations": [
                        {
                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1103,
                            1165
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "enum",
                        "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\" | undefined",
                        "schema": {
                          "0": "undefined",
                          "1": "\"yaml\"",
                          "2": "\"json\"",
                          "3": "\"csv\"",
                          "4": "\"md\"",
                          "5": "\"yml\"",
                          "6": "\"json5\""
                        }
                      }
                    }
                  }
                }
              },
              "refresh": {
                "name": "refresh",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "() => Promise<void>",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
                    "range": [
                      2751,
                      2780
                    ]
                  }
                ],
                "schema": {
                  "kind": "event",
                  "type": "(): Promise<void>"
                }
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default: (context: { doc: ParsedContent; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { ...; }>[] | undefined; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2656,
                2830
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default: (context: { doc: ParsedContent; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { ...; }>[] | undefined; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "(context: { doc: ParsedContent; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { [key: string]: any; }>[] | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
                    "range": [
                      2678,
                      2819
                    ]
                  }
                ],
                "schema": {
                  "kind": "event",
                  "type": "(context: { doc: ParsedContent; refresh: () => Promise<void>; }): VNode<RendererNode, RendererElement, { [key: string]: any; }>[] | undefined",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "tag",
          "type": "string",
          "description": "The tag to use for the renderer element if it is used.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                1564,
                1660
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "excerpt",
          "type": "boolean",
          "description": "Whether or not to render the excerpt.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                1748,
                1825
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "path",
          "type": "string | undefined",
          "description": "The path of the content to load from content source.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                1973,
                2073
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          }
        },
        {
          "name": "query",
          "type": "QueryBuilderParams | undefined",
          "description": "A query builder params object to be passed to <ContentQuery /> component.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2175,
                2287
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "QueryBuilderParams | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "object",
                "type": "QueryBuilderParams",
                "schema": {
                  "first": {
                    "name": "first",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "boolean | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9262,
                          9278
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "boolean | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": "false",
                        "2": "true"
                      }
                    }
                  },
                  "skip": {
                    "name": "skip",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "number | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9283,
                          9297
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "number | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": "number"
                      }
                    }
                  },
                  "limit": {
                    "name": "limit",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "number | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9302,
                          9317
                        ]
                      }
                    ],
                    "schema": "number | undefined"
                  },
                  "only": {
                    "name": "only",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "string[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9322,
                          9338
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "string[] | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "array",
                          "type": "string[]",
                          "schema": [
                            "string"
                          ]
                        }
                      }
                    }
                  },
                  "without": {
                    "name": "without",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "string[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9343,
                          9362
                        ]
                      }
                    ],
                    "schema": "string[] | undefined"
                  },
                  "sort": {
                    "name": "sort",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "SortOptions[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9367,
                          9388
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "SortOptions[] | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "array",
                          "type": "SortOptions[]",
                          "schema": [
                            {
                              "kind": "enum",
                              "type": "SortOptions",
                              "schema": [
                                {
                                  "kind": "object",
                                  "type": "SortParams",
                                  "schema": {
                                    "$locale": {
                                      "name": "$locale",
                                      "global": false,
                                      "description": "Locale specifier for sorting\nA string with a BCP 47 language tag",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "undefined"
                                        }
                                      ],
                                      "required": false,
                                      "type": "string | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            3675,
                                            3692
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "enum",
                                        "type": "string | undefined",
                                        "schema": {
                                          "0": "undefined",
                                          "1": "string"
                                        }
                                      }
                                    },
                                    "$numeric": {
                                      "name": "$numeric",
                                      "global": false,
                                      "description": "Whether numeric collation should be used, such that \"1\" < \"2\" < \"10\".\nPossible values are `true` and `false`;",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "false"
                                        }
                                      ],
                                      "required": false,
                                      "type": "boolean | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            3866,
                                            3885
                                          ]
                                        }
                                      ],
                                      "schema": "boolean | undefined"
                                    },
                                    "$caseFirst": {
                                      "name": "$caseFirst",
                                      "global": false,
                                      "description": "Whether upper case or lower case should sort first.\nPossible values are `\"upper\"`, `\"lower\"`, or `\"false\"`",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "\"depends on locale\""
                                        }
                                      ],
                                      "required": false,
                                      "type": "\"upper\" | \"lower\" | \"false\" | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            4070,
                                            4111
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "enum",
                                        "type": "\"upper\" | \"lower\" | \"false\" | undefined",
                                        "schema": {
                                          "0": "undefined",
                                          "1": "\"upper\"",
                                          "2": "\"lower\"",
                                          "3": "\"false\""
                                        }
                                      }
                                    },
                                    "$sensitivity": {
                                      "name": "$sensitivity",
                                      "global": false,
                                      "description": "Which differences in the strings should lead to non-zero result values. Possible values are:\n - \"base\": Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.\n - \"accent\": Only strings that differ in base letters or accents and other diacritic marks compare as unequal. Examples: a ≠ b, a ≠ á, a = A.\n - \"case\": Only strings that differ in base letters or case compare as unequal. Examples: a ≠ b, a = á, a ≠ A.\n - \"variant\": Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal. Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A.",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "\"variant\""
                                        }
                                      ],
                                      "required": false,
                                      "type": "\"base\" | \"accent\" | \"case\" | \"variant\" | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            4850,
                                            4904
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "enum",
                                        "type": "\"base\" | \"accent\" | \"case\" | \"variant\" | undefined",
                                        "schema": {
                                          "0": "undefined",
                                          "1": "\"base\"",
                                          "2": "\"accent\"",
                                          "3": "\"case\"",
                                          "4": "\"variant\""
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "kind": "object",
                                  "type": "SortFields",
                                  "schema": {}
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "where": {
                    "name": "where",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "QueryBuilderWhere[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9393,
                          9421
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "QueryBuilderWhere[] | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "array",
                          "type": "QueryBuilderWhere[]",
                          "schema": [
                            {
                              "kind": "object",
                              "type": "QueryBuilderWhere",
                              "schema": {
                                "$and": {
                                  "name": "$and",
                                  "global": false,
                                  "description": "Match only if all of nested conditions are true",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n $and: [\n   { score: { $gte: 5 } },\n   { score: { $lte: 10 } }\n ]\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "QueryBuilderWhere[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        5401,
                                        5428
                                      ]
                                    }
                                  ],
                                  "schema": "QueryBuilderWhere[] | undefined"
                                },
                                "$or": {
                                  "name": "$or",
                                  "global": false,
                                  "description": "Match if any of nested conditions is true",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n $or: [\n   { score: { $gt: 5 } },\n   { score: { $lt: 3 } }\n ]\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "QueryBuilderWhere[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        5672,
                                        5698
                                      ]
                                    }
                                  ],
                                  "schema": "QueryBuilderWhere[] | undefined"
                                },
                                "$not": {
                                  "name": "$not",
                                  "global": false,
                                  "description": "Match is condition is false",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $not: 'Hello World'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        5895,
                                        5957
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "number",
                                      "3": "false",
                                      "4": "true",
                                      "5": {
                                        "kind": "object",
                                        "type": "RegExp",
                                        "schema": {}
                                      },
                                      "6": "QueryBuilderWhere"
                                    }
                                  }
                                },
                                "$eq": {
                                  "name": "$eq",
                                  "global": false,
                                  "description": "Match if item equals condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $eq: 'Hello World'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6156,
                                        6197
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | number | boolean | RegExp | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "number",
                                      "3": "false",
                                      "4": "true",
                                      "5": "RegExp"
                                    }
                                  }
                                },
                                "$ne": {
                                  "name": "$ne",
                                  "global": false,
                                  "description": "Match if item not equals condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $ne: 100\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6390,
                                        6431
                                      ]
                                    }
                                  ],
                                  "schema": "string | number | boolean | RegExp | undefined"
                                },
                                "$gt": {
                                  "name": "$gt",
                                  "global": false,
                                  "description": "Check if item is greater than condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $gt: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6629,
                                        6642
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$gte": {
                                  "name": "$gte",
                                  "global": false,
                                  "description": "Check if item is greater than or equal to condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $gte: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6853,
                                        6867
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$lt": {
                                  "name": "$lt",
                                  "global": false,
                                  "description": "Check if item is less than condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $lt: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7062,
                                        7075
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$lte": {
                                  "name": "$lte",
                                  "global": false,
                                  "description": "Check if item is less than or equal to condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $lte: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7283,
                                        7297
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$regex": {
                                  "name": "$regex",
                                  "global": false,
                                  "description": "Provides regular expression capabilities for pattern matching strings.",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $regex: /^foo/\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | RegExp | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7531,
                                        7556
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | RegExp | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "RegExp"
                                    }
                                  }
                                },
                                "$type": {
                                  "name": "$type",
                                  "global": false,
                                  "description": "Match if type of item equals condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n field: {\n   $type: 'boolean'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7760,
                                        7775
                                      ]
                                    }
                                  ],
                                  "schema": "string | undefined"
                                },
                                "$exists": {
                                  "name": "$exists",
                                  "global": false,
                                  "description": "Check key existence",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n tag: {\n   $exists: false\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "boolean | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7956,
                                        7974
                                      ]
                                    }
                                  ],
                                  "schema": "boolean | undefined"
                                },
                                "$contains": {
                                  "name": "$contains",
                                  "global": false,
                                  "description": "Match if item contains every condition or match every rule in condition array",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $contains: ['Hello', 'World']\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | (string | number | boolean)[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        8231,
                                        8304
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | number | boolean | (string | number | boolean)[] | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "number",
                                      "3": "false",
                                      "4": "true",
                                      "5": {
                                        "kind": "array",
                                        "type": "(string | number | boolean)[]",
                                        "schema": [
                                          {
                                            "kind": "enum",
                                            "type": "string | number | boolean",
                                            "schema": [
                                              "string",
                                              "number",
                                              "false",
                                              "true"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "$containsAny": {
                                  "name": "$containsAny",
                                  "global": false,
                                  "description": "Match if item contains at least one rule from condition array",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $containsAny: ['Hello', 'World']\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "(string | number | boolean)[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        8547,
                                        8595
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "(string | number | boolean)[] | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "(string | number | boolean)[]"
                                    }
                                  }
                                },
                                "$icontains": {
                                  "name": "$icontains",
                                  "global": false,
                                  "description": "Ignore case contains",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $icontains: 'hello world'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        8791,
                                        8811
                                      ]
                                    }
                                  ],
                                  "schema": "string | undefined"
                                },
                                "$in": {
                                  "name": "$in",
                                  "global": false,
                                  "description": "Match if item is in condition array",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n category: {\n   $in: ['sport', 'nature', 'travel']\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | (string | number | boolean)[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        9034,
                                        9082
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | (string | number | boolean)[] | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "(string | number | boolean)[]"
                                    }
                                  }
                                },
                                "title": {
                                  "name": "title",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_id": {
                                  "name": "_id",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_source": {
                                  "name": "_source",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_path": {
                                  "name": "_path",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_draft": {
                                  "name": "_draft",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_partial": {
                                  "name": "_partial",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_locale": {
                                  "name": "_locale",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_type": {
                                  "name": "_type",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_file": {
                                  "name": "_file",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_extension": {
                                  "name": "_extension",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "surround": {
                    "name": "surround",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "{ query: string | QueryBuilderWhere; before?: number | undefined; after?: number | undefined; } | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9426,
                          9537
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "{ query: string | QueryBuilderWhere; before?: number | undefined; after?: number | undefined; } | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "object",
                          "type": "{ query: string | QueryBuilderWhere; before?: number | undefined; after?: number | undefined; }",
                          "schema": {
                            "query": {
                              "name": "query",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "string | QueryBuilderWhere",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                  "range": [
                                    9447,
                                    9481
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "string | QueryBuilderWhere",
                                "schema": {
                                  "0": "string",
                                  "1": "QueryBuilderWhere"
                                }
                              }
                            },
                            "before": {
                              "name": "before",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "number | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                  "range": [
                                    9490,
                                    9506
                                  ]
                                }
                              ],
                              "schema": "number | undefined"
                            },
                            "after": {
                              "name": "after",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "number | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                  "range": [
                                    9515,
                                    9530
                                  ]
                                }
                              ],
                              "schema": "number | undefined"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "head",
          "type": "boolean | undefined",
          "description": "Whether or not to map the document data to the `head` property.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2379,
                2480
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "false",
              "2": "true"
            }
          }
        }
      ]
    }
  },
  "ContentList": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentList.vue",
    "pascalName": "ContentList",
    "kebabName": "content-list",
    "chunkName": "components/content-list",
    "shortPath": "node_modules/@nuxt/content/dist/runtime/components/ContentList.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "path",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                1275,
                1288
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          }
        },
        {
          "name": "query",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                1293,
                1304
              ]
            }
          ],
          "schema": "any"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{ list: ParsedContent[]; refresh: () => Promise<void>; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                1404,
                1548
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "{ list: ParsedContent[]; refresh: () => Promise<void>; }",
            "schema": {
              "list": {
                "name": "list",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "ParsedContent[]",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
                    "range": [
                      1441,
                      1463
                    ]
                  }
                ],
                "schema": {
                  "kind": "array",
                  "type": "ParsedContent[]",
                  "schema": {
                    "0": {
                      "kind": "object",
                      "type": "ParsedContent",
                      "schema": {
                        "excerpt": {
                          "name": "excerpt",
                          "global": false,
                          "description": "Excerpt",
                          "tags": [],
                          "required": false,
                          "type": "MarkdownRoot | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                2604,
                                2627
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "MarkdownRoot | undefined",
                            "schema": {
                              "0": "undefined",
                              "1": {
                                "kind": "object",
                                "type": "MarkdownRoot",
                                "schema": {
                                  "type": {
                                    "name": "type",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "\"root\"",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1645,
                                          1658
                                        ]
                                      }
                                    ],
                                    "schema": "\"root\""
                                  },
                                  "children": {
                                    "name": "children",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "MarkdownNode[]",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1663,
                                          1688
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "array",
                                      "type": "MarkdownNode[]",
                                      "schema": {
                                        "0": {
                                          "kind": "object",
                                          "type": "MarkdownNode",
                                          "schema": {
                                            "type": {
                                              "name": "type",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1401,
                                                    1414
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "tag": {
                                              "name": "tag",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "string | undefined",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1419,
                                                    1432
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "enum",
                                                "type": "string | undefined",
                                                "schema": {
                                                  "0": "undefined",
                                                  "1": "string"
                                                }
                                              }
                                            },
                                            "value": {
                                              "name": "value",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "string | undefined",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1437,
                                                    1452
                                                  ]
                                                }
                                              ],
                                              "schema": "string | undefined"
                                            },
                                            "props": {
                                              "name": "props",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "Record<string, any> | undefined",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1457,
                                                    1485
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "enum",
                                                "type": "Record<string, any> | undefined",
                                                "schema": {
                                                  "0": "undefined",
                                                  "1": "Record<string, any>"
                                                }
                                              }
                                            },
                                            "content": {
                                              "name": "content",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "any",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1490,
                                                    1504
                                                  ]
                                                }
                                              ],
                                              "schema": "any"
                                            },
                                            "children": {
                                              "name": "children",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "MarkdownNode[] | undefined",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1509,
                                                    1535
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "enum",
                                                "type": "MarkdownNode[] | undefined",
                                                "schema": {
                                                  "0": "undefined",
                                                  "1": "MarkdownNode[]"
                                                }
                                              }
                                            },
                                            "attributes": {
                                              "name": "attributes",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "Record<string, any> | undefined",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1540,
                                                    1573
                                                  ]
                                                }
                                              ],
                                              "schema": "Record<string, any> | undefined"
                                            },
                                            "fmAttributes": {
                                              "name": "fmAttributes",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "Record<string, any> | undefined",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1578,
                                                    1613
                                                  ]
                                                }
                                              ],
                                              "schema": "Record<string, any> | undefined"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "props": {
                                    "name": "props",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, any> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1693,
                                          1721
                                        ]
                                      }
                                    ],
                                    "schema": "Record<string, any> | undefined"
                                  },
                                  "toc": {
                                    "name": "toc",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Toc | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1726,
                                          1736
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "Toc | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "object",
                                          "type": "Toc",
                                          "schema": {
                                            "title": {
                                              "name": "title",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1289,
                                                    1303
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "depth": {
                                              "name": "depth",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "number",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1308,
                                                    1322
                                                  ]
                                                }
                                              ],
                                              "schema": "number"
                                            },
                                            "searchDepth": {
                                              "name": "searchDepth",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "number",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1327,
                                                    1347
                                                  ]
                                                }
                                              ],
                                              "schema": "number"
                                            },
                                            "links": {
                                              "name": "links",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "TocLink[]",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1352,
                                                    1369
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "array",
                                                "type": "TocLink[]",
                                                "schema": {
                                                  "0": {
                                                    "kind": "object",
                                                    "type": "TocLink",
                                                    "schema": {
                                                      "id": {
                                                        "name": "id",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "string",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                            "range": [
                                                              1192,
                                                              1203
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "string"
                                                      },
                                                      "text": {
                                                        "name": "text",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "string",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                            "range": [
                                                              1208,
                                                              1221
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "string"
                                                      },
                                                      "depth": {
                                                        "name": "depth",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "number",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                            "range": [
                                                              1226,
                                                              1240
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "number"
                                                      },
                                                      "children": {
                                                        "name": "children",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [],
                                                        "required": false,
                                                        "type": "TocLink[] | undefined",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                            "range": [
                                                              1245,
                                                              1266
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "enum",
                                                          "type": "TocLink[] | undefined",
                                                          "schema": {
                                                            "0": "undefined",
                                                            "1": "TocLink[]"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "body": {
                          "name": "body",
                          "global": false,
                          "description": "Content body",
                          "tags": [],
                          "required": true,
                          "type": "MarkdownRoot | null",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                2668,
                                2694
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "MarkdownRoot | null",
                            "schema": {
                              "0": "null",
                              "1": "MarkdownRoot"
                            }
                          }
                        },
                        "layout": {
                          "name": "layout",
                          "global": false,
                          "description": "Layout",
                          "tags": [],
                          "required": false,
                          "type": "LayoutKey | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                2471,
                                2490
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "LayoutKey | undefined",
                            "schema": {
                              "0": "undefined",
                              "1": "\"default\"",
                              "2": "\"article\"",
                              "3": "\"page\""
                            }
                          }
                        },
                        "_id": {
                          "name": "_id",
                          "global": false,
                          "description": "Content id",
                          "tags": [],
                          "required": true,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                393,
                                405
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "_source": {
                          "name": "_source",
                          "global": false,
                          "description": "Content source",
                          "tags": [],
                          "required": false,
                          "type": "string | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                448,
                                465
                              ]
                            }
                          ],
                          "schema": "string | undefined"
                        },
                        "_path": {
                          "name": "_path",
                          "global": false,
                          "description": "Content path, this path is source agnostic and it the content my live in any source",
                          "tags": [],
                          "required": false,
                          "type": "string | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                577,
                                592
                              ]
                            }
                          ],
                          "schema": "string | undefined"
                        },
                        "title": {
                          "name": "title",
                          "global": false,
                          "description": "Content title",
                          "tags": [],
                          "required": false,
                          "type": "string | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                634,
                                649
                              ]
                            }
                          ],
                          "schema": "string | undefined"
                        },
                        "_draft": {
                          "name": "_draft",
                          "global": false,
                          "description": "Content draft status",
                          "tags": [],
                          "required": false,
                          "type": "boolean | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                698,
                                715
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "boolean | undefined",
                            "schema": {
                              "0": "undefined",
                              "1": "false",
                              "2": "true"
                            }
                          }
                        },
                        "_partial": {
                          "name": "_partial",
                          "global": false,
                          "description": "Content partial status",
                          "tags": [],
                          "required": false,
                          "type": "boolean | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                766,
                                785
                              ]
                            }
                          ],
                          "schema": "boolean | undefined"
                        },
                        "_locale": {
                          "name": "_locale",
                          "global": false,
                          "description": "Content locale",
                          "tags": [],
                          "required": false,
                          "type": "string | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                828,
                                845
                              ]
                            }
                          ],
                          "schema": "string | undefined"
                        },
                        "_type": {
                          "name": "_type",
                          "global": false,
                          "description": "File type of the content, i.e `markdown`",
                          "tags": [],
                          "required": false,
                          "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\" | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                914,
                                959
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\" | undefined",
                            "schema": {
                              "0": "undefined",
                              "1": "\"markdown\"",
                              "2": "\"yaml\"",
                              "3": "\"json\"",
                              "4": "\"csv\""
                            }
                          }
                        },
                        "_file": {
                          "name": "_file",
                          "global": false,
                          "description": "Path to the file relative to the content directory",
                          "tags": [],
                          "required": false,
                          "type": "string | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1038,
                                1053
                              ]
                            }
                          ],
                          "schema": "string | undefined"
                        },
                        "_extension": {
                          "name": "_extension",
                          "global": false,
                          "description": "Extension of the file",
                          "tags": [],
                          "required": false,
                          "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\" | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1103,
                                1165
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\" | undefined",
                            "schema": {
                              "0": "undefined",
                              "1": "\"yaml\"",
                              "2": "\"json\"",
                              "3": "\"csv\"",
                              "4": "\"md\"",
                              "5": "\"yml\"",
                              "6": "\"json5\""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "refresh": {
                "name": "refresh",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "() => Promise<void>",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
                    "range": [
                      1480,
                      1509
                    ]
                  }
                ],
                "schema": {
                  "kind": "event",
                  "type": "(): Promise<void>"
                }
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default: (context: { list: ParsedContent[]; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { ...; }>[] | undefined; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                1382,
                1559
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default: (context: { list: ParsedContent[]; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { ...; }>[] | undefined; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "(context: { list: ParsedContent[]; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { [key: string]: any; }>[] | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
                    "range": [
                      1404,
                      1548
                    ]
                  }
                ],
                "schema": {
                  "kind": "event",
                  "type": "(context: { list: ParsedContent[]; refresh: () => Promise<void>; }): VNode<RendererNode, RendererElement, { [key: string]: any; }>[] | undefined",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "path",
          "type": "string | undefined",
          "description": "The path of the content to load from content source.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                949,
                1049
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          }
        },
        {
          "name": "query",
          "type": "QueryBuilderParams | undefined",
          "description": "A query builder params object to be passed to <ContentQuery /> component.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                1151,
                1263
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "QueryBuilderParams | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "object",
                "type": "QueryBuilderParams",
                "schema": {
                  "first": {
                    "name": "first",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "boolean | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9262,
                          9278
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "boolean | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": "false",
                        "2": "true"
                      }
                    }
                  },
                  "skip": {
                    "name": "skip",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "number | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9283,
                          9297
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "number | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": "number"
                      }
                    }
                  },
                  "limit": {
                    "name": "limit",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "number | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9302,
                          9317
                        ]
                      }
                    ],
                    "schema": "number | undefined"
                  },
                  "only": {
                    "name": "only",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "string[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9322,
                          9338
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "string[] | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "array",
                          "type": "string[]",
                          "schema": [
                            "string"
                          ]
                        }
                      }
                    }
                  },
                  "without": {
                    "name": "without",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "string[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9343,
                          9362
                        ]
                      }
                    ],
                    "schema": "string[] | undefined"
                  },
                  "sort": {
                    "name": "sort",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "SortOptions[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9367,
                          9388
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "SortOptions[] | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "array",
                          "type": "SortOptions[]",
                          "schema": [
                            {
                              "kind": "enum",
                              "type": "SortOptions",
                              "schema": [
                                {
                                  "kind": "object",
                                  "type": "SortParams",
                                  "schema": {
                                    "$locale": {
                                      "name": "$locale",
                                      "global": false,
                                      "description": "Locale specifier for sorting\nA string with a BCP 47 language tag",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "undefined"
                                        }
                                      ],
                                      "required": false,
                                      "type": "string | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            3675,
                                            3692
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "enum",
                                        "type": "string | undefined",
                                        "schema": {
                                          "0": "undefined",
                                          "1": "string"
                                        }
                                      }
                                    },
                                    "$numeric": {
                                      "name": "$numeric",
                                      "global": false,
                                      "description": "Whether numeric collation should be used, such that \"1\" < \"2\" < \"10\".\nPossible values are `true` and `false`;",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "false"
                                        }
                                      ],
                                      "required": false,
                                      "type": "boolean | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            3866,
                                            3885
                                          ]
                                        }
                                      ],
                                      "schema": "boolean | undefined"
                                    },
                                    "$caseFirst": {
                                      "name": "$caseFirst",
                                      "global": false,
                                      "description": "Whether upper case or lower case should sort first.\nPossible values are `\"upper\"`, `\"lower\"`, or `\"false\"`",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "\"depends on locale\""
                                        }
                                      ],
                                      "required": false,
                                      "type": "\"upper\" | \"lower\" | \"false\" | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            4070,
                                            4111
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "enum",
                                        "type": "\"upper\" | \"lower\" | \"false\" | undefined",
                                        "schema": {
                                          "0": "undefined",
                                          "1": "\"upper\"",
                                          "2": "\"lower\"",
                                          "3": "\"false\""
                                        }
                                      }
                                    },
                                    "$sensitivity": {
                                      "name": "$sensitivity",
                                      "global": false,
                                      "description": "Which differences in the strings should lead to non-zero result values. Possible values are:\n - \"base\": Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.\n - \"accent\": Only strings that differ in base letters or accents and other diacritic marks compare as unequal. Examples: a ≠ b, a ≠ á, a = A.\n - \"case\": Only strings that differ in base letters or case compare as unequal. Examples: a ≠ b, a = á, a ≠ A.\n - \"variant\": Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal. Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A.",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "\"variant\""
                                        }
                                      ],
                                      "required": false,
                                      "type": "\"base\" | \"accent\" | \"case\" | \"variant\" | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            4850,
                                            4904
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "enum",
                                        "type": "\"base\" | \"accent\" | \"case\" | \"variant\" | undefined",
                                        "schema": {
                                          "0": "undefined",
                                          "1": "\"base\"",
                                          "2": "\"accent\"",
                                          "3": "\"case\"",
                                          "4": "\"variant\""
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "kind": "object",
                                  "type": "SortFields",
                                  "schema": {}
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "where": {
                    "name": "where",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "QueryBuilderWhere[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9393,
                          9421
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "QueryBuilderWhere[] | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "array",
                          "type": "QueryBuilderWhere[]",
                          "schema": [
                            {
                              "kind": "object",
                              "type": "QueryBuilderWhere",
                              "schema": {
                                "$and": {
                                  "name": "$and",
                                  "global": false,
                                  "description": "Match only if all of nested conditions are true",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n $and: [\n   { score: { $gte: 5 } },\n   { score: { $lte: 10 } }\n ]\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "QueryBuilderWhere[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        5401,
                                        5428
                                      ]
                                    }
                                  ],
                                  "schema": "QueryBuilderWhere[] | undefined"
                                },
                                "$or": {
                                  "name": "$or",
                                  "global": false,
                                  "description": "Match if any of nested conditions is true",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n $or: [\n   { score: { $gt: 5 } },\n   { score: { $lt: 3 } }\n ]\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "QueryBuilderWhere[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        5672,
                                        5698
                                      ]
                                    }
                                  ],
                                  "schema": "QueryBuilderWhere[] | undefined"
                                },
                                "$not": {
                                  "name": "$not",
                                  "global": false,
                                  "description": "Match is condition is false",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $not: 'Hello World'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        5895,
                                        5957
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "number",
                                      "3": "false",
                                      "4": "true",
                                      "5": {
                                        "kind": "object",
                                        "type": "RegExp",
                                        "schema": {}
                                      },
                                      "6": "QueryBuilderWhere"
                                    }
                                  }
                                },
                                "$eq": {
                                  "name": "$eq",
                                  "global": false,
                                  "description": "Match if item equals condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $eq: 'Hello World'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6156,
                                        6197
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | number | boolean | RegExp | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "number",
                                      "3": "false",
                                      "4": "true",
                                      "5": "RegExp"
                                    }
                                  }
                                },
                                "$ne": {
                                  "name": "$ne",
                                  "global": false,
                                  "description": "Match if item not equals condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $ne: 100\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6390,
                                        6431
                                      ]
                                    }
                                  ],
                                  "schema": "string | number | boolean | RegExp | undefined"
                                },
                                "$gt": {
                                  "name": "$gt",
                                  "global": false,
                                  "description": "Check if item is greater than condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $gt: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6629,
                                        6642
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$gte": {
                                  "name": "$gte",
                                  "global": false,
                                  "description": "Check if item is greater than or equal to condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $gte: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6853,
                                        6867
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$lt": {
                                  "name": "$lt",
                                  "global": false,
                                  "description": "Check if item is less than condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $lt: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7062,
                                        7075
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$lte": {
                                  "name": "$lte",
                                  "global": false,
                                  "description": "Check if item is less than or equal to condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $lte: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7283,
                                        7297
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$regex": {
                                  "name": "$regex",
                                  "global": false,
                                  "description": "Provides regular expression capabilities for pattern matching strings.",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $regex: /^foo/\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | RegExp | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7531,
                                        7556
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | RegExp | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "RegExp"
                                    }
                                  }
                                },
                                "$type": {
                                  "name": "$type",
                                  "global": false,
                                  "description": "Match if type of item equals condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n field: {\n   $type: 'boolean'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7760,
                                        7775
                                      ]
                                    }
                                  ],
                                  "schema": "string | undefined"
                                },
                                "$exists": {
                                  "name": "$exists",
                                  "global": false,
                                  "description": "Check key existence",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n tag: {\n   $exists: false\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "boolean | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7956,
                                        7974
                                      ]
                                    }
                                  ],
                                  "schema": "boolean | undefined"
                                },
                                "$contains": {
                                  "name": "$contains",
                                  "global": false,
                                  "description": "Match if item contains every condition or match every rule in condition array",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $contains: ['Hello', 'World']\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | (string | number | boolean)[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        8231,
                                        8304
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | number | boolean | (string | number | boolean)[] | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "number",
                                      "3": "false",
                                      "4": "true",
                                      "5": {
                                        "kind": "array",
                                        "type": "(string | number | boolean)[]",
                                        "schema": [
                                          {
                                            "kind": "enum",
                                            "type": "string | number | boolean",
                                            "schema": [
                                              "string",
                                              "number",
                                              "false",
                                              "true"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "$containsAny": {
                                  "name": "$containsAny",
                                  "global": false,
                                  "description": "Match if item contains at least one rule from condition array",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $containsAny: ['Hello', 'World']\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "(string | number | boolean)[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        8547,
                                        8595
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "(string | number | boolean)[] | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "(string | number | boolean)[]"
                                    }
                                  }
                                },
                                "$icontains": {
                                  "name": "$icontains",
                                  "global": false,
                                  "description": "Ignore case contains",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $icontains: 'hello world'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        8791,
                                        8811
                                      ]
                                    }
                                  ],
                                  "schema": "string | undefined"
                                },
                                "$in": {
                                  "name": "$in",
                                  "global": false,
                                  "description": "Match if item is in condition array",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n category: {\n   $in: ['sport', 'nature', 'travel']\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | (string | number | boolean)[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        9034,
                                        9082
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | (string | number | boolean)[] | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "(string | number | boolean)[]"
                                    }
                                  }
                                },
                                "title": {
                                  "name": "title",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_id": {
                                  "name": "_id",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_source": {
                                  "name": "_source",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_path": {
                                  "name": "_path",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_draft": {
                                  "name": "_draft",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_partial": {
                                  "name": "_partial",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_locale": {
                                  "name": "_locale",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_type": {
                                  "name": "_type",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_file": {
                                  "name": "_file",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_extension": {
                                  "name": "_extension",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "surround": {
                    "name": "surround",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "{ query: string | QueryBuilderWhere; before?: number | undefined; after?: number | undefined; } | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9426,
                          9537
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "{ query: string | QueryBuilderWhere; before?: number | undefined; after?: number | undefined; } | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "object",
                          "type": "{ query: string | QueryBuilderWhere; before?: number | undefined; after?: number | undefined; }",
                          "schema": {
                            "query": {
                              "name": "query",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "string | QueryBuilderWhere",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                  "range": [
                                    9447,
                                    9481
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "string | QueryBuilderWhere",
                                "schema": {
                                  "0": "string",
                                  "1": "QueryBuilderWhere"
                                }
                              }
                            },
                            "before": {
                              "name": "before",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "number | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                  "range": [
                                    9490,
                                    9506
                                  ]
                                }
                              ],
                              "schema": "number | undefined"
                            },
                            "after": {
                              "name": "after",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "number | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                  "range": [
                                    9515,
                                    9530
                                  ]
                                }
                              ],
                              "schema": "number | undefined"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ContentNavigation": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue",
    "pascalName": "ContentNavigation",
    "kebabName": "content-navigation",
    "chunkName": "components/content-navigation",
    "shortPath": "node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "query",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
              "range": [
                852,
                863
              ]
            }
          ],
          "schema": "any"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{ navigation: NavItem[]; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
              "range": [
                969,
                1074
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "{ navigation: NavItem[]; }",
            "schema": {
              "navigation": {
                "name": "navigation",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "NavItem[]",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
                    "range": [
                      1013,
                      1035
                    ]
                  }
                ],
                "schema": {
                  "kind": "array",
                  "type": "NavItem[]",
                  "schema": {
                    "0": {
                      "kind": "object",
                      "type": "NavItem",
                      "schema": {
                        "title": {
                          "name": "title",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                11336,
                                11350
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "_path": {
                          "name": "_path",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                11355,
                                11369
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "_id": {
                          "name": "_id",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "string | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                11374,
                                11387
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "string | undefined",
                            "schema": {
                              "0": "undefined",
                              "1": "string"
                            }
                          }
                        },
                        "_draft": {
                          "name": "_draft",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "boolean | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                11392,
                                11409
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "boolean | undefined",
                            "schema": {
                              "0": "undefined",
                              "1": "false",
                              "2": "true"
                            }
                          }
                        },
                        "children": {
                          "name": "children",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "NavItem[] | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                11414,
                                11435
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "NavItem[] | undefined",
                            "schema": {
                              "0": "undefined",
                              "1": "NavItem[]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default: ({ navigation }: { navigation: NavItem[]; }) => VNode<RendererNode, RendererElement, { ...; }>[] | undefined; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
              "range": [
                947,
                1085
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default: ({ navigation }: { navigation: NavItem[]; }) => VNode<RendererNode, RendererElement, { ...; }>[] | undefined; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "({ navigation }: { navigation: NavItem[]; }) => VNode<RendererNode, RendererElement, { [key: string]: any; }>[] | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
                    "range": [
                      969,
                      1074
                    ]
                  }
                ],
                "schema": {
                  "kind": "event",
                  "type": "({ navigation }: { navigation: NavItem[]; }): VNode<RendererNode, RendererElement, { [key: string]: any; }>[] | undefined",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "query",
          "type": "QueryBuilderParams | QueryBuilder<ParsedContentMeta> | undefined",
          "description": "A query to be passed to `fetchContentNavigation()`.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
              "range": [
                713,
                840
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "QueryBuilderParams | QueryBuilder<ParsedContentMeta> | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "object",
                "type": "QueryBuilderParams",
                "schema": {
                  "first": {
                    "name": "first",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "boolean | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9262,
                          9278
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "boolean | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": "false",
                        "2": "true"
                      }
                    }
                  },
                  "skip": {
                    "name": "skip",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "number | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9283,
                          9297
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "number | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": "number"
                      }
                    }
                  },
                  "limit": {
                    "name": "limit",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "number | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9302,
                          9317
                        ]
                      }
                    ],
                    "schema": "number | undefined"
                  },
                  "only": {
                    "name": "only",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "string[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9322,
                          9338
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "string[] | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "array",
                          "type": "string[]",
                          "schema": [
                            "string"
                          ]
                        }
                      }
                    }
                  },
                  "without": {
                    "name": "without",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "string[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9343,
                          9362
                        ]
                      }
                    ],
                    "schema": "string[] | undefined"
                  },
                  "sort": {
                    "name": "sort",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "SortOptions[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9367,
                          9388
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "SortOptions[] | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "array",
                          "type": "SortOptions[]",
                          "schema": [
                            {
                              "kind": "enum",
                              "type": "SortOptions",
                              "schema": [
                                {
                                  "kind": "object",
                                  "type": "SortParams",
                                  "schema": {
                                    "$locale": {
                                      "name": "$locale",
                                      "global": false,
                                      "description": "Locale specifier for sorting\nA string with a BCP 47 language tag",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "undefined"
                                        }
                                      ],
                                      "required": false,
                                      "type": "string | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            3675,
                                            3692
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "enum",
                                        "type": "string | undefined",
                                        "schema": {
                                          "0": "undefined",
                                          "1": "string"
                                        }
                                      }
                                    },
                                    "$numeric": {
                                      "name": "$numeric",
                                      "global": false,
                                      "description": "Whether numeric collation should be used, such that \"1\" < \"2\" < \"10\".\nPossible values are `true` and `false`;",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "false"
                                        }
                                      ],
                                      "required": false,
                                      "type": "boolean | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            3866,
                                            3885
                                          ]
                                        }
                                      ],
                                      "schema": "boolean | undefined"
                                    },
                                    "$caseFirst": {
                                      "name": "$caseFirst",
                                      "global": false,
                                      "description": "Whether upper case or lower case should sort first.\nPossible values are `\"upper\"`, `\"lower\"`, or `\"false\"`",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "\"depends on locale\""
                                        }
                                      ],
                                      "required": false,
                                      "type": "\"upper\" | \"lower\" | \"false\" | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            4070,
                                            4111
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "enum",
                                        "type": "\"upper\" | \"lower\" | \"false\" | undefined",
                                        "schema": {
                                          "0": "undefined",
                                          "1": "\"upper\"",
                                          "2": "\"lower\"",
                                          "3": "\"false\""
                                        }
                                      }
                                    },
                                    "$sensitivity": {
                                      "name": "$sensitivity",
                                      "global": false,
                                      "description": "Which differences in the strings should lead to non-zero result values. Possible values are:\n - \"base\": Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.\n - \"accent\": Only strings that differ in base letters or accents and other diacritic marks compare as unequal. Examples: a ≠ b, a ≠ á, a = A.\n - \"case\": Only strings that differ in base letters or case compare as unequal. Examples: a ≠ b, a = á, a ≠ A.\n - \"variant\": Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal. Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A.",
                                      "tags": [
                                        {
                                          "name": "default",
                                          "text": "\"variant\""
                                        }
                                      ],
                                      "required": false,
                                      "type": "\"base\" | \"accent\" | \"case\" | \"variant\" | undefined",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            4850,
                                            4904
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "enum",
                                        "type": "\"base\" | \"accent\" | \"case\" | \"variant\" | undefined",
                                        "schema": {
                                          "0": "undefined",
                                          "1": "\"base\"",
                                          "2": "\"accent\"",
                                          "3": "\"case\"",
                                          "4": "\"variant\""
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "kind": "object",
                                  "type": "SortFields",
                                  "schema": {}
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "where": {
                    "name": "where",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "QueryBuilderWhere[] | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9393,
                          9421
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "QueryBuilderWhere[] | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "array",
                          "type": "QueryBuilderWhere[]",
                          "schema": [
                            {
                              "kind": "object",
                              "type": "QueryBuilderWhere",
                              "schema": {
                                "$and": {
                                  "name": "$and",
                                  "global": false,
                                  "description": "Match only if all of nested conditions are true",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n $and: [\n   { score: { $gte: 5 } },\n   { score: { $lte: 10 } }\n ]\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "QueryBuilderWhere[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        5401,
                                        5428
                                      ]
                                    }
                                  ],
                                  "schema": "QueryBuilderWhere[] | undefined"
                                },
                                "$or": {
                                  "name": "$or",
                                  "global": false,
                                  "description": "Match if any of nested conditions is true",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n $or: [\n   { score: { $gt: 5 } },\n   { score: { $lt: 3 } }\n ]\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "QueryBuilderWhere[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        5672,
                                        5698
                                      ]
                                    }
                                  ],
                                  "schema": "QueryBuilderWhere[] | undefined"
                                },
                                "$not": {
                                  "name": "$not",
                                  "global": false,
                                  "description": "Match is condition is false",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $not: 'Hello World'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        5895,
                                        5957
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "number",
                                      "3": "false",
                                      "4": "true",
                                      "5": {
                                        "kind": "object",
                                        "type": "RegExp",
                                        "schema": {}
                                      },
                                      "6": "QueryBuilderWhere"
                                    }
                                  }
                                },
                                "$eq": {
                                  "name": "$eq",
                                  "global": false,
                                  "description": "Match if item equals condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $eq: 'Hello World'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6156,
                                        6197
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | number | boolean | RegExp | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "number",
                                      "3": "false",
                                      "4": "true",
                                      "5": "RegExp"
                                    }
                                  }
                                },
                                "$ne": {
                                  "name": "$ne",
                                  "global": false,
                                  "description": "Match if item not equals condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $ne: 100\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6390,
                                        6431
                                      ]
                                    }
                                  ],
                                  "schema": "string | number | boolean | RegExp | undefined"
                                },
                                "$gt": {
                                  "name": "$gt",
                                  "global": false,
                                  "description": "Check if item is greater than condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $gt: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6629,
                                        6642
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$gte": {
                                  "name": "$gte",
                                  "global": false,
                                  "description": "Check if item is greater than or equal to condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $gte: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        6853,
                                        6867
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$lt": {
                                  "name": "$lt",
                                  "global": false,
                                  "description": "Check if item is less than condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $lt: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7062,
                                        7075
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$lte": {
                                  "name": "$lte",
                                  "global": false,
                                  "description": "Check if item is less than or equal to condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n score: {\n   $lte: 99.5\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "number | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7283,
                                        7297
                                      ]
                                    }
                                  ],
                                  "schema": "number | undefined"
                                },
                                "$regex": {
                                  "name": "$regex",
                                  "global": false,
                                  "description": "Provides regular expression capabilities for pattern matching strings.",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $regex: /^foo/\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | RegExp | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7531,
                                        7556
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | RegExp | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "RegExp"
                                    }
                                  }
                                },
                                "$type": {
                                  "name": "$type",
                                  "global": false,
                                  "description": "Match if type of item equals condition",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n field: {\n   $type: 'boolean'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7760,
                                        7775
                                      ]
                                    }
                                  ],
                                  "schema": "string | undefined"
                                },
                                "$exists": {
                                  "name": "$exists",
                                  "global": false,
                                  "description": "Check key existence",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n tag: {\n   $exists: false\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "boolean | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        7956,
                                        7974
                                      ]
                                    }
                                  ],
                                  "schema": "boolean | undefined"
                                },
                                "$contains": {
                                  "name": "$contains",
                                  "global": false,
                                  "description": "Match if item contains every condition or match every rule in condition array",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $contains: ['Hello', 'World']\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | number | boolean | (string | number | boolean)[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        8231,
                                        8304
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | number | boolean | (string | number | boolean)[] | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "number",
                                      "3": "false",
                                      "4": "true",
                                      "5": {
                                        "kind": "array",
                                        "type": "(string | number | boolean)[]",
                                        "schema": [
                                          {
                                            "kind": "enum",
                                            "type": "string | number | boolean",
                                            "schema": [
                                              "string",
                                              "number",
                                              "false",
                                              "true"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "$containsAny": {
                                  "name": "$containsAny",
                                  "global": false,
                                  "description": "Match if item contains at least one rule from condition array",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $containsAny: ['Hello', 'World']\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "(string | number | boolean)[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        8547,
                                        8595
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "(string | number | boolean)[] | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "(string | number | boolean)[]"
                                    }
                                  }
                                },
                                "$icontains": {
                                  "name": "$icontains",
                                  "global": false,
                                  "description": "Ignore case contains",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n title: {\n   $icontains: 'hello world'\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        8791,
                                        8811
                                      ]
                                    }
                                  ],
                                  "schema": "string | undefined"
                                },
                                "$in": {
                                  "name": "$in",
                                  "global": false,
                                  "description": "Match if item is in condition array",
                                  "tags": [
                                    {
                                      "name": "example",
                                      "text": "```ts\nqueryContent().where({\n category: {\n   $in: ['sport', 'nature', 'travel']\n }\n})\n```"
                                    }
                                  ],
                                  "required": false,
                                  "type": "string | (string | number | boolean)[] | undefined",
                                  "declarations": [
                                    {
                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        9034,
                                        9082
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "enum",
                                    "type": "string | (string | number | boolean)[] | undefined",
                                    "schema": {
                                      "0": "undefined",
                                      "1": "string",
                                      "2": "(string | number | boolean)[]"
                                    }
                                  }
                                },
                                "title": {
                                  "name": "title",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_id": {
                                  "name": "_id",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_source": {
                                  "name": "_source",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_path": {
                                  "name": "_path",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_draft": {
                                  "name": "_draft",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_partial": {
                                  "name": "_partial",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_locale": {
                                  "name": "_locale",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_type": {
                                  "name": "_type",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_file": {
                                  "name": "_file",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                },
                                "_extension": {
                                  "name": "_extension",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": false,
                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                  "declarations": [],
                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "surround": {
                    "name": "surround",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "{ query: string | QueryBuilderWhere; before?: number | undefined; after?: number | undefined; } | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          9426,
                          9537
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "{ query: string | QueryBuilderWhere; before?: number | undefined; after?: number | undefined; } | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": {
                          "kind": "object",
                          "type": "{ query: string | QueryBuilderWhere; before?: number | undefined; after?: number | undefined; }",
                          "schema": {
                            "query": {
                              "name": "query",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "string | QueryBuilderWhere",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                  "range": [
                                    9447,
                                    9481
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "string | QueryBuilderWhere",
                                "schema": {
                                  "0": "string",
                                  "1": "QueryBuilderWhere"
                                }
                              }
                            },
                            "before": {
                              "name": "before",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "number | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                  "range": [
                                    9490,
                                    9506
                                  ]
                                }
                              ],
                              "schema": "number | undefined"
                            },
                            "after": {
                              "name": "after",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "number | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                  "range": [
                                    9515,
                                    9530
                                  ]
                                }
                              ],
                              "schema": "number | undefined"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "2": "QueryBuilder<ParsedContentMeta>"
            }
          }
        },
        {
          "name": "navigation",
          "type": "NavItem[] | null",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
              "range": [
                410,
                458
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "NavItem[] | null",
            "schema": {
              "0": "null",
              "1": {
                "kind": "array",
                "type": "NavItem[]",
                "schema": [
                  {
                    "kind": "object",
                    "type": "NavItem",
                    "schema": {
                      "title": {
                        "name": "title",
                        "global": false,
                        "description": "",
                        "tags": [],
                        "required": true,
                        "type": "string",
                        "declarations": [
                          {
                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                            "range": [
                              11336,
                              11350
                            ]
                          }
                        ],
                        "schema": "string"
                      },
                      "_path": {
                        "name": "_path",
                        "global": false,
                        "description": "",
                        "tags": [],
                        "required": true,
                        "type": "string",
                        "declarations": [
                          {
                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                            "range": [
                              11355,
                              11369
                            ]
                          }
                        ],
                        "schema": "string"
                      },
                      "_id": {
                        "name": "_id",
                        "global": false,
                        "description": "",
                        "tags": [],
                        "required": false,
                        "type": "string | undefined",
                        "declarations": [
                          {
                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                            "range": [
                              11374,
                              11387
                            ]
                          }
                        ],
                        "schema": {
                          "kind": "enum",
                          "type": "string | undefined",
                          "schema": {
                            "0": "undefined",
                            "1": "string"
                          }
                        }
                      },
                      "_draft": {
                        "name": "_draft",
                        "global": false,
                        "description": "",
                        "tags": [],
                        "required": false,
                        "type": "boolean | undefined",
                        "declarations": [
                          {
                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                            "range": [
                              11392,
                              11409
                            ]
                          }
                        ],
                        "schema": {
                          "kind": "enum",
                          "type": "boolean | undefined",
                          "schema": {
                            "0": "undefined",
                            "1": "false",
                            "2": "true"
                          }
                        }
                      },
                      "children": {
                        "name": "children",
                        "global": false,
                        "description": "",
                        "tags": [],
                        "required": false,
                        "type": "NavItem[] | undefined",
                        "declarations": [
                          {
                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                            "range": [
                              11414,
                              11435
                            ]
                          }
                        ],
                        "schema": {
                          "kind": "enum",
                          "type": "NavItem[] | undefined",
                          "schema": {
                            "0": "undefined",
                            "1": "NavItem[]"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    }
  },
  "ContentQuery": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentQuery.vue",
    "pascalName": "ContentQuery",
    "kebabName": "content-query",
    "chunkName": "components/content-query",
    "shortPath": "node_modules/@nuxt/content/dist/runtime/components/ContentQuery.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentQuery.vue",
    "meta": {
      "type": 0,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "ContentRenderer": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue",
    "pascalName": "ContentRenderer",
    "kebabName": "content-renderer",
    "chunkName": "components/content-renderer",
    "shortPath": "node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "value",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Record<string, any> | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                1234,
                1261
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Record<string, any> | undefined",
            "schema": {
              "0": "undefined",
              "1": "Record<string, any>"
            }
          },
          "default": "{}"
        },
        {
          "name": "tag",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                1266,
                1278
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"div\""
        },
        {
          "name": "excerpt",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                1283,
                1300
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "false",
              "2": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "tag",
          "type": "string",
          "description": "The tag to use for the renderer element if it is used.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                1151,
                1222
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "excerpt",
          "type": "boolean",
          "description": "Whether or not to render the excerpt.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                969,
                1046
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "value",
          "type": "Record<string, any>",
          "description": "The document to render.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                781,
                881
              ]
            }
          ],
          "schema": "Record<string, any>"
        }
      ]
    }
  },
  "ContentRendererMarkdown": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
    "pascalName": "ContentRendererMarkdown",
    "kebabName": "content-renderer-markdown",
    "chunkName": "components/content-renderer-markdown",
    "shortPath": "node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "value",
          "global": false,
          "description": "Content to render",
          "tags": [],
          "required": true,
          "type": "Record<string, any>",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                359,
                408
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                359,
                408
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "tag",
          "global": false,
          "description": "Root tag to use for rendering",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                556,
                603
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"div\""
        },
        {
          "name": "excerpt",
          "global": false,
          "description": "Render only the excerpt",
          "tags": [],
          "required": false,
          "type": "boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                453,
                505
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "false",
              "2": "true"
            }
          },
          "default": "false"
        },
        {
          "name": "components",
          "global": false,
          "description": "The map of custom components to use for rendering.",
          "tags": [],
          "required": false,
          "type": "Record<string, any> | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                675,
                734
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Record<string, any> | undefined",
            "schema": {
              "0": "undefined",
              "1": "Record<string, any>"
            }
          },
          "default": "{}"
        },
        {
          "name": "data",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Record<string, any> | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                739,
                792
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Record<string, any> | undefined",
            "schema": {
              "0": "undefined",
              "1": "Record<string, any>"
            }
          },
          "default": "{}"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "tag",
          "type": "string",
          "description": "Root tag to use for rendering",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                556,
                603
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "excerpt",
          "type": "boolean",
          "description": "Render only the excerpt",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                453,
                505
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "value",
          "type": "Record<string, any>",
          "description": "Content to render",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                359,
                408
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "components",
          "type": "Record<string, any>",
          "description": "The map of custom components to use for rendering.",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                675,
                734
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "data",
          "type": "Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                739,
                792
              ]
            }
          ],
          "schema": "Record<string, any>"
        }
      ]
    }
  },
  "ContentSlot": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue",
    "pascalName": "ContentSlot",
    "kebabName": "content-slot",
    "chunkName": "components/content-slot",
    "shortPath": "node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "use",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Function | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue.d.ts",
              "range": [
                881,
                895
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Function | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "object",
                "type": "Function",
                "schema": {}
              }
            }
          },
          "default": "void 0"
        },
        {
          "name": "unwrap",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue.d.ts",
              "range": [
                900,
                925
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "string",
              "2": "false",
              "3": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "use",
          "type": "Function | undefined",
          "description": "A slot name or function",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue.d.ts",
              "range": [
                606,
                682
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Function | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "object",
                "type": "Function",
                "schema": {}
              }
            }
          }
        },
        {
          "name": "unwrap",
          "type": "string | boolean",
          "description": "Tags to unwrap separated by spaces\nExample: 'ul li'",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue.d.ts",
              "range": [
                769,
                869
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | boolean",
            "schema": {
              "0": "string",
              "1": "false",
              "2": "true"
            }
          }
        }
      ]
    }
  },
  "DocumentDrivenEmpty": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue",
    "pascalName": "DocumentDrivenEmpty",
    "kebabName": "document-driven-empty",
    "chunkName": "components/document-driven-empty",
    "shortPath": "node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "value",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "ParsedContent",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue.d.ts",
              "range": [
                475,
                553
              ]
            },
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue.d.ts",
              "range": [
                475,
                553
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "ParsedContent",
            "schema": {
              "excerpt": {
                "name": "excerpt",
                "global": false,
                "description": "Excerpt",
                "tags": [],
                "required": false,
                "type": "MarkdownRoot | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2604,
                      2627
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "MarkdownRoot | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "object",
                      "type": "MarkdownRoot",
                      "schema": {
                        "type": {
                          "name": "type",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "\"root\"",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1645,
                                1658
                              ]
                            }
                          ],
                          "schema": "\"root\""
                        },
                        "children": {
                          "name": "children",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "MarkdownNode[]",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1663,
                                1688
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "array",
                            "type": "MarkdownNode[]",
                            "schema": {
                              "0": {
                                "kind": "object",
                                "type": "MarkdownNode",
                                "schema": {
                                  "type": {
                                    "name": "type",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "string",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1401,
                                          1414
                                        ]
                                      }
                                    ],
                                    "schema": "string"
                                  },
                                  "tag": {
                                    "name": "tag",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1419,
                                          1432
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "string | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": "string"
                                      }
                                    }
                                  },
                                  "value": {
                                    "name": "value",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1437,
                                          1452
                                        ]
                                      }
                                    ],
                                    "schema": "string | undefined"
                                  },
                                  "props": {
                                    "name": "props",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, any> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1457,
                                          1485
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "Record<string, any> | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": "Record<string, any>"
                                      }
                                    }
                                  },
                                  "content": {
                                    "name": "content",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1490,
                                          1504
                                        ]
                                      }
                                    ],
                                    "schema": "any"
                                  },
                                  "children": {
                                    "name": "children",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "MarkdownNode[] | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1509,
                                          1535
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "MarkdownNode[] | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": "MarkdownNode[]"
                                      }
                                    }
                                  },
                                  "attributes": {
                                    "name": "attributes",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, any> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1540,
                                          1573
                                        ]
                                      }
                                    ],
                                    "schema": "Record<string, any> | undefined"
                                  },
                                  "fmAttributes": {
                                    "name": "fmAttributes",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, any> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1578,
                                          1613
                                        ]
                                      }
                                    ],
                                    "schema": "Record<string, any> | undefined"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "props": {
                          "name": "props",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "Record<string, any> | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1693,
                                1721
                              ]
                            }
                          ],
                          "schema": "Record<string, any> | undefined"
                        },
                        "toc": {
                          "name": "toc",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "Toc | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1726,
                                1736
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "Toc | undefined",
                            "schema": {
                              "0": "undefined",
                              "1": {
                                "kind": "object",
                                "type": "Toc",
                                "schema": {
                                  "title": {
                                    "name": "title",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "string",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1289,
                                          1303
                                        ]
                                      }
                                    ],
                                    "schema": "string"
                                  },
                                  "depth": {
                                    "name": "depth",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "number",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1308,
                                          1322
                                        ]
                                      }
                                    ],
                                    "schema": "number"
                                  },
                                  "searchDepth": {
                                    "name": "searchDepth",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "number",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1327,
                                          1347
                                        ]
                                      }
                                    ],
                                    "schema": "number"
                                  },
                                  "links": {
                                    "name": "links",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "TocLink[]",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1352,
                                          1369
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "array",
                                      "type": "TocLink[]",
                                      "schema": {
                                        "0": {
                                          "kind": "object",
                                          "type": "TocLink",
                                          "schema": {
                                            "id": {
                                              "name": "id",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1192,
                                                    1203
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "text": {
                                              "name": "text",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1208,
                                                    1221
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "depth": {
                                              "name": "depth",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "number",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1226,
                                                    1240
                                                  ]
                                                }
                                              ],
                                              "schema": "number"
                                            },
                                            "children": {
                                              "name": "children",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "TocLink[] | undefined",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1245,
                                                    1266
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "enum",
                                                "type": "TocLink[] | undefined",
                                                "schema": {
                                                  "0": "undefined",
                                                  "1": "TocLink[]"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "body": {
                "name": "body",
                "global": false,
                "description": "Content body",
                "tags": [],
                "required": true,
                "type": "MarkdownRoot | null",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2668,
                      2694
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "MarkdownRoot | null",
                  "schema": {
                    "0": "null",
                    "1": "MarkdownRoot"
                  }
                }
              },
              "layout": {
                "name": "layout",
                "global": false,
                "description": "Layout",
                "tags": [],
                "required": false,
                "type": "LayoutKey | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2471,
                      2490
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "LayoutKey | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": "\"default\"",
                    "2": "\"article\"",
                    "3": "\"page\""
                  }
                }
              },
              "_id": {
                "name": "_id",
                "global": false,
                "description": "Content id",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      393,
                      405
                    ]
                  }
                ],
                "schema": "string"
              },
              "_source": {
                "name": "_source",
                "global": false,
                "description": "Content source",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      448,
                      465
                    ]
                  }
                ],
                "schema": "string | undefined"
              },
              "_path": {
                "name": "_path",
                "global": false,
                "description": "Content path, this path is source agnostic and it the content my live in any source",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      577,
                      592
                    ]
                  }
                ],
                "schema": "string | undefined"
              },
              "title": {
                "name": "title",
                "global": false,
                "description": "Content title",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      634,
                      649
                    ]
                  }
                ],
                "schema": "string | undefined"
              },
              "_draft": {
                "name": "_draft",
                "global": false,
                "description": "Content draft status",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      698,
                      715
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "boolean | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": "false",
                    "2": "true"
                  }
                }
              },
              "_partial": {
                "name": "_partial",
                "global": false,
                "description": "Content partial status",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      766,
                      785
                    ]
                  }
                ],
                "schema": "boolean | undefined"
              },
              "_locale": {
                "name": "_locale",
                "global": false,
                "description": "Content locale",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      828,
                      845
                    ]
                  }
                ],
                "schema": "string | undefined"
              },
              "_type": {
                "name": "_type",
                "global": false,
                "description": "File type of the content, i.e `markdown`",
                "tags": [],
                "required": false,
                "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\" | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      914,
                      959
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\" | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": "\"markdown\"",
                    "2": "\"yaml\"",
                    "3": "\"json\"",
                    "4": "\"csv\""
                  }
                }
              },
              "_file": {
                "name": "_file",
                "global": false,
                "description": "Path to the file relative to the content directory",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      1038,
                      1053
                    ]
                  }
                ],
                "schema": "string | undefined"
              },
              "_extension": {
                "name": "_extension",
                "global": false,
                "description": "Extension of the file",
                "tags": [],
                "required": false,
                "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\" | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      1103,
                      1165
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\" | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": "\"yaml\"",
                    "2": "\"json\"",
                    "3": "\"csv\"",
                    "4": "\"md\"",
                    "5": "\"yml\"",
                    "6": "\"json5\""
                  }
                }
              }
            }
          }
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "value",
          "type": "ParsedContent",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue.d.ts",
              "range": [
                475,
                553
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "ParsedContent",
            "schema": {
              "excerpt": {
                "name": "excerpt",
                "global": false,
                "description": "Excerpt",
                "tags": [],
                "required": false,
                "type": "MarkdownRoot | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2604,
                      2627
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "MarkdownRoot | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "object",
                      "type": "MarkdownRoot",
                      "schema": {
                        "type": {
                          "name": "type",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "\"root\"",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1645,
                                1658
                              ]
                            }
                          ],
                          "schema": "\"root\""
                        },
                        "children": {
                          "name": "children",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "MarkdownNode[]",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1663,
                                1688
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "array",
                            "type": "MarkdownNode[]",
                            "schema": {
                              "0": {
                                "kind": "object",
                                "type": "MarkdownNode",
                                "schema": {
                                  "type": {
                                    "name": "type",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "string",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1401,
                                          1414
                                        ]
                                      }
                                    ],
                                    "schema": "string"
                                  },
                                  "tag": {
                                    "name": "tag",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1419,
                                          1432
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "string | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": "string"
                                      }
                                    }
                                  },
                                  "value": {
                                    "name": "value",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1437,
                                          1452
                                        ]
                                      }
                                    ],
                                    "schema": "string | undefined"
                                  },
                                  "props": {
                                    "name": "props",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, any> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1457,
                                          1485
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "Record<string, any> | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": "Record<string, any>"
                                      }
                                    }
                                  },
                                  "content": {
                                    "name": "content",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1490,
                                          1504
                                        ]
                                      }
                                    ],
                                    "schema": "any"
                                  },
                                  "children": {
                                    "name": "children",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "MarkdownNode[] | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1509,
                                          1535
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "MarkdownNode[] | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": "MarkdownNode[]"
                                      }
                                    }
                                  },
                                  "attributes": {
                                    "name": "attributes",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, any> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1540,
                                          1573
                                        ]
                                      }
                                    ],
                                    "schema": "Record<string, any> | undefined"
                                  },
                                  "fmAttributes": {
                                    "name": "fmAttributes",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, any> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1578,
                                          1613
                                        ]
                                      }
                                    ],
                                    "schema": "Record<string, any> | undefined"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "props": {
                          "name": "props",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "Record<string, any> | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1693,
                                1721
                              ]
                            }
                          ],
                          "schema": "Record<string, any> | undefined"
                        },
                        "toc": {
                          "name": "toc",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "Toc | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1726,
                                1736
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "Toc | undefined",
                            "schema": {
                              "0": "undefined",
                              "1": {
                                "kind": "object",
                                "type": "Toc",
                                "schema": {
                                  "title": {
                                    "name": "title",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "string",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1289,
                                          1303
                                        ]
                                      }
                                    ],
                                    "schema": "string"
                                  },
                                  "depth": {
                                    "name": "depth",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "number",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1308,
                                          1322
                                        ]
                                      }
                                    ],
                                    "schema": "number"
                                  },
                                  "searchDepth": {
                                    "name": "searchDepth",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "number",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1327,
                                          1347
                                        ]
                                      }
                                    ],
                                    "schema": "number"
                                  },
                                  "links": {
                                    "name": "links",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": true,
                                    "type": "TocLink[]",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                        "range": [
                                          1352,
                                          1369
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "array",
                                      "type": "TocLink[]",
                                      "schema": {
                                        "0": {
                                          "kind": "object",
                                          "type": "TocLink",
                                          "schema": {
                                            "id": {
                                              "name": "id",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1192,
                                                    1203
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "text": {
                                              "name": "text",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1208,
                                                    1221
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "depth": {
                                              "name": "depth",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "number",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1226,
                                                    1240
                                                  ]
                                                }
                                              ],
                                              "schema": "number"
                                            },
                                            "children": {
                                              "name": "children",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "TocLink[] | undefined",
                                              "declarations": [
                                                {
                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                  "range": [
                                                    1245,
                                                    1266
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "enum",
                                                "type": "TocLink[] | undefined",
                                                "schema": {
                                                  "0": "undefined",
                                                  "1": "TocLink[]"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "body": {
                "name": "body",
                "global": false,
                "description": "Content body",
                "tags": [],
                "required": true,
                "type": "MarkdownRoot | null",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2668,
                      2694
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "MarkdownRoot | null",
                  "schema": {
                    "0": "null",
                    "1": "MarkdownRoot"
                  }
                }
              },
              "layout": {
                "name": "layout",
                "global": false,
                "description": "Layout",
                "tags": [],
                "required": false,
                "type": "LayoutKey | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2471,
                      2490
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "LayoutKey | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": "\"default\"",
                    "2": "\"article\"",
                    "3": "\"page\""
                  }
                }
              },
              "_id": {
                "name": "_id",
                "global": false,
                "description": "Content id",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      393,
                      405
                    ]
                  }
                ],
                "schema": "string"
              },
              "_source": {
                "name": "_source",
                "global": false,
                "description": "Content source",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      448,
                      465
                    ]
                  }
                ],
                "schema": "string | undefined"
              },
              "_path": {
                "name": "_path",
                "global": false,
                "description": "Content path, this path is source agnostic and it the content my live in any source",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      577,
                      592
                    ]
                  }
                ],
                "schema": "string | undefined"
              },
              "title": {
                "name": "title",
                "global": false,
                "description": "Content title",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      634,
                      649
                    ]
                  }
                ],
                "schema": "string | undefined"
              },
              "_draft": {
                "name": "_draft",
                "global": false,
                "description": "Content draft status",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      698,
                      715
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "boolean | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": "false",
                    "2": "true"
                  }
                }
              },
              "_partial": {
                "name": "_partial",
                "global": false,
                "description": "Content partial status",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      766,
                      785
                    ]
                  }
                ],
                "schema": "boolean | undefined"
              },
              "_locale": {
                "name": "_locale",
                "global": false,
                "description": "Content locale",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      828,
                      845
                    ]
                  }
                ],
                "schema": "string | undefined"
              },
              "_type": {
                "name": "_type",
                "global": false,
                "description": "File type of the content, i.e `markdown`",
                "tags": [],
                "required": false,
                "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\" | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      914,
                      959
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\" | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": "\"markdown\"",
                    "2": "\"yaml\"",
                    "3": "\"json\"",
                    "4": "\"csv\""
                  }
                }
              },
              "_file": {
                "name": "_file",
                "global": false,
                "description": "Path to the file relative to the content directory",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      1038,
                      1053
                    ]
                  }
                ],
                "schema": "string | undefined"
              },
              "_extension": {
                "name": "_extension",
                "global": false,
                "description": "Extension of the file",
                "tags": [],
                "required": false,
                "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\" | undefined",
                "declarations": [
                  {
                    "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      1103,
                      1165
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\" | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": "\"yaml\"",
                    "2": "\"json\"",
                    "3": "\"csv\"",
                    "4": "\"md\"",
                    "5": "\"yml\"",
                    "6": "\"json5\""
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "Markdown": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/Markdown.vue",
    "pascalName": "Markdown",
    "kebabName": "markdown",
    "chunkName": "components/markdown",
    "shortPath": "node_modules/@nuxt/content/dist/runtime/components/Markdown.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "use",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Function | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                953,
                967
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Function | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "object",
                "type": "Function",
                "schema": {}
              }
            }
          }
        },
        {
          "name": "unwrap",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | boolean | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                972,
                997
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | boolean | undefined",
            "schema": {
              "0": "undefined",
              "1": "string",
              "2": "false",
              "3": "true"
            }
          }
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "use",
          "type": "Function | undefined",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                760,
                836
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Function | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "object",
                "type": "Function",
                "schema": {}
              }
            }
          }
        },
        {
          "name": "unwrap",
          "type": "string | boolean",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                841,
                941
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | boolean",
            "schema": {
              "0": "string",
              "1": "false",
              "2": "true"
            }
          }
        },
        {
          "name": "fallbackSlot",
          "type": "Slot<any> | undefined",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                94,
                144
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Slot<any> | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "event",
                "type": "(...args: any[]): VNode<RendererNode, RendererElement, { [key: string]: any; }>[]",
                "schema": [
                  "any"
                ]
              }
            }
          }
        },
        {
          "name": "tags",
          "type": "string[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                149,
                191
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "string[]",
            "schema": {
              "0": "string"
            }
          }
        },
        {
          "name": "between",
          "type": "Slot<any> | undefined",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                196,
                241
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "Slot<any> | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "event",
                "type": "(...args: any[]): VNode<RendererNode, RendererElement, { [key: string]: any; }>[]",
                "schema": [
                  "any"
                ]
              }
            }
          }
        },
        {
          "name": "parent",
          "type": "ComponentInternalInstance | null",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                246,
                301
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "ComponentInternalInstance | null",
            "schema": {
              "0": "null",
              "1": {
                "kind": "object",
                "type": "ComponentInternalInstance",
                "schema": {
                  "uid": {
                    "name": "uid",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "number",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58328,
                          58340
                        ]
                      }
                    ],
                    "schema": "number"
                  },
                  "type": {
                    "name": "type",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "ConcreteComponent<{}, any, any, ComputedOptions, MethodOptions, {}, any>",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58345,
                          58369
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "ConcreteComponent<{}, any, any, ComputedOptions, MethodOptions, {}, any>",
                      "schema": {
                        "0": {
                          "kind": "object",
                          "type": "ComponentOptions<{}, any, any, ComputedOptions, MethodOptions, any, any, any, any>",
                          "schema": {
                            "setup": {
                              "name": "setup",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "((this: void, props: LooseRequired<{}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }) => any) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30057,
                                    30283
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "((this: void, props: LooseRequired<{}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }) => any) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(this: void, props: LooseRequired<{}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }): any",
                                    "schema": []
                                  }
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "string | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30288,
                                    30302
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "string | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": "string"
                                }
                              }
                            },
                            "template": {
                              "name": "template",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "string | object | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30307,
                                    30334
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "string | object | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": "string",
                                  "2": "object"
                                }
                              }
                            },
                            "render": {
                              "name": "render",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "Function | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30339,
                                    30357
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "Function | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "object",
                                    "type": "Function",
                                    "schema": {}
                                  }
                                }
                              }
                            },
                            "components": {
                              "name": "components",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>> | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30362,
                                    30401
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>> | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"
                                }
                              }
                            },
                            "directives": {
                              "name": "directives",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "Record<string, Directive<any, any>> | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30406,
                                    30445
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "Record<string, Directive<any, any>> | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": "Record<string, Directive<any, any>>"
                                }
                              }
                            },
                            "inheritAttrs": {
                              "name": "inheritAttrs",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "boolean | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30450,
                                    30473
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "boolean | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": "false",
                                  "2": "true"
                                }
                              }
                            },
                            "emits": {
                              "name": "emits",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "any",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30478,
                                    30514
                                  ]
                                }
                              ],
                              "schema": "any"
                            },
                            "slots": {
                              "name": "slots",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "{} | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30519,
                                    30529
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "{} | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "object",
                                    "type": "{}",
                                    "schema": {}
                                  }
                                }
                              }
                            },
                            "expose": {
                              "name": "expose",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "string[] | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30534,
                                    30552
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "string[] | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "array",
                                    "type": "string[]",
                                    "schema": [
                                      "string"
                                    ]
                                  }
                                }
                              }
                            },
                            "serverPrefetch": {
                              "name": "serverPrefetch",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "(() => void | Promise<any>) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30557,
                                    30596
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void | Promise<any>) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void | Promise<any>"
                                  }
                                }
                              }
                            },
                            "compilerOptions": {
                              "name": "compilerOptions",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "RuntimeCompilerOptions | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30601,
                                    30642
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "RuntimeCompilerOptions | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "object",
                                    "type": "RuntimeCompilerOptions",
                                    "schema": {
                                      "isCustomElement": {
                                        "name": "isCustomElement",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "((tag: string) => boolean) | undefined",
                                        "declarations": [
                                          {
                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                            "range": [
                                              30925,
                                              30968
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "enum",
                                          "type": "((tag: string) => boolean) | undefined",
                                          "schema": {
                                            "0": "undefined",
                                            "1": {
                                              "kind": "event",
                                              "type": "(tag: string): boolean",
                                              "schema": []
                                            }
                                          }
                                        }
                                      },
                                      "whitespace": {
                                        "name": "whitespace",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "\"preserve\" | \"condense\" | undefined",
                                        "declarations": [
                                          {
                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                            "range": [
                                              30973,
                                              31010
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "enum",
                                          "type": "\"preserve\" | \"condense\" | undefined",
                                          "schema": {
                                            "0": "undefined",
                                            "1": "\"preserve\"",
                                            "2": "\"condense\""
                                          }
                                        }
                                      },
                                      "comments": {
                                        "name": "comments",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | undefined",
                                        "declarations": [
                                          {
                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                            "range": [
                                              31015,
                                              31034
                                            ]
                                          }
                                        ],
                                        "schema": "boolean | undefined"
                                      },
                                      "delimiters": {
                                        "name": "delimiters",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "[string, string] | undefined",
                                        "declarations": [
                                          {
                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                            "range": [
                                              31039,
                                              31069
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "enum",
                                          "type": "[string, string] | undefined",
                                          "schema": {
                                            "0": "undefined",
                                            "1": {
                                              "kind": "array",
                                              "type": "[string, string]",
                                              "schema": [
                                                "string",
                                                "string"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "call": {
                              "name": "call",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "((this: unknown, ...args: unknown[]) => never) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30647,
                                    30699
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "((this: unknown, ...args: unknown[]) => never) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(this: unknown, ...args: unknown[]): never",
                                    "schema": [
                                      "unknown"
                                    ]
                                  }
                                }
                              }
                            },
                            "___isFragment": {
                              "name": "___isFragment",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30704,
                                    30725
                                  ]
                                }
                              ],
                              "schema": "undefined"
                            },
                            "___isTeleport": {
                              "name": "___isTeleport",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30730,
                                    30751
                                  ]
                                }
                              ],
                              "schema": "undefined"
                            },
                            "___isSuspense": {
                              "name": "___isSuspense",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30756,
                                    30777
                                  ]
                                }
                              ],
                              "schema": "undefined"
                            },
                            "___defaults": {
                              "name": "___defaults",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "any",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    30782,
                                    30804
                                  ]
                                }
                              ],
                              "schema": "any"
                            },
                            "compatConfig": {
                              "name": "compatConfig",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "CompatConfig | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35367,
                                    35395
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "CompatConfig | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "object",
                                    "type": "CompatConfig",
                                    "schema": {
                                      "GLOBAL_MOUNT": {
                                        "name": "GLOBAL_MOUNT",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": {
                                          "kind": "enum",
                                          "type": "boolean | \"suppress-warning\" | undefined",
                                          "schema": {
                                            "0": "undefined",
                                            "1": "false",
                                            "2": "true",
                                            "3": "\"suppress-warning\""
                                          }
                                        }
                                      },
                                      "GLOBAL_MOUNT_CONTAINER": {
                                        "name": "GLOBAL_MOUNT_CONTAINER",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "GLOBAL_EXTEND": {
                                        "name": "GLOBAL_EXTEND",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "GLOBAL_PROTOTYPE": {
                                        "name": "GLOBAL_PROTOTYPE",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "GLOBAL_SET": {
                                        "name": "GLOBAL_SET",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "GLOBAL_DELETE": {
                                        "name": "GLOBAL_DELETE",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "GLOBAL_OBSERVABLE": {
                                        "name": "GLOBAL_OBSERVABLE",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "GLOBAL_PRIVATE_UTIL": {
                                        "name": "GLOBAL_PRIVATE_UTIL",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "CONFIG_SILENT": {
                                        "name": "CONFIG_SILENT",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "CONFIG_DEVTOOLS": {
                                        "name": "CONFIG_DEVTOOLS",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "CONFIG_KEY_CODES": {
                                        "name": "CONFIG_KEY_CODES",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "CONFIG_PRODUCTION_TIP": {
                                        "name": "CONFIG_PRODUCTION_TIP",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "CONFIG_IGNORED_ELEMENTS": {
                                        "name": "CONFIG_IGNORED_ELEMENTS",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "CONFIG_WHITESPACE": {
                                        "name": "CONFIG_WHITESPACE",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "CONFIG_OPTION_MERGE_STRATS": {
                                        "name": "CONFIG_OPTION_MERGE_STRATS",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "INSTANCE_SET": {
                                        "name": "INSTANCE_SET",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "INSTANCE_DELETE": {
                                        "name": "INSTANCE_DELETE",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "INSTANCE_DESTROY": {
                                        "name": "INSTANCE_DESTROY",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "INSTANCE_EVENT_EMITTER": {
                                        "name": "INSTANCE_EVENT_EMITTER",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "INSTANCE_EVENT_HOOKS": {
                                        "name": "INSTANCE_EVENT_HOOKS",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "INSTANCE_CHILDREN": {
                                        "name": "INSTANCE_CHILDREN",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "INSTANCE_LISTENERS": {
                                        "name": "INSTANCE_LISTENERS",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "INSTANCE_SCOPED_SLOTS": {
                                        "name": "INSTANCE_SCOPED_SLOTS",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "INSTANCE_ATTRS_CLASS_STYLE": {
                                        "name": "INSTANCE_ATTRS_CLASS_STYLE",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "OPTIONS_DATA_FN": {
                                        "name": "OPTIONS_DATA_FN",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "OPTIONS_DATA_MERGE": {
                                        "name": "OPTIONS_DATA_MERGE",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "OPTIONS_BEFORE_DESTROY": {
                                        "name": "OPTIONS_BEFORE_DESTROY",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "OPTIONS_DESTROYED": {
                                        "name": "OPTIONS_DESTROYED",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "WATCH_ARRAY": {
                                        "name": "WATCH_ARRAY",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "PROPS_DEFAULT_THIS": {
                                        "name": "PROPS_DEFAULT_THIS",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "V_ON_KEYCODE_MODIFIER": {
                                        "name": "V_ON_KEYCODE_MODIFIER",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "CUSTOM_DIR": {
                                        "name": "CUSTOM_DIR",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "ATTR_FALSE_VALUE": {
                                        "name": "ATTR_FALSE_VALUE",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "ATTR_ENUMERATED_COERCION": {
                                        "name": "ATTR_ENUMERATED_COERCION",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "TRANSITION_CLASSES": {
                                        "name": "TRANSITION_CLASSES",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "TRANSITION_GROUP_ROOT": {
                                        "name": "TRANSITION_GROUP_ROOT",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "COMPONENT_ASYNC": {
                                        "name": "COMPONENT_ASYNC",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "COMPONENT_FUNCTIONAL": {
                                        "name": "COMPONENT_FUNCTIONAL",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "COMPONENT_V_MODEL": {
                                        "name": "COMPONENT_V_MODEL",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "RENDER_FUNCTION": {
                                        "name": "RENDER_FUNCTION",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "FILTERS": {
                                        "name": "FILTERS",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "PRIVATE_APIS": {
                                        "name": "PRIVATE_APIS",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean | \"suppress-warning\" | undefined",
                                        "declarations": [],
                                        "schema": "boolean | \"suppress-warning\" | undefined"
                                      },
                                      "MODE": {
                                        "name": "MODE",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "2 | 3 | ((comp: Component<any, any, any, ComputedOptions, MethodOptions, {}, any> | null) => 2 | 3) | undefined",
                                        "declarations": [
                                          {
                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                            "range": [
                                              29098,
                                              29149
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "enum",
                                          "type": "2 | 3 | ((comp: Component<any, any, any, ComputedOptions, MethodOptions, {}, any> | null) => 2 | 3) | undefined",
                                          "schema": {
                                            "0": "undefined",
                                            "1": "2",
                                            "2": "3",
                                            "3": {
                                              "kind": "event",
                                              "type": "(comp: Component<any, any, any, ComputedOptions, MethodOptions, {}, any> | null): 2 | 3",
                                              "schema": []
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "data": {
                              "name": "data",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "((this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<{}, {}, {}, {}, MethodOptions, any, any, {}, {}, {}, false, {}, {}, OptionTypesType<{}, {}, {}, ComputedOptions, MethodOptions, {}> & OptionTypesType<...>, ... 5 more ..., {}>) => any) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35424,
                                    35609
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "((this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<{}, {}, {}, {}, MethodOptions, any, any, {}, {}, {}, false, {}, {}, OptionTypesType<{}, {}, {}, ComputedOptions, MethodOptions, {}> & OptionTypesType<...>, ... 5 more ..., {}>) => any) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<{}, {}, {}, {}, MethodOptions, any, any, {}, {}, {}, false, {}, {}, OptionTypesType<{}, {}, {}, ComputedOptions, MethodOptions, {}> & OptionTypesType<...>, ... 5 more ..., {}>): any",
                                    "schema": []
                                  }
                                }
                              }
                            },
                            "computed": {
                              "name": "computed",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "ComputedOptions | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35614,
                                    35627
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "ComputedOptions | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": "ComputedOptions"
                                }
                              }
                            },
                            "methods": {
                              "name": "methods",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "MethodOptions | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35632,
                                    35644
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "MethodOptions | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "object",
                                    "type": "MethodOptions",
                                    "schema": {}
                                  }
                                }
                              }
                            },
                            "watch": {
                              "name": "watch",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "ComponentWatchOptions | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35649,
                                    35679
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "ComponentWatchOptions | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": "ComponentWatchOptions"
                                }
                              }
                            },
                            "provide": {
                              "name": "provide",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "ComponentProvideOptions | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35684,
                                    35718
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "ComponentProvideOptions | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": "Function",
                                  "2": "ObjectProvideOptions"
                                }
                              }
                            },
                            "inject": {
                              "name": "inject",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "{} | string[] | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35723,
                                    35741
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "{} | string[] | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": "{}",
                                  "2": "string[]"
                                }
                              }
                            },
                            "filters": {
                              "name": "filters",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "Record<string, Function> | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35746,
                                    35781
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "Record<string, Function> | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": "Record<string, Function>"
                                }
                              }
                            },
                            "mixins": {
                              "name": "mixins",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "any[] | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35786,
                                    35803
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "any[] | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "array",
                                    "type": "any[]",
                                    "schema": [
                                      "any"
                                    ]
                                  }
                                }
                              }
                            },
                            "extends": {
                              "name": "extends",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "any",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35808,
                                    35826
                                  ]
                                }
                              ],
                              "schema": "any"
                            },
                            "beforeCreate": {
                              "name": "beforeCreate",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35831,
                                    35853
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "created": {
                              "name": "created",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35858,
                                    35875
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "beforeMount": {
                              "name": "beforeMount",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35880,
                                    35901
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "mounted": {
                              "name": "mounted",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35906,
                                    35923
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "beforeUpdate": {
                              "name": "beforeUpdate",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35928,
                                    35950
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "updated": {
                              "name": "updated",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35955,
                                    35972
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "activated": {
                              "name": "activated",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    35977,
                                    35996
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "deactivated": {
                              "name": "deactivated",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    36001,
                                    36022
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "beforeDestroy": {
                              "name": "beforeDestroy",
                              "global": false,
                              "description": "",
                              "tags": [
                                {
                                  "name": "deprecated",
                                  "text": "use `beforeUnmount` instead"
                                }
                              ],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    36078,
                                    36101
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "beforeUnmount": {
                              "name": "beforeUnmount",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    36106,
                                    36129
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "destroyed": {
                              "name": "destroyed",
                              "global": false,
                              "description": "",
                              "tags": [
                                {
                                  "name": "deprecated",
                                  "text": "use `unmounted` instead"
                                }
                              ],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    36181,
                                    36200
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "unmounted": {
                              "name": "unmounted",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    36205,
                                    36224
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                }
                              }
                            },
                            "renderTracked": {
                              "name": "renderTracked",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "DebuggerHook | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    36229,
                                    36258
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "DebuggerHook | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(e: DebuggerEvent): void",
                                    "schema": []
                                  }
                                }
                              }
                            },
                            "renderTriggered": {
                              "name": "renderTriggered",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "DebuggerHook | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    36263,
                                    36294
                                  ]
                                }
                              ],
                              "schema": "DebuggerHook | undefined"
                            },
                            "errorCaptured": {
                              "name": "errorCaptured",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "ErrorCapturedHook<unknown> | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    36299,
                                    36333
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "ErrorCapturedHook<unknown> | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(err: unknown, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string): boolean | void",
                                    "schema": []
                                  }
                                }
                              }
                            },
                            "delimiters": {
                              "name": "delimiters",
                              "global": false,
                              "description": "runtime compile only",
                              "tags": [
                                {
                                  "name": "deprecated",
                                  "text": "use `compilerOptions.delimiters` instead."
                                }
                              ],
                              "required": false,
                              "type": "[string, string] | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    36443,
                                    36473
                                  ]
                                }
                              ],
                              "schema": "[string, string] | undefined"
                            },
                            "___differentiator": {
                              "name": "___differentiator",
                              "global": false,
                              "description": "#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",
                              "tags": [],
                              "required": false,
                              "type": "string | number | symbol | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    36783,
                                    36830
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "string | number | symbol | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": "string",
                                  "2": "number",
                                  "3": "symbol"
                                }
                              }
                            },
                            "___isBuiltIn": {
                              "name": "___isBuiltIn",
                              "global": false,
                              "description": "Compat build only, for bailing out of certain compatibility behavior",
                              "tags": [],
                              "required": false,
                              "type": "boolean | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    55921,
                                    55943
                                  ]
                                }
                              ],
                              "schema": "boolean | undefined"
                            },
                            "___file": {
                              "name": "___file",
                              "global": false,
                              "description": "This one should be exposed so that devtools can make use of it",
                              "tags": [],
                              "required": false,
                              "type": "string | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    56034,
                                    56050
                                  ]
                                }
                              ],
                              "schema": "string | undefined"
                            },
                            "___name": {
                              "name": "___name",
                              "global": false,
                              "description": "name inferred from filename",
                              "tags": [],
                              "required": false,
                              "type": "string | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    56106,
                                    56122
                                  ]
                                }
                              ],
                              "schema": "string | undefined"
                            },
                            "beforeRouteEnter": {
                              "name": "beforeRouteEnter",
                              "global": false,
                              "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
                              "tags": [
                                {
                                  "name": "param",
                                  "text": "to - RouteLocationRaw we are navigating to"
                                },
                                {
                                  "name": "param",
                                  "text": "from - RouteLocationRaw we are navigating from"
                                },
                                {
                                  "name": "param",
                                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                }
                              ],
                              "required": false,
                              "type": "NavigationGuardWithThis<undefined> | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                  "range": [
                                    60091,
                                    60218
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "NavigationGuardWithThis<undefined> | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(this: undefined, to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                                    "schema": []
                                  }
                                }
                              }
                            },
                            "beforeRouteUpdate": {
                              "name": "beforeRouteUpdate",
                              "global": false,
                              "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
                              "tags": [
                                {
                                  "name": "param",
                                  "text": "to - RouteLocationRaw we are navigating to"
                                },
                                {
                                  "name": "param",
                                  "text": "from - RouteLocationRaw we are navigating from"
                                },
                                {
                                  "name": "param",
                                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                }
                              ],
                              "required": false,
                              "type": "NavigationGuard | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                  "range": [
                                    60665,
                                    60775
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "NavigationGuard | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                                    "schema": []
                                  }
                                }
                              }
                            },
                            "beforeRouteLeave": {
                              "name": "beforeRouteLeave",
                              "global": false,
                              "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
                              "tags": [
                                {
                                  "name": "param",
                                  "text": "to - RouteLocationRaw we are navigating to"
                                },
                                {
                                  "name": "param",
                                  "text": "from - RouteLocationRaw we are navigating from"
                                },
                                {
                                  "name": "param",
                                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                }
                              ],
                              "required": false,
                              "type": "NavigationGuard | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                  "range": [
                                    61140,
                                    61248
                                  ]
                                }
                              ],
                              "schema": "NavigationGuard | undefined"
                            },
                            "head": {
                              "name": "head",
                              "global": false,
                              "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
                              "tags": [],
                              "required": false,
                              "type": "((nuxtApp: NuxtApp) => UseHeadInput) | undefined",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/types/augments.d.ts",
                                  "range": [
                                    1615,
                                    1652
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "enum",
                                "type": "((nuxtApp: NuxtApp) => UseHeadInput) | undefined",
                                "schema": {
                                  "0": "undefined",
                                  "1": {
                                    "kind": "event",
                                    "type": "(nuxtApp: NuxtApp): UseHeadInput",
                                    "schema": []
                                  }
                                }
                              }
                            }
                          }
                        },
                        "1": {
                          "kind": "event",
                          "type": "(props: {}, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any",
                          "schema": []
                        }
                      }
                    }
                  },
                  "parent": {
                    "name": "parent",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "ComponentInternalInstance | null",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58374,
                          58415
                        ]
                      }
                    ],
                    "schema": "ComponentInternalInstance | null"
                  },
                  "root": {
                    "name": "root",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "ComponentInternalInstance",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58420,
                          58452
                        ]
                      }
                    ],
                    "schema": "ComponentInternalInstance"
                  },
                  "appContext": {
                    "name": "appContext",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "AppContext",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58457,
                          58480
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "object",
                      "type": "AppContext",
                      "schema": {
                        "app": {
                          "name": "app",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "App<any>",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                45441,
                                45450
                              ]
                            }
                          ],
                          "schema": "App<any>"
                        },
                        "config": {
                          "name": "config",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "AppConfig",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                45455,
                                45473
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "object",
                            "type": "AppConfig",
                            "schema": {
                              "isNativeTag": {
                                "name": "isNativeTag",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": true,
                                "type": "(tag: string) => boolean",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      44557,
                                      44604
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "event",
                                  "type": "(tag: string): boolean",
                                  "schema": {}
                                }
                              },
                              "performance": {
                                "name": "performance",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": true,
                                "type": "boolean",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      44609,
                                      44630
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "enum",
                                  "type": "boolean",
                                  "schema": {
                                    "0": "false",
                                    "1": "true"
                                  }
                                }
                              },
                              "optionMergeStrategies": {
                                "name": "optionMergeStrategies",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": true,
                                "type": "Record<string, OptionMergeFunction>",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      44635,
                                      44694
                                    ]
                                  }
                                ],
                                "schema": "Record<string, OptionMergeFunction>"
                              },
                              "globalProperties": {
                                "name": "globalProperties",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": true,
                                "type": "ComponentCustomProperties & Record<string, any>",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      44699,
                                      44765
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "object",
                                  "type": "ComponentCustomProperties & Record<string, any>",
                                  "schema": {
                                    "$route": {
                                      "name": "$route",
                                      "global": false,
                                      "description": "Normalized current location. See {@link RouteLocationNormalizedLoaded}.",
                                      "tags": [],
                                      "required": true,
                                      "type": "RouteLocationNormalizedLoadedGeneric",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                          "range": [
                                            61400,
                                            61501
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "object",
                                        "type": "RouteLocationNormalizedLoadedGeneric",
                                        "schema": {
                                          "matched": {
                                            "name": "matched",
                                            "global": false,
                                            "description": "Array of {@link RouteLocationMatched} containing only plain components (any\r\nlazy-loaded components have been loaded and were replaced inside the\r\n`components` object) so it can be directly used to display routes. It\r\ncannot contain redirect records either. **This property is non-enumerable**.",
                                            "tags": [],
                                            "required": true,
                                            "type": "RouteLocationMatched[]",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  24447,
                                                  24479
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "array",
                                              "type": "RouteLocationMatched[]",
                                              "schema": {
                                                "0": {
                                                  "kind": "object",
                                                  "type": "RouteLocationMatched",
                                                  "schema": {
                                                    "components": {
                                                      "name": "components",
                                                      "global": false,
                                                      "description": "{@inheritDoc RouteRecordMultipleViews.components}",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "Record<string, RouteComponent> | null | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            22402,
                                                            22464
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "Record<string, RouteComponent> | null | undefined",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": "null",
                                                          "2": "Record<string, RouteComponent>"
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "name": "path",
                                                      "global": false,
                                                      "description": "{@inheritDoc _RouteRecordBase.path}",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "string",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            42194,
                                                            42225
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "string"
                                                    },
                                                    "redirect": {
                                                      "name": "redirect",
                                                      "global": false,
                                                      "description": "{@inheritDoc _RouteRecordBase.redirect}",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "RouteRecordRedirectOption | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            42297,
                                                            42348
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "RouteRecordRedirectOption | undefined",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": "string",
                                                          "2": {
                                                            "kind": "object",
                                                            "type": "RouteLocationAsRelativeGeneric",
                                                            "schema": {
                                                              "name": {
                                                                "name": "name",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteRecordNameGeneric",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      19163,
                                                                      19193
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "RouteRecordNameGeneric",
                                                                  "schema": {
                                                                    "0": "undefined",
                                                                    "1": "string",
                                                                    "2": "symbol"
                                                                  }
                                                                }
                                                              },
                                                              "params": {
                                                                "name": "params",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteParamsRawGeneric | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      19199,
                                                                      19230
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "RouteParamsRawGeneric | undefined",
                                                                  "schema": {
                                                                    "0": "undefined",
                                                                    "1": "RouteParamsRawGeneric"
                                                                  }
                                                                }
                                                              },
                                                              "path": {
                                                                "name": "path",
                                                                "global": false,
                                                                "description": "A relative path to the current location. This property should be removed",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      19335,
                                                                      19352
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "undefined"
                                                              },
                                                              "query": {
                                                                "name": "query",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "LocationQueryRaw | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      31106,
                                                                      31131
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "LocationQueryRaw | undefined",
                                                                  "schema": {
                                                                    "0": "undefined",
                                                                    "1": "LocationQueryRaw"
                                                                  }
                                                                }
                                                              },
                                                              "hash": {
                                                                "name": "hash",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "string | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      31137,
                                                                      31151
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string | undefined"
                                                              },
                                                              "replace": {
                                                                "name": "replace",
                                                                "global": false,
                                                                "description": "Replace the entry in the history instead of pushing a new entry",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "boolean | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      26174,
                                                                      26192
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean | undefined"
                                                              },
                                                              "force": {
                                                                "name": "force",
                                                                "global": false,
                                                                "description": "Triggers the navigation even if the location is the same as the current one.\r\nNote this will also add a new entry to the history unless `replace: true`\r\nis passed.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "boolean | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      26402,
                                                                      26418
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean | undefined"
                                                              },
                                                              "state": {
                                                                "name": "state",
                                                                "global": false,
                                                                "description": "State to save using the History API. This cannot contain any reactive\r\nvalues and some primitives like Symbols are forbidden. More info at\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/History/state",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "HistoryState | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      26667,
                                                                      26688
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "HistoryState | undefined",
                                                                  "schema": {
                                                                    "0": "undefined",
                                                                    "1": {
                                                                      "kind": "object",
                                                                      "type": "HistoryState",
                                                                      "schema": {}
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "3": {
                                                            "kind": "object",
                                                            "type": "RouteLocationAsPathGeneric",
                                                            "schema": {
                                                              "path": {
                                                                "name": "path",
                                                                "global": false,
                                                                "description": "Percentage encoded pathname section of the URL.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "string",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      17916,
                                                                      17929
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string"
                                                              },
                                                              "query": {
                                                                "name": "query",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "LocationQueryRaw | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      31106,
                                                                      31131
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "LocationQueryRaw | undefined"
                                                              },
                                                              "hash": {
                                                                "name": "hash",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "string | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      31137,
                                                                      31151
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string | undefined"
                                                              },
                                                              "replace": {
                                                                "name": "replace",
                                                                "global": false,
                                                                "description": "Replace the entry in the history instead of pushing a new entry",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "boolean | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      26174,
                                                                      26192
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean | undefined"
                                                              },
                                                              "force": {
                                                                "name": "force",
                                                                "global": false,
                                                                "description": "Triggers the navigation even if the location is the same as the current one.\r\nNote this will also add a new entry to the history unless `replace: true`\r\nis passed.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "boolean | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      26402,
                                                                      26418
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean | undefined"
                                                              },
                                                              "state": {
                                                                "name": "state",
                                                                "global": false,
                                                                "description": "State to save using the History API. This cannot contain any reactive\r\nvalues and some primitives like Symbols are forbidden. More info at\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/History/state",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "HistoryState | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      26667,
                                                                      26688
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "HistoryState | undefined"
                                                              }
                                                            }
                                                          },
                                                          "4": {
                                                            "kind": "event",
                                                            "type": "(to: RouteLocationGeneric): string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric",
                                                            "schema": []
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "name": {
                                                      "name": "name",
                                                      "global": false,
                                                      "description": "{@inheritDoc _RouteRecordBase.name}",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "RouteRecordNameGeneric",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            42416,
                                                            42447
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "RouteRecordNameGeneric"
                                                    },
                                                    "children": {
                                                      "name": "children",
                                                      "global": false,
                                                      "description": "Nested route records.",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "RouteRecordRaw[]",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            42653,
                                                            42680
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "array",
                                                        "type": "RouteRecordRaw[]",
                                                        "schema": {
                                                          "0": {
                                                            "kind": "enum",
                                                            "type": "RouteRecordRaw",
                                                            "schema": [
                                                              {
                                                                "kind": "object",
                                                                "type": "RouteRecordSingleView",
                                                                "schema": {
                                                                  "component": {
                                                                    "name": "component",
                                                                    "global": false,
                                                                    "description": "Component to display when the URL matches this route.",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "RawRouteComponent",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          45288,
                                                                          45317
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "enum",
                                                                      "type": "RawRouteComponent",
                                                                      "schema": {
                                                                        "0": {
                                                                          "kind": "object",
                                                                          "type": "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, any>",
                                                                          "schema": {
                                                                            "setup": {
                                                                              "name": "setup",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "((this: void, props: LooseRequired<any>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }) => any) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30057,
                                                                                    30283
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "((this: void, props: LooseRequired<any>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }) => any) | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": {
                                                                                    "kind": "event",
                                                                                    "type": "(this: void, props: LooseRequired<any>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }): any",
                                                                                    "schema": []
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "name": {
                                                                              "name": "name",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30288,
                                                                                    30302
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | undefined"
                                                                            },
                                                                            "template": {
                                                                              "name": "template",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | object | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30307,
                                                                                    30334
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | object | undefined"
                                                                            },
                                                                            "render": {
                                                                              "name": "render",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "Function | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30339,
                                                                                    30357
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "Function | undefined"
                                                                            },
                                                                            "components": {
                                                                              "name": "components",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>> | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30362,
                                                                                    30401
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>> | undefined"
                                                                            },
                                                                            "directives": {
                                                                              "name": "directives",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "Record<string, Directive<any, any>> | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30406,
                                                                                    30445
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "Record<string, Directive<any, any>> | undefined"
                                                                            },
                                                                            "inheritAttrs": {
                                                                              "name": "inheritAttrs",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "boolean | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30450,
                                                                                    30473
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "boolean | undefined"
                                                                            },
                                                                            "emits": {
                                                                              "name": "emits",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "any",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30478,
                                                                                    30514
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "any"
                                                                            },
                                                                            "slots": {
                                                                              "name": "slots",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "{} | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30519,
                                                                                    30529
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "{} | undefined"
                                                                            },
                                                                            "expose": {
                                                                              "name": "expose",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30534,
                                                                                    30552
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string[] | undefined"
                                                                            },
                                                                            "serverPrefetch": {
                                                                              "name": "serverPrefetch",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void | Promise<any>) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30557,
                                                                                    30596
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void | Promise<any>) | undefined"
                                                                            },
                                                                            "compilerOptions": {
                                                                              "name": "compilerOptions",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "RuntimeCompilerOptions | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30601,
                                                                                    30642
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "RuntimeCompilerOptions | undefined"
                                                                            },
                                                                            "call": {
                                                                              "name": "call",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "((this: unknown, ...args: unknown[]) => never) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30647,
                                                                                    30699
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "((this: unknown, ...args: unknown[]) => never) | undefined"
                                                                            },
                                                                            "___isFragment": {
                                                                              "name": "___isFragment",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30704,
                                                                                    30725
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "undefined"
                                                                            },
                                                                            "___isTeleport": {
                                                                              "name": "___isTeleport",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30730,
                                                                                    30751
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "undefined"
                                                                            },
                                                                            "___isSuspense": {
                                                                              "name": "___isSuspense",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30756,
                                                                                    30777
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "undefined"
                                                                            },
                                                                            "___defaults": {
                                                                              "name": "___defaults",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "any",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30782,
                                                                                    30804
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "any"
                                                                            },
                                                                            "compatConfig": {
                                                                              "name": "compatConfig",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "CompatConfig | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35367,
                                                                                    35395
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "CompatConfig | undefined"
                                                                            },
                                                                            "data": {
                                                                              "name": "data",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "((this: any, vm: any) => any) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35424,
                                                                                    35609
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "((this: any, vm: any) => any) | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": {
                                                                                    "kind": "event",
                                                                                    "type": "(this: any, vm: any): any",
                                                                                    "schema": []
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "computed": {
                                                                              "name": "computed",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "ComputedOptions | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35614,
                                                                                    35627
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "ComputedOptions | undefined"
                                                                            },
                                                                            "methods": {
                                                                              "name": "methods",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "MethodOptions | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35632,
                                                                                    35644
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "MethodOptions | undefined"
                                                                            },
                                                                            "watch": {
                                                                              "name": "watch",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "ComponentWatchOptions | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35649,
                                                                                    35679
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "ComponentWatchOptions | undefined"
                                                                            },
                                                                            "provide": {
                                                                              "name": "provide",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "ComponentProvideOptions | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35684,
                                                                                    35718
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "ComponentProvideOptions | undefined"
                                                                            },
                                                                            "inject": {
                                                                              "name": "inject",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "{} | string[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35723,
                                                                                    35741
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "{} | string[] | undefined"
                                                                            },
                                                                            "filters": {
                                                                              "name": "filters",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "Record<string, Function> | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35746,
                                                                                    35781
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "Record<string, Function> | undefined"
                                                                            },
                                                                            "mixins": {
                                                                              "name": "mixins",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "any[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35786,
                                                                                    35803
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "any[] | undefined"
                                                                            },
                                                                            "extends": {
                                                                              "name": "extends",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "any",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35808,
                                                                                    35826
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "any"
                                                                            },
                                                                            "beforeCreate": {
                                                                              "name": "beforeCreate",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35831,
                                                                                    35853
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "created": {
                                                                              "name": "created",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35858,
                                                                                    35875
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "beforeMount": {
                                                                              "name": "beforeMount",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35880,
                                                                                    35901
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "mounted": {
                                                                              "name": "mounted",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35906,
                                                                                    35923
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "beforeUpdate": {
                                                                              "name": "beforeUpdate",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35928,
                                                                                    35950
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "updated": {
                                                                              "name": "updated",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35955,
                                                                                    35972
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "activated": {
                                                                              "name": "activated",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35977,
                                                                                    35996
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "deactivated": {
                                                                              "name": "deactivated",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36001,
                                                                                    36022
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "beforeDestroy": {
                                                                              "name": "beforeDestroy",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "deprecated",
                                                                                  "text": "use `beforeUnmount` instead"
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36078,
                                                                                    36101
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "beforeUnmount": {
                                                                              "name": "beforeUnmount",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36106,
                                                                                    36129
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "destroyed": {
                                                                              "name": "destroyed",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "deprecated",
                                                                                  "text": "use `unmounted` instead"
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36181,
                                                                                    36200
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "unmounted": {
                                                                              "name": "unmounted",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36205,
                                                                                    36224
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "renderTracked": {
                                                                              "name": "renderTracked",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "DebuggerHook | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36229,
                                                                                    36258
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "DebuggerHook | undefined"
                                                                            },
                                                                            "renderTriggered": {
                                                                              "name": "renderTriggered",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "DebuggerHook | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36263,
                                                                                    36294
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "DebuggerHook | undefined"
                                                                            },
                                                                            "errorCaptured": {
                                                                              "name": "errorCaptured",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "ErrorCapturedHook<unknown> | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36299,
                                                                                    36333
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "ErrorCapturedHook<unknown> | undefined"
                                                                            },
                                                                            "delimiters": {
                                                                              "name": "delimiters",
                                                                              "global": false,
                                                                              "description": "runtime compile only",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "deprecated",
                                                                                  "text": "use `compilerOptions.delimiters` instead."
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "[string, string] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36443,
                                                                                    36473
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "[string, string] | undefined"
                                                                            },
                                                                            "___differentiator": {
                                                                              "name": "___differentiator",
                                                                              "global": false,
                                                                              "description": "#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | number | symbol | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36783,
                                                                                    36830
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | number | symbol | undefined"
                                                                            },
                                                                            "___isBuiltIn": {
                                                                              "name": "___isBuiltIn",
                                                                              "global": false,
                                                                              "description": "Compat build only, for bailing out of certain compatibility behavior",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "boolean | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    55921,
                                                                                    55943
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "boolean | undefined"
                                                                            },
                                                                            "___file": {
                                                                              "name": "___file",
                                                                              "global": false,
                                                                              "description": "This one should be exposed so that devtools can make use of it",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    56034,
                                                                                    56050
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | undefined"
                                                                            },
                                                                            "___name": {
                                                                              "name": "___name",
                                                                              "global": false,
                                                                              "description": "name inferred from filename",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    56106,
                                                                                    56122
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | undefined"
                                                                            },
                                                                            "beforeRouteEnter": {
                                                                              "name": "beforeRouteEnter",
                                                                              "global": false,
                                                                              "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "to - RouteLocationRaw we are navigating to"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "from - RouteLocationRaw we are navigating from"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "NavigationGuardWithThis<undefined> | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                                  "range": [
                                                                                    60091,
                                                                                    60218
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "NavigationGuardWithThis<undefined> | undefined"
                                                                            },
                                                                            "beforeRouteUpdate": {
                                                                              "name": "beforeRouteUpdate",
                                                                              "global": false,
                                                                              "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "to - RouteLocationRaw we are navigating to"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "from - RouteLocationRaw we are navigating from"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "NavigationGuard | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                                  "range": [
                                                                                    60665,
                                                                                    60775
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "NavigationGuard | undefined"
                                                                            },
                                                                            "beforeRouteLeave": {
                                                                              "name": "beforeRouteLeave",
                                                                              "global": false,
                                                                              "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "to - RouteLocationRaw we are navigating to"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "from - RouteLocationRaw we are navigating from"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "NavigationGuard | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                                  "range": [
                                                                                    61140,
                                                                                    61248
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "NavigationGuard | undefined"
                                                                            },
                                                                            "head": {
                                                                              "name": "head",
                                                                              "global": false,
                                                                              "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "((nuxtApp: NuxtApp) => UseHeadInput) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/types/augments.d.ts",
                                                                                  "range": [
                                                                                    1615,
                                                                                    1652
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "((nuxtApp: NuxtApp) => UseHeadInput) | undefined"
                                                                            }
                                                                          }
                                                                        },
                                                                        "1": {
                                                                          "kind": "event",
                                                                          "type": "(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any",
                                                                          "schema": []
                                                                        },
                                                                        "2": {
                                                                          "kind": "object",
                                                                          "type": "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>",
                                                                          "schema": {
                                                                            "___isFragment": {
                                                                              "name": "___isFragment",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    6486,
                                                                                    6507
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "undefined"
                                                                            },
                                                                            "___isTeleport": {
                                                                              "name": "___isTeleport",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    6512,
                                                                                    6533
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "undefined"
                                                                            },
                                                                            "___isSuspense": {
                                                                              "name": "___isSuspense",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    6538,
                                                                                    6559
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "undefined"
                                                                            }
                                                                          }
                                                                        },
                                                                        "3": {
                                                                          "kind": "object",
                                                                          "type": "DefineComponent",
                                                                          "schema": {
                                                                            "___isFragment": {
                                                                              "name": "___isFragment",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    6486,
                                                                                    6507
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30704,
                                                                                    30725
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "undefined"
                                                                            },
                                                                            "___isTeleport": {
                                                                              "name": "___isTeleport",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    6512,
                                                                                    6533
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30730,
                                                                                    30751
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "undefined"
                                                                            },
                                                                            "___isSuspense": {
                                                                              "name": "___isSuspense",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    6538,
                                                                                    6559
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30756,
                                                                                    30777
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "undefined"
                                                                            },
                                                                            "setup": {
                                                                              "name": "setup",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "((this: void, props: LooseRequired<Readonly<ExtractPropTypes<{}>> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }) => void | ... 2 more ... | Promise<...>) |...",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30057,
                                                                                    30283
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "((this: void, props: LooseRequired<Readonly<ExtractPropTypes<{}>> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }) => void | ... 2 more ... | Promise<...>) |...",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": {
                                                                                    "kind": "event",
                                                                                    "type": "(this: void, props: LooseRequired<Readonly<ExtractPropTypes<{}>> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }): void | ... 2 more ... | Promise<...>",
                                                                                    "schema": []
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "name": {
                                                                              "name": "name",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30288,
                                                                                    30302
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | undefined"
                                                                            },
                                                                            "template": {
                                                                              "name": "template",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | object | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30307,
                                                                                    30334
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | object | undefined"
                                                                            },
                                                                            "render": {
                                                                              "name": "render",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "Function | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30339,
                                                                                    30357
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "Function | undefined"
                                                                            },
                                                                            "components": {
                                                                              "name": "components",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>> | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30362,
                                                                                    30401
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>> | undefined"
                                                                            },
                                                                            "directives": {
                                                                              "name": "directives",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "Record<string, Directive<any, any>> | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30406,
                                                                                    30445
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "Record<string, Directive<any, any>> | undefined"
                                                                            },
                                                                            "inheritAttrs": {
                                                                              "name": "inheritAttrs",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "boolean | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30450,
                                                                                    30473
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "boolean | undefined"
                                                                            },
                                                                            "emits": {
                                                                              "name": "emits",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "ThisType<void> | (string[] & ThisType<void>) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30478,
                                                                                    30514
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "ThisType<void> | (string[] & ThisType<void>) | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "ThisType<void>",
                                                                                  "2": {
                                                                                    "kind": "array",
                                                                                    "type": "string[] & ThisType<void>",
                                                                                    "schema": []
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "slots": {
                                                                              "name": "slots",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "{} | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30519,
                                                                                    30529
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "{} | undefined"
                                                                            },
                                                                            "expose": {
                                                                              "name": "expose",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30534,
                                                                                    30552
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string[] | undefined"
                                                                            },
                                                                            "serverPrefetch": {
                                                                              "name": "serverPrefetch",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void | Promise<any>) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30557,
                                                                                    30596
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void | Promise<any>) | undefined"
                                                                            },
                                                                            "compilerOptions": {
                                                                              "name": "compilerOptions",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "RuntimeCompilerOptions | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30601,
                                                                                    30642
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "RuntimeCompilerOptions | undefined"
                                                                            },
                                                                            "call": {
                                                                              "name": "call",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "((this: unknown, ...args: unknown[]) => never) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30647,
                                                                                    30699
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "((this: unknown, ...args: unknown[]) => never) | undefined"
                                                                            },
                                                                            "___defaults": {
                                                                              "name": "___defaults",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "{} | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    30782,
                                                                                    30804
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "{} | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "{}"
                                                                                }
                                                                              }
                                                                            },
                                                                            "compatConfig": {
                                                                              "name": "compatConfig",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "CompatConfig | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35367,
                                                                                    35395
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "CompatConfig | undefined"
                                                                            },
                                                                            "data": {
                                                                              "name": "data",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "((this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<Readonly<ExtractPropTypes<{}>>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., {}>) => {}) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35424,
                                                                                    35609
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "((this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<Readonly<ExtractPropTypes<{}>>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., {}>) => {}) | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": {
                                                                                    "kind": "event",
                                                                                    "type": "(this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<Readonly<ExtractPropTypes<{}>>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., {}>): {}",
                                                                                    "schema": []
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "computed": {
                                                                              "name": "computed",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "ComputedOptions | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35614,
                                                                                    35627
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "ComputedOptions | undefined"
                                                                            },
                                                                            "methods": {
                                                                              "name": "methods",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "MethodOptions | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35632,
                                                                                    35644
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "MethodOptions | undefined"
                                                                            },
                                                                            "watch": {
                                                                              "name": "watch",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "ComponentWatchOptions | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35649,
                                                                                    35679
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "ComponentWatchOptions | undefined"
                                                                            },
                                                                            "provide": {
                                                                              "name": "provide",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "ComponentProvideOptions | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35684,
                                                                                    35718
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "ComponentProvideOptions | undefined"
                                                                            },
                                                                            "inject": {
                                                                              "name": "inject",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "{} | string[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35723,
                                                                                    35741
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "{} | string[] | undefined"
                                                                            },
                                                                            "filters": {
                                                                              "name": "filters",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "Record<string, Function> | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35746,
                                                                                    35781
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "Record<string, Function> | undefined"
                                                                            },
                                                                            "mixins": {
                                                                              "name": "mixins",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "ComponentOptionsMixin[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35786,
                                                                                    35803
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "ComponentOptionsMixin[] | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": {
                                                                                    "kind": "array",
                                                                                    "type": "ComponentOptionsMixin[]",
                                                                                    "schema": [
                                                                                      "ComponentOptionsMixin"
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "extends": {
                                                                              "name": "extends",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "ComponentOptionsMixin | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35808,
                                                                                    35826
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "ComponentOptionsMixin | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "ComponentOptionsMixin"
                                                                                }
                                                                              }
                                                                            },
                                                                            "beforeCreate": {
                                                                              "name": "beforeCreate",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35831,
                                                                                    35853
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "created": {
                                                                              "name": "created",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35858,
                                                                                    35875
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "beforeMount": {
                                                                              "name": "beforeMount",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35880,
                                                                                    35901
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "mounted": {
                                                                              "name": "mounted",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35906,
                                                                                    35923
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "beforeUpdate": {
                                                                              "name": "beforeUpdate",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35928,
                                                                                    35950
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "updated": {
                                                                              "name": "updated",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35955,
                                                                                    35972
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "activated": {
                                                                              "name": "activated",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    35977,
                                                                                    35996
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "deactivated": {
                                                                              "name": "deactivated",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36001,
                                                                                    36022
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "beforeDestroy": {
                                                                              "name": "beforeDestroy",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "deprecated",
                                                                                  "text": "use `beforeUnmount` instead"
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36078,
                                                                                    36101
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "beforeUnmount": {
                                                                              "name": "beforeUnmount",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36106,
                                                                                    36129
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "destroyed": {
                                                                              "name": "destroyed",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "deprecated",
                                                                                  "text": "use `unmounted` instead"
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36181,
                                                                                    36200
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "unmounted": {
                                                                              "name": "unmounted",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "(() => void) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36205,
                                                                                    36224
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "(() => void) | undefined"
                                                                            },
                                                                            "renderTracked": {
                                                                              "name": "renderTracked",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "DebuggerHook | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36229,
                                                                                    36258
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "DebuggerHook | undefined"
                                                                            },
                                                                            "renderTriggered": {
                                                                              "name": "renderTriggered",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "DebuggerHook | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36263,
                                                                                    36294
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "DebuggerHook | undefined"
                                                                            },
                                                                            "errorCaptured": {
                                                                              "name": "errorCaptured",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "ErrorCapturedHook<unknown> | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36299,
                                                                                    36333
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "ErrorCapturedHook<unknown> | undefined"
                                                                            },
                                                                            "delimiters": {
                                                                              "name": "delimiters",
                                                                              "global": false,
                                                                              "description": "runtime compile only",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "deprecated",
                                                                                  "text": "use `compilerOptions.delimiters` instead."
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "[string, string] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36443,
                                                                                    36473
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "[string, string] | undefined"
                                                                            },
                                                                            "___differentiator": {
                                                                              "name": "___differentiator",
                                                                              "global": false,
                                                                              "description": "#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | number | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    36783,
                                                                                    36830
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "string | number | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "string",
                                                                                  "2": "number"
                                                                                }
                                                                              }
                                                                            },
                                                                            "___isBuiltIn": {
                                                                              "name": "___isBuiltIn",
                                                                              "global": false,
                                                                              "description": "Compat build only, for bailing out of certain compatibility behavior",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "boolean | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    55921,
                                                                                    55943
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "boolean | undefined"
                                                                            },
                                                                            "___file": {
                                                                              "name": "___file",
                                                                              "global": false,
                                                                              "description": "This one should be exposed so that devtools can make use of it",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    56034,
                                                                                    56050
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | undefined"
                                                                            },
                                                                            "___name": {
                                                                              "name": "___name",
                                                                              "global": false,
                                                                              "description": "name inferred from filename",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    56106,
                                                                                    56122
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | undefined"
                                                                            },
                                                                            "beforeRouteEnter": {
                                                                              "name": "beforeRouteEnter",
                                                                              "global": false,
                                                                              "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "to - RouteLocationRaw we are navigating to"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "from - RouteLocationRaw we are navigating from"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "NavigationGuardWithThis<undefined> | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                                  "range": [
                                                                                    60091,
                                                                                    60218
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "NavigationGuardWithThis<undefined> | undefined"
                                                                            },
                                                                            "beforeRouteUpdate": {
                                                                              "name": "beforeRouteUpdate",
                                                                              "global": false,
                                                                              "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "to - RouteLocationRaw we are navigating to"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "from - RouteLocationRaw we are navigating from"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "NavigationGuard | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                                  "range": [
                                                                                    60665,
                                                                                    60775
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "NavigationGuard | undefined"
                                                                            },
                                                                            "beforeRouteLeave": {
                                                                              "name": "beforeRouteLeave",
                                                                              "global": false,
                                                                              "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
                                                                              "tags": [
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "to - RouteLocationRaw we are navigating to"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "from - RouteLocationRaw we are navigating from"
                                                                                },
                                                                                {
                                                                                  "name": "param",
                                                                                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                                }
                                                                              ],
                                                                              "required": false,
                                                                              "type": "NavigationGuard | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                                  "range": [
                                                                                    61140,
                                                                                    61248
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "NavigationGuard | undefined"
                                                                            },
                                                                            "head": {
                                                                              "name": "head",
                                                                              "global": false,
                                                                              "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "((nuxtApp: NuxtApp) => UseHeadInput) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/types/augments.d.ts",
                                                                                  "range": [
                                                                                    1615,
                                                                                    1652
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "((nuxtApp: NuxtApp) => UseHeadInput) | undefined"
                                                                            },
                                                                            "key": {
                                                                              "name": "key",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "PropertyKey | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    49528,
                                                                                    49546
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "PropertyKey | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "string",
                                                                                  "2": "number",
                                                                                  "3": "symbol"
                                                                                }
                                                                              }
                                                                            },
                                                                            "ref": {
                                                                              "name": "ref",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "VNodeRef | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    49551,
                                                                                    49566
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "VNodeRef | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "string",
                                                                                  "2": "Ref<any>",
                                                                                  "3": {
                                                                                    "kind": "event",
                                                                                    "type": "(ref: Element | ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, refs: Record<...>): void",
                                                                                    "schema": []
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "ref_for": {
                                                                              "name": "ref_for",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "boolean | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    49571,
                                                                                    49589
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "boolean | undefined"
                                                                            },
                                                                            "ref_key": {
                                                                              "name": "ref_key",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    49594,
                                                                                    49611
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | undefined"
                                                                            },
                                                                            "onVnodeBeforeMount": {
                                                                              "name": "onVnodeBeforeMount",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "VNodeMountHook | VNodeMountHook[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    49616,
                                                                                    49671
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "VNodeMountHook | VNodeMountHook[] | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": {
                                                                                    "kind": "event",
                                                                                    "type": "(vnode: VNode<RendererNode, RendererElement, { [key: string]: any; }>): void",
                                                                                    "schema": [
                                                                                      {
                                                                                        "kind": "object",
                                                                                        "type": "RendererNode",
                                                                                        "schema": {}
                                                                                      },
                                                                                      {
                                                                                        "kind": "object",
                                                                                        "type": "RendererElement",
                                                                                        "schema": {}
                                                                                      },
                                                                                      {
                                                                                        "kind": "object",
                                                                                        "type": "{ [key: string]: any; }",
                                                                                        "schema": {}
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "2": {
                                                                                    "kind": "array",
                                                                                    "type": "VNodeMountHook[]",
                                                                                    "schema": [
                                                                                      "VNodeMountHook"
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "onVnodeMounted": {
                                                                              "name": "onVnodeMounted",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "VNodeMountHook | VNodeMountHook[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    49676,
                                                                                    49727
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "VNodeMountHook | VNodeMountHook[] | undefined"
                                                                            },
                                                                            "onVnodeBeforeUpdate": {
                                                                              "name": "onVnodeBeforeUpdate",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "VNodeUpdateHook | VNodeUpdateHook[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    49732,
                                                                                    49790
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "VNodeUpdateHook | VNodeUpdateHook[] | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": {
                                                                                    "kind": "event",
                                                                                    "type": "(vnode: VNode<RendererNode, RendererElement, { [key: string]: any; }>, oldVNode: VNode<RendererNode, RendererElement, { ...; }>): void",
                                                                                    "schema": [
                                                                                      "RendererNode",
                                                                                      "RendererElement",
                                                                                      "{ [key: string]: any; }"
                                                                                    ]
                                                                                  },
                                                                                  "2": {
                                                                                    "kind": "array",
                                                                                    "type": "VNodeUpdateHook[]",
                                                                                    "schema": [
                                                                                      "VNodeUpdateHook"
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "onVnodeUpdated": {
                                                                              "name": "onVnodeUpdated",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "VNodeUpdateHook | VNodeUpdateHook[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    49795,
                                                                                    49848
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "VNodeUpdateHook | VNodeUpdateHook[] | undefined"
                                                                            },
                                                                            "onVnodeBeforeUnmount": {
                                                                              "name": "onVnodeBeforeUnmount",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "VNodeMountHook | VNodeMountHook[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    49853,
                                                                                    49910
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "VNodeMountHook | VNodeMountHook[] | undefined"
                                                                            },
                                                                            "onVnodeUnmounted": {
                                                                              "name": "onVnodeUnmounted",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "VNodeMountHook | VNodeMountHook[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    49915,
                                                                                    49968
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "VNodeMountHook | VNodeMountHook[] | undefined"
                                                                            },
                                                                            "class": {
                                                                              "name": "class",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "unknown",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    55748,
                                                                                    55764
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "unknown"
                                                                            },
                                                                            "style": {
                                                                              "name": "style",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "unknown",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                                  "range": [
                                                                                    55769,
                                                                                    55785
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "unknown"
                                                                            }
                                                                          }
                                                                        },
                                                                        "4": {
                                                                          "kind": "event",
                                                                          "type": "(): Promise<RouteComponent>"
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "components": {
                                                                    "name": "components",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          45323,
                                                                          45342
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "undefined"
                                                                  },
                                                                  "children": {
                                                                    "name": "children",
                                                                    "global": false,
                                                                    "description": "Array of nested routes.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          45348,
                                                                          45365
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "undefined"
                                                                  },
                                                                  "redirect": {
                                                                    "name": "redirect",
                                                                    "global": false,
                                                                    "description": "Where to redirect if the route is directly matched. The redirection happens\r\nbefore any navigation guard and triggers a new navigation with the new\r\ntarget location.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          45371,
                                                                          45388
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "undefined"
                                                                  },
                                                                  "props": {
                                                                    "name": "props",
                                                                    "global": false,
                                                                    "description": "Allow passing down params as props to the component rendered by `router-view`.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "_RouteRecordProps<string | symbol> | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          45499,
                                                                          45525
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "enum",
                                                                      "type": "_RouteRecordProps<string | symbol> | undefined",
                                                                      "schema": {
                                                                        "0": "undefined",
                                                                        "1": "false",
                                                                        "2": "true",
                                                                        "3": "Record<string, any>",
                                                                        "4": {
                                                                          "kind": "event",
                                                                          "type": "(to: RouteLocationNormalizedGeneric): Record<string, any>",
                                                                          "schema": []
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "path": {
                                                                    "name": "path",
                                                                    "global": false,
                                                                    "description": "Path of the record. Should start with `/` unless the record is the child of\r\nanother record.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "example",
                                                                        "text": "`/users/:id` matches `/users/1` as well as `/users/posva`."
                                                                      }
                                                                    ],
                                                                    "required": true,
                                                                    "type": "string",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38118,
                                                                          38131
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string"
                                                                  },
                                                                  "alias": {
                                                                    "name": "alias",
                                                                    "global": false,
                                                                    "description": "Aliases for the record. Allows defining extra paths that will behave like a\r\ncopy of the record. Allows having paths shorthands like `/users/:id` and\r\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "string | string[] | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38645,
                                                                          38671
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "enum",
                                                                      "type": "string | string[] | undefined",
                                                                      "schema": {
                                                                        "0": "undefined",
                                                                        "1": "string",
                                                                        "2": "string[]"
                                                                      }
                                                                    }
                                                                  },
                                                                  "name": {
                                                                    "name": "name",
                                                                    "global": false,
                                                                    "description": "Name for the route record. Must be unique.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteRecordNameGeneric",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38746,
                                                                          38776
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteRecordNameGeneric"
                                                                  },
                                                                  "beforeEnter": {
                                                                    "name": "beforeEnter",
                                                                    "global": false,
                                                                    "description": "Before Enter guard specific to this record. Note `beforeEnter` has no\r\neffect if the record has a `redirect` property.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38934,
                                                                          39022
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "enum",
                                                                      "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined",
                                                                      "schema": {
                                                                        "0": "undefined",
                                                                        "1": "NavigationGuardWithThis<undefined>",
                                                                        "2": {
                                                                          "kind": "array",
                                                                          "type": "NavigationGuardWithThis<undefined>[]",
                                                                          "schema": [
                                                                            "NavigationGuardWithThis<undefined>"
                                                                          ]
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "meta": {
                                                                    "name": "meta",
                                                                    "global": false,
                                                                    "description": "Arbitrary data attached to the record.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteMeta | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          39093,
                                                                          39110
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "enum",
                                                                      "type": "RouteMeta | undefined",
                                                                      "schema": {
                                                                        "0": "undefined",
                                                                        "1": {
                                                                          "kind": "object",
                                                                          "type": "RouteMeta",
                                                                          "schema": {
                                                                            "colorMode": {
                                                                              "name": "colorMode",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                                                                  "range": [
                                                                                    616,
                                                                                    635
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | undefined"
                                                                            },
                                                                            "validate": {
                                                                              "name": "validate",
                                                                              "global": false,
                                                                              "description": "Validate whether a given route can validly be rendered with this page.\n\nReturn true if it is valid, or false if not. If another match can't be found,\nthis will mean a 404. You can also directly return an object with\nstatusCode/statusMessage to respond immediately with an error (other matches\nwill not be checked).",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "((route: RouteLocationNormalizedGeneric) => boolean | Partial<NuxtError<unknown>> | Promise<boolean | Partial<NuxtError<unknown>>>) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                                  "range": [
                                                                                    710,
                                                                                    826
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "((route: RouteLocationNormalizedGeneric) => boolean | Partial<NuxtError<unknown>> | Promise<boolean | Partial<NuxtError<unknown>>>) | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": {
                                                                                    "kind": "event",
                                                                                    "type": "(route: RouteLocationNormalizedGeneric): boolean | Partial<NuxtError<unknown>> | Promise<boolean | Partial<NuxtError<unknown>>>",
                                                                                    "schema": []
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "redirect": {
                                                                              "name": "redirect",
                                                                              "global": false,
                                                                              "description": "Where to redirect if the route is directly matched. The redirection happens\nbefore any navigation guard and triggers a new navigation with the new\ntarget location.",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | ((to: RouteLocationGeneric) => string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric) | { ...; } | { ...; } | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                                  "range": [
                                                                                    1032,
                                                                                    1069
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "string | ((to: RouteLocationGeneric) => string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric) | { ...; } | { ...; } | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "string",
                                                                                  "2": "(to: RouteLocationGeneric) => string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric",
                                                                                  "3": "{ name?: RouteRecordNameGeneric; params?: RouteParamsRawGeneric | undefined; path?: undefined; query?: LocationQueryRaw | undefined; hash?: string | undefined; replace?: boolean | undefined; force?: boolean | undefined; state?: HistoryState | undefined; }",
                                                                                  "4": "{ path: string; query?: LocationQueryRaw | undefined; hash?: string | undefined; replace?: boolean | undefined; force?: boolean | undefined; state?: HistoryState | undefined; }"
                                                                                }
                                                                              }
                                                                            },
                                                                            "alias": {
                                                                              "name": "alias",
                                                                              "global": false,
                                                                              "description": "Aliases for the record. Allows defining extra paths that will behave like a\ncopy of the record. Allows having paths shorthands like `/users/:id` and\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | string[] | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                                  "range": [
                                                                                    1328,
                                                                                    1354
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | string[] | undefined"
                                                                            },
                                                                            "pageTransition": {
                                                                              "name": "pageTransition",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "boolean | { name?: string | undefined; type?: AnimationTypes | undefined; css?: boolean | undefined; duration?: number | { enter: number; leave: number; } | undefined; ... 23 more ...; onAppearCancelled?: Hook<...> | undefined; } | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                                  "range": [
                                                                                    1359,
                                                                                    1402
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "boolean | { name?: string | undefined; type?: AnimationTypes | undefined; css?: boolean | undefined; duration?: number | { enter: number; leave: number; } | undefined; ... 23 more ...; onAppearCancelled?: Hook<...> | undefined; } | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "false",
                                                                                  "2": "true",
                                                                                  "3": "{ name?: string | undefined; type?: AnimationTypes | undefined; css?: boolean | undefined; duration?: number | { enter: number; leave: number; } | undefined; enterFromClass?: string | undefined; ... 22 more ...; onAppearCancelled?: Hook<...> | undefined; }"
                                                                                }
                                                                              }
                                                                            },
                                                                            "layoutTransition": {
                                                                              "name": "layoutTransition",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "boolean | { name?: string | undefined; type?: AnimationTypes | undefined; css?: boolean | undefined; duration?: number | { enter: number; leave: number; } | undefined; ... 23 more ...; onAppearCancelled?: Hook<...> | undefined; } | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                                  "range": [
                                                                                    1407,
                                                                                    1452
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "boolean | { name?: string | undefined; type?: AnimationTypes | undefined; css?: boolean | undefined; duration?: number | { enter: number; leave: number; } | undefined; ... 23 more ...; onAppearCancelled?: Hook<...> | undefined; } | undefined"
                                                                            },
                                                                            "key": {
                                                                              "name": "key",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | false | ((route: RouteLocationNormalizedLoadedGeneric) => string) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                                  "range": [
                                                                                    1457,
                                                                                    1531
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "string | false | ((route: RouteLocationNormalizedLoadedGeneric) => string) | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "string",
                                                                                  "2": "false",
                                                                                  "3": {
                                                                                    "kind": "event",
                                                                                    "type": "(route: RouteLocationNormalizedLoadedGeneric): string",
                                                                                    "schema": []
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "keepalive": {
                                                                              "name": "keepalive",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "boolean | { include?: MatchPattern | undefined; exclude?: MatchPattern | undefined; max?: string | number | undefined; } | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                                  "range": [
                                                                                    1536,
                                                                                    1573
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "boolean | { include?: MatchPattern | undefined; exclude?: MatchPattern | undefined; max?: string | number | undefined; } | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "false",
                                                                                  "2": "true",
                                                                                  "3": "{ include?: MatchPattern | undefined; exclude?: MatchPattern | undefined; max?: string | number | undefined; }"
                                                                                }
                                                                              }
                                                                            },
                                                                            "name": {
                                                                              "name": "name",
                                                                              "global": false,
                                                                              "description": "You may define a name for this page's route.",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                                  "range": [
                                                                                    1634,
                                                                                    1648
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | undefined"
                                                                            },
                                                                            "path": {
                                                                              "name": "path",
                                                                              "global": false,
                                                                              "description": "You may define a path matcher, if you have a more complex pattern than can be expressed with the file name.",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "string | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                                  "range": [
                                                                                    1772,
                                                                                    1786
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": "string | undefined"
                                                                            },
                                                                            "scrollToTop": {
                                                                              "name": "scrollToTop",
                                                                              "global": false,
                                                                              "description": "Set to `false` to avoid scrolling to top on page navigations",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "boolean | ((to: RouteLocationNormalizedLoadedGeneric, from: RouteLocationNormalizedLoadedGeneric) => boolean) | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                                  "range": [
                                                                                    1863,
                                                                                    1973
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "boolean | ((to: RouteLocationNormalizedLoadedGeneric, from: RouteLocationNormalizedLoadedGeneric) => boolean) | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "false",
                                                                                  "2": "true",
                                                                                  "3": {
                                                                                    "kind": "event",
                                                                                    "type": "(to: RouteLocationNormalizedLoadedGeneric, from: RouteLocationNormalizedLoadedGeneric): boolean",
                                                                                    "schema": []
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            "layout": {
                                                                              "name": "layout",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": false,
                                                                              "type": "false | LayoutKey | undefined",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "/home/msrody/Workspace/therodysite/.nuxt/types/layouts.d.ts",
                                                                                  "range": [
                                                                                    205,
                                                                                    274
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "false | LayoutKey | undefined",
                                                                                "schema": {
                                                                                  "0": "undefined",
                                                                                  "1": "false",
                                                                                  "2": "\"default\"",
                                                                                  "3": "\"article\"",
                                                                                  "4": "\"page\""
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "end": {
                                                                    "name": "end",
                                                                    "global": false,
                                                                    "description": "Should the RegExp match until the end by appending a `$` to it.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`true`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16460,
                                                                          16474
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  },
                                                                  "sensitive": {
                                                                    "name": "sensitive",
                                                                    "global": false,
                                                                    "description": "Makes the RegExp case-sensitive.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`false`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16002,
                                                                          16022
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  },
                                                                  "strict": {
                                                                    "name": "strict",
                                                                    "global": false,
                                                                    "description": "Whether to disallow a trailing slash or not.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`false`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16137,
                                                                          16154
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "kind": "object",
                                                                "type": "RouteRecordSingleViewWithChildren",
                                                                "schema": {
                                                                  "component": {
                                                                    "name": "component",
                                                                    "global": false,
                                                                    "description": "Component to display when the URL matches this route.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RawRouteComponent | null | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          45780,
                                                                          45829
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "enum",
                                                                      "type": "RawRouteComponent | null | undefined",
                                                                      "schema": {
                                                                        "0": "undefined",
                                                                        "1": "null",
                                                                        "2": "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, any>",
                                                                        "3": "FunctionalComponent<any, {}, any, {}>",
                                                                        "4": "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>",
                                                                        "5": "DefineComponent",
                                                                        "6": "Lazy<RouteComponent>"
                                                                      }
                                                                    }
                                                                  },
                                                                  "components": {
                                                                    "name": "components",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          45835,
                                                                          45854
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "undefined"
                                                                  },
                                                                  "children": {
                                                                    "name": "children",
                                                                    "global": false,
                                                                    "description": "Array of nested routes.",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "RouteRecordRaw[]",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          45860,
                                                                          45887
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteRecordRaw[]"
                                                                  },
                                                                  "props": {
                                                                    "name": "props",
                                                                    "global": false,
                                                                    "description": "Allow passing down params as props to the component rendered by `router-view`.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "_RouteRecordProps<string | symbol> | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          45998,
                                                                          46024
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "_RouteRecordProps<string | symbol> | undefined"
                                                                  },
                                                                  "path": {
                                                                    "name": "path",
                                                                    "global": false,
                                                                    "description": "Path of the record. Should start with `/` unless the record is the child of\r\nanother record.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "example",
                                                                        "text": "`/users/:id` matches `/users/1` as well as `/users/posva`."
                                                                      }
                                                                    ],
                                                                    "required": true,
                                                                    "type": "string",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38118,
                                                                          38131
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string"
                                                                  },
                                                                  "redirect": {
                                                                    "name": "redirect",
                                                                    "global": false,
                                                                    "description": "Where to redirect if the route is directly matched. The redirection happens\r\nbefore any navigation guard and triggers a new navigation with the new\r\ntarget location.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteRecordRedirectOption | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38343,
                                                                          38380
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteRecordRedirectOption | undefined"
                                                                  },
                                                                  "alias": {
                                                                    "name": "alias",
                                                                    "global": false,
                                                                    "description": "Aliases for the record. Allows defining extra paths that will behave like a\r\ncopy of the record. Allows having paths shorthands like `/users/:id` and\r\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "string | string[] | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38645,
                                                                          38671
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string | string[] | undefined"
                                                                  },
                                                                  "name": {
                                                                    "name": "name",
                                                                    "global": false,
                                                                    "description": "Name for the route record. Must be unique.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteRecordNameGeneric",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38746,
                                                                          38776
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteRecordNameGeneric"
                                                                  },
                                                                  "beforeEnter": {
                                                                    "name": "beforeEnter",
                                                                    "global": false,
                                                                    "description": "Before Enter guard specific to this record. Note `beforeEnter` has no\r\neffect if the record has a `redirect` property.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38934,
                                                                          39022
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined"
                                                                  },
                                                                  "meta": {
                                                                    "name": "meta",
                                                                    "global": false,
                                                                    "description": "Arbitrary data attached to the record.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteMeta | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          39093,
                                                                          39110
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteMeta | undefined"
                                                                  },
                                                                  "end": {
                                                                    "name": "end",
                                                                    "global": false,
                                                                    "description": "Should the RegExp match until the end by appending a `$` to it.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`true`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16460,
                                                                          16474
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  },
                                                                  "sensitive": {
                                                                    "name": "sensitive",
                                                                    "global": false,
                                                                    "description": "Makes the RegExp case-sensitive.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`false`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16002,
                                                                          16022
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  },
                                                                  "strict": {
                                                                    "name": "strict",
                                                                    "global": false,
                                                                    "description": "Whether to disallow a trailing slash or not.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`false`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16137,
                                                                          16154
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "kind": "object",
                                                                "type": "RouteRecordMultipleViews",
                                                                "schema": {
                                                                  "components": {
                                                                    "name": "components",
                                                                    "global": false,
                                                                    "description": "Components to display when the URL matches this route. Allow using named views.",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "Record<string, RawRouteComponent>",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          40321,
                                                                          40367
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "Record<string, RawRouteComponent>"
                                                                  },
                                                                  "component": {
                                                                    "name": "component",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          40373,
                                                                          40391
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "undefined"
                                                                  },
                                                                  "children": {
                                                                    "name": "children",
                                                                    "global": false,
                                                                    "description": "Array of nested routes.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          40397,
                                                                          40414
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "undefined"
                                                                  },
                                                                  "redirect": {
                                                                    "name": "redirect",
                                                                    "global": false,
                                                                    "description": "Where to redirect if the route is directly matched. The redirection happens\r\nbefore any navigation guard and triggers a new navigation with the new\r\ntarget location.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          40420,
                                                                          40437
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "undefined"
                                                                  },
                                                                  "props": {
                                                                    "name": "props",
                                                                    "global": false,
                                                                    "description": "Allow passing down params as props to the component rendered by\r\n`router-view`. Should be an object with the same keys as `components` or a\r\nboolean to be applied to every component.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "boolean | Record<string, _RouteRecordProps<string | symbol>> | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          40666,
                                                                          40718
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "enum",
                                                                      "type": "boolean | Record<string, _RouteRecordProps<string | symbol>> | undefined",
                                                                      "schema": {
                                                                        "0": "undefined",
                                                                        "1": "false",
                                                                        "2": "true",
                                                                        "3": "Record<string, _RouteRecordProps<string | symbol>>"
                                                                      }
                                                                    }
                                                                  },
                                                                  "path": {
                                                                    "name": "path",
                                                                    "global": false,
                                                                    "description": "Path of the record. Should start with `/` unless the record is the child of\r\nanother record.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "example",
                                                                        "text": "`/users/:id` matches `/users/1` as well as `/users/posva`."
                                                                      }
                                                                    ],
                                                                    "required": true,
                                                                    "type": "string",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38118,
                                                                          38131
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string"
                                                                  },
                                                                  "alias": {
                                                                    "name": "alias",
                                                                    "global": false,
                                                                    "description": "Aliases for the record. Allows defining extra paths that will behave like a\r\ncopy of the record. Allows having paths shorthands like `/users/:id` and\r\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "string | string[] | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38645,
                                                                          38671
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string | string[] | undefined"
                                                                  },
                                                                  "name": {
                                                                    "name": "name",
                                                                    "global": false,
                                                                    "description": "Name for the route record. Must be unique.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteRecordNameGeneric",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38746,
                                                                          38776
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteRecordNameGeneric"
                                                                  },
                                                                  "beforeEnter": {
                                                                    "name": "beforeEnter",
                                                                    "global": false,
                                                                    "description": "Before Enter guard specific to this record. Note `beforeEnter` has no\r\neffect if the record has a `redirect` property.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38934,
                                                                          39022
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined"
                                                                  },
                                                                  "meta": {
                                                                    "name": "meta",
                                                                    "global": false,
                                                                    "description": "Arbitrary data attached to the record.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteMeta | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          39093,
                                                                          39110
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteMeta | undefined"
                                                                  },
                                                                  "end": {
                                                                    "name": "end",
                                                                    "global": false,
                                                                    "description": "Should the RegExp match until the end by appending a `$` to it.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`true`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16460,
                                                                          16474
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  },
                                                                  "sensitive": {
                                                                    "name": "sensitive",
                                                                    "global": false,
                                                                    "description": "Makes the RegExp case-sensitive.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`false`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16002,
                                                                          16022
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  },
                                                                  "strict": {
                                                                    "name": "strict",
                                                                    "global": false,
                                                                    "description": "Whether to disallow a trailing slash or not.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`false`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16137,
                                                                          16154
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "kind": "object",
                                                                "type": "RouteRecordMultipleViewsWithChildren",
                                                                "schema": {
                                                                  "components": {
                                                                    "name": "components",
                                                                    "global": false,
                                                                    "description": "Components to display when the URL matches this route. Allow using named views.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "Record<string, RawRouteComponent> | null | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          41030,
                                                                          41096
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "enum",
                                                                      "type": "Record<string, RawRouteComponent> | null | undefined",
                                                                      "schema": {
                                                                        "0": "undefined",
                                                                        "1": "null",
                                                                        "2": "Record<string, RawRouteComponent>"
                                                                      }
                                                                    }
                                                                  },
                                                                  "component": {
                                                                    "name": "component",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          41102,
                                                                          41120
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "undefined"
                                                                  },
                                                                  "children": {
                                                                    "name": "children",
                                                                    "global": false,
                                                                    "description": "Array of nested routes.",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "RouteRecordRaw[]",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          41126,
                                                                          41153
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteRecordRaw[]"
                                                                  },
                                                                  "props": {
                                                                    "name": "props",
                                                                    "global": false,
                                                                    "description": "Allow passing down params as props to the component rendered by\r\n`router-view`. Should be an object with the same keys as `components` or a\r\nboolean to be applied to every component.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "boolean | Record<string, _RouteRecordProps<string | symbol>> | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          41382,
                                                                          41434
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | Record<string, _RouteRecordProps<string | symbol>> | undefined"
                                                                  },
                                                                  "path": {
                                                                    "name": "path",
                                                                    "global": false,
                                                                    "description": "Path of the record. Should start with `/` unless the record is the child of\r\nanother record.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "example",
                                                                        "text": "`/users/:id` matches `/users/1` as well as `/users/posva`."
                                                                      }
                                                                    ],
                                                                    "required": true,
                                                                    "type": "string",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38118,
                                                                          38131
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string"
                                                                  },
                                                                  "redirect": {
                                                                    "name": "redirect",
                                                                    "global": false,
                                                                    "description": "Where to redirect if the route is directly matched. The redirection happens\r\nbefore any navigation guard and triggers a new navigation with the new\r\ntarget location.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteRecordRedirectOption | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38343,
                                                                          38380
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteRecordRedirectOption | undefined"
                                                                  },
                                                                  "alias": {
                                                                    "name": "alias",
                                                                    "global": false,
                                                                    "description": "Aliases for the record. Allows defining extra paths that will behave like a\r\ncopy of the record. Allows having paths shorthands like `/users/:id` and\r\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "string | string[] | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38645,
                                                                          38671
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string | string[] | undefined"
                                                                  },
                                                                  "name": {
                                                                    "name": "name",
                                                                    "global": false,
                                                                    "description": "Name for the route record. Must be unique.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteRecordNameGeneric",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38746,
                                                                          38776
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteRecordNameGeneric"
                                                                  },
                                                                  "beforeEnter": {
                                                                    "name": "beforeEnter",
                                                                    "global": false,
                                                                    "description": "Before Enter guard specific to this record. Note `beforeEnter` has no\r\neffect if the record has a `redirect` property.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38934,
                                                                          39022
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined"
                                                                  },
                                                                  "meta": {
                                                                    "name": "meta",
                                                                    "global": false,
                                                                    "description": "Arbitrary data attached to the record.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteMeta | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          39093,
                                                                          39110
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteMeta | undefined"
                                                                  },
                                                                  "end": {
                                                                    "name": "end",
                                                                    "global": false,
                                                                    "description": "Should the RegExp match until the end by appending a `$` to it.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`true`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16460,
                                                                          16474
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  },
                                                                  "sensitive": {
                                                                    "name": "sensitive",
                                                                    "global": false,
                                                                    "description": "Makes the RegExp case-sensitive.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`false`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16002,
                                                                          16022
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  },
                                                                  "strict": {
                                                                    "name": "strict",
                                                                    "global": false,
                                                                    "description": "Whether to disallow a trailing slash or not.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`false`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16137,
                                                                          16154
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "kind": "object",
                                                                "type": "RouteRecordRedirect",
                                                                "schema": {
                                                                  "redirect": {
                                                                    "name": "redirect",
                                                                    "global": false,
                                                                    "description": "Where to redirect if the route is directly matched. The redirection happens\r\nbefore any navigation guard and triggers a new navigation with the new\r\ntarget location.",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "RouteRecordRedirectOption",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          44794,
                                                                          44830
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "enum",
                                                                      "type": "RouteRecordRedirectOption",
                                                                      "schema": {
                                                                        "0": "string",
                                                                        "1": "RouteLocationAsRelativeGeneric",
                                                                        "2": "RouteLocationAsPathGeneric",
                                                                        "3": "(to: RouteLocationGeneric) => string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric"
                                                                      }
                                                                    }
                                                                  },
                                                                  "component": {
                                                                    "name": "component",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          44836,
                                                                          44854
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "undefined"
                                                                  },
                                                                  "components": {
                                                                    "name": "components",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          44860,
                                                                          44879
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "undefined"
                                                                  },
                                                                  "props": {
                                                                    "name": "props",
                                                                    "global": false,
                                                                    "description": "Allow passing down params as props to the component rendered by `router-view`.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          44885,
                                                                          44899
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "undefined"
                                                                  },
                                                                  "path": {
                                                                    "name": "path",
                                                                    "global": false,
                                                                    "description": "Path of the record. Should start with `/` unless the record is the child of\r\nanother record.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "example",
                                                                        "text": "`/users/:id` matches `/users/1` as well as `/users/posva`."
                                                                      }
                                                                    ],
                                                                    "required": true,
                                                                    "type": "string",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38118,
                                                                          38131
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string"
                                                                  },
                                                                  "alias": {
                                                                    "name": "alias",
                                                                    "global": false,
                                                                    "description": "Aliases for the record. Allows defining extra paths that will behave like a\r\ncopy of the record. Allows having paths shorthands like `/users/:id` and\r\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "string | string[] | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38645,
                                                                          38671
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string | string[] | undefined"
                                                                  },
                                                                  "name": {
                                                                    "name": "name",
                                                                    "global": false,
                                                                    "description": "Name for the route record. Must be unique.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteRecordNameGeneric",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38746,
                                                                          38776
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteRecordNameGeneric"
                                                                  },
                                                                  "beforeEnter": {
                                                                    "name": "beforeEnter",
                                                                    "global": false,
                                                                    "description": "Before Enter guard specific to this record. Note `beforeEnter` has no\r\neffect if the record has a `redirect` property.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          38934,
                                                                          39022
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined"
                                                                  },
                                                                  "meta": {
                                                                    "name": "meta",
                                                                    "global": false,
                                                                    "description": "Arbitrary data attached to the record.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteMeta | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          39093,
                                                                          39110
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "RouteMeta | undefined"
                                                                  },
                                                                  "children": {
                                                                    "name": "children",
                                                                    "global": false,
                                                                    "description": "Array of nested routes.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "RouteRecordRaw[] | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          39166,
                                                                          39194
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "enum",
                                                                      "type": "RouteRecordRaw[] | undefined",
                                                                      "schema": {
                                                                        "0": "undefined",
                                                                        "1": "RouteRecordRaw[]"
                                                                      }
                                                                    }
                                                                  },
                                                                  "end": {
                                                                    "name": "end",
                                                                    "global": false,
                                                                    "description": "Should the RegExp match until the end by appending a `$` to it.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`true`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16460,
                                                                          16474
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  },
                                                                  "sensitive": {
                                                                    "name": "sensitive",
                                                                    "global": false,
                                                                    "description": "Makes the RegExp case-sensitive.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`false`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16002,
                                                                          16022
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  },
                                                                  "strict": {
                                                                    "name": "strict",
                                                                    "global": false,
                                                                    "description": "Whether to disallow a trailing slash or not.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "defaultValue",
                                                                        "text": "`false`"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "boolean | undefined",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                        "range": [
                                                                          16137,
                                                                          16154
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean | undefined"
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "meta": {
                                                      "name": "meta",
                                                      "global": false,
                                                      "description": "{@inheritDoc _RouteRecordBase.meta}",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "RouteMeta",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            42748,
                                                            42794
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "RouteMeta"
                                                    },
                                                    "props": {
                                                      "name": "props",
                                                      "global": false,
                                                      "description": "{@inheritDoc RouteRecordMultipleViews.props}",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "Record<string, _RouteRecordProps<string | symbol>>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            42871,
                                                            42912
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Record<string, _RouteRecordProps<string | symbol>>"
                                                    },
                                                    "beforeEnter": {
                                                      "name": "beforeEnter",
                                                      "global": false,
                                                      "description": "Registered beforeEnter guards",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            42974,
                                                            43019
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined"
                                                    },
                                                    "leaveGuards": {
                                                      "name": "leaveGuards",
                                                      "global": false,
                                                      "description": "Registered leave guards",
                                                      "tags": [
                                                        {
                                                          "name": "internal"
                                                        }
                                                      ],
                                                      "required": true,
                                                      "type": "Set<NavigationGuard>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            43101,
                                                            43135
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Set<NavigationGuard>"
                                                    },
                                                    "updateGuards": {
                                                      "name": "updateGuards",
                                                      "global": false,
                                                      "description": "Registered update guards",
                                                      "tags": [
                                                        {
                                                          "name": "internal"
                                                        }
                                                      ],
                                                      "required": true,
                                                      "type": "Set<NavigationGuard>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            43218,
                                                            43253
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Set<NavigationGuard>"
                                                    },
                                                    "enterCallbacks": {
                                                      "name": "enterCallbacks",
                                                      "global": false,
                                                      "description": "Registered beforeRouteEnter callbacks passed to `next` or returned in guards",
                                                      "tags": [
                                                        {
                                                          "name": "internal"
                                                        }
                                                      ],
                                                      "required": true,
                                                      "type": "Record<string, NavigationGuardNextCallback[]>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            43388,
                                                            43450
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Record<string, NavigationGuardNextCallback[]>"
                                                    },
                                                    "instances": {
                                                      "name": "instances",
                                                      "global": false,
                                                      "description": "Mounted route component instances\r\nHaving the instances on the record mean beforeRouteUpdate and\r\nbeforeRouteLeave guards can only be invoked with the latest mounted app\r\ninstance if there are multiple application instances rendering the same\r\nview, basically duplicating the content on the page, which shouldn't happen\r\nin practice. It will work if multiple apps are rendering different named\r\nviews.",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "Record<string, ComponentPublicInstance | null | undefined>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            43926,
                                                            43996
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Record<string, ComponentPublicInstance | null | undefined>"
                                                    },
                                                    "aliasOf": {
                                                      "name": "aliasOf",
                                                      "global": false,
                                                      "description": "Defines if this record is the alias of another one. This property is\r\n`undefined` if the record is the original one.",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "RouteRecordNormalized | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            44152,
                                                            44195
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "RouteRecordNormalized | undefined",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": {
                                                            "kind": "object",
                                                            "type": "RouteRecordNormalized",
                                                            "schema": {
                                                              "path": {
                                                                "name": "path",
                                                                "global": false,
                                                                "description": "{@inheritDoc _RouteRecordBase.path}",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "string",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      42194,
                                                                      42225
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string"
                                                              },
                                                              "redirect": {
                                                                "name": "redirect",
                                                                "global": false,
                                                                "description": "{@inheritDoc _RouteRecordBase.redirect}",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "RouteRecordRedirectOption | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      42297,
                                                                      42348
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordRedirectOption | undefined"
                                                              },
                                                              "name": {
                                                                "name": "name",
                                                                "global": false,
                                                                "description": "{@inheritDoc _RouteRecordBase.name}",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "RouteRecordNameGeneric",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      42416,
                                                                      42447
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordNameGeneric"
                                                              },
                                                              "components": {
                                                                "name": "components",
                                                                "global": false,
                                                                "description": "{@inheritDoc RouteRecordMultipleViews.components}",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Record<string, RawRouteComponent> | null | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      42529,
                                                                      42599
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, RawRouteComponent> | null | undefined"
                                                              },
                                                              "children": {
                                                                "name": "children",
                                                                "global": false,
                                                                "description": "Nested route records.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "RouteRecordRaw[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      42653,
                                                                      42680
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordRaw[]"
                                                              },
                                                              "meta": {
                                                                "name": "meta",
                                                                "global": false,
                                                                "description": "{@inheritDoc _RouteRecordBase.meta}",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "RouteMeta",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      42748,
                                                                      42794
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteMeta"
                                                              },
                                                              "props": {
                                                                "name": "props",
                                                                "global": false,
                                                                "description": "{@inheritDoc RouteRecordMultipleViews.props}",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Record<string, _RouteRecordProps<string | symbol>>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      42871,
                                                                      42912
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, _RouteRecordProps<string | symbol>>"
                                                              },
                                                              "beforeEnter": {
                                                                "name": "beforeEnter",
                                                                "global": false,
                                                                "description": "Registered beforeEnter guards",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      42974,
                                                                      43019
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[] | undefined"
                                                              },
                                                              "leaveGuards": {
                                                                "name": "leaveGuards",
                                                                "global": false,
                                                                "description": "Registered leave guards",
                                                                "tags": [
                                                                  {
                                                                    "name": "internal"
                                                                  }
                                                                ],
                                                                "required": true,
                                                                "type": "Set<NavigationGuard>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      43101,
                                                                      43135
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Set<NavigationGuard>"
                                                              },
                                                              "updateGuards": {
                                                                "name": "updateGuards",
                                                                "global": false,
                                                                "description": "Registered update guards",
                                                                "tags": [
                                                                  {
                                                                    "name": "internal"
                                                                  }
                                                                ],
                                                                "required": true,
                                                                "type": "Set<NavigationGuard>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      43218,
                                                                      43253
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Set<NavigationGuard>"
                                                              },
                                                              "enterCallbacks": {
                                                                "name": "enterCallbacks",
                                                                "global": false,
                                                                "description": "Registered beforeRouteEnter callbacks passed to `next` or returned in guards",
                                                                "tags": [
                                                                  {
                                                                    "name": "internal"
                                                                  }
                                                                ],
                                                                "required": true,
                                                                "type": "Record<string, NavigationGuardNextCallback[]>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      43388,
                                                                      43450
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, NavigationGuardNextCallback[]>"
                                                              },
                                                              "instances": {
                                                                "name": "instances",
                                                                "global": false,
                                                                "description": "Mounted route component instances\r\nHaving the instances on the record mean beforeRouteUpdate and\r\nbeforeRouteLeave guards can only be invoked with the latest mounted app\r\ninstance if there are multiple application instances rendering the same\r\nview, basically duplicating the content on the page, which shouldn't happen\r\nin practice. It will work if multiple apps are rendering different named\r\nviews.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Record<string, ComponentPublicInstance | null | undefined>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      43926,
                                                                      43996
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, ComponentPublicInstance | null | undefined>"
                                                              },
                                                              "aliasOf": {
                                                                "name": "aliasOf",
                                                                "global": false,
                                                                "description": "Defines if this record is the alias of another one. This property is\r\n`undefined` if the record is the original one.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "RouteRecordNormalized | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      44152,
                                                                      44195
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordNormalized | undefined"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "name": {
                                            "name": "name",
                                            "global": false,
                                            "description": "Name of the matched record",
                                            "tags": [],
                                            "required": true,
                                            "type": "RouteRecordNameGeneric",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  23275,
                                                  23304
                                                ]
                                              }
                                            ],
                                            "schema": "RouteRecordNameGeneric"
                                          },
                                          "params": {
                                            "name": "params",
                                            "global": false,
                                            "description": "Object of decoded params extracted from the `path`.",
                                            "tags": [],
                                            "required": true,
                                            "type": "RouteParamsGeneric",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  23310,
                                                  23337
                                                ]
                                              }
                                            ],
                                            "schema": "RouteParamsGeneric"
                                          },
                                          "fullPath": {
                                            "name": "fullPath",
                                            "global": false,
                                            "description": "The whole location including the `search` and `hash`. This string is\r\npercentage encoded.",
                                            "tags": [],
                                            "required": true,
                                            "type": "string",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  21202,
                                                  21219
                                                ]
                                              }
                                            ],
                                            "schema": "string"
                                          },
                                          "query": {
                                            "name": "query",
                                            "global": false,
                                            "description": "Object representation of the `search` property of the current location.",
                                            "tags": [],
                                            "required": true,
                                            "type": "LocationQuery",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  21323,
                                                  21344
                                                ]
                                              }
                                            ],
                                            "schema": "LocationQuery"
                                          },
                                          "hash": {
                                            "name": "hash",
                                            "global": false,
                                            "description": "Hash of the current location. If present, starts with a `#`.",
                                            "tags": [],
                                            "required": true,
                                            "type": "string",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  21437,
                                                  21450
                                                ]
                                              }
                                            ],
                                            "schema": "string"
                                          },
                                          "redirectedFrom": {
                                            "name": "redirectedFrom",
                                            "global": false,
                                            "description": "Contains the location we were initially trying to access before ending up\r\non the current location.",
                                            "tags": [],
                                            "required": true,
                                            "type": "RouteLocationGeneric | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  21589,
                                                  21631
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "enum",
                                              "type": "RouteLocationGeneric | undefined",
                                              "schema": {
                                                "0": "undefined",
                                                "1": {
                                                  "kind": "object",
                                                  "type": "RouteLocationGeneric",
                                                  "schema": {
                                                    "matched": {
                                                      "name": "matched",
                                                      "global": false,
                                                      "description": "Array of {@link RouteRecord} containing components as they were\r\npassed when adding records. It can also contain redirect records. This\r\ncan't be used directly. **This property is non-enumerable**.",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "RouteRecordNormalized[]",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            22061,
                                                            22084
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "array",
                                                        "type": "RouteRecordNormalized[]",
                                                        "schema": {
                                                          "0": "RouteRecordNormalized"
                                                        }
                                                      }
                                                    },
                                                    "fullPath": {
                                                      "name": "fullPath",
                                                      "global": false,
                                                      "description": "The whole location including the `search` and `hash`. This string is\r\npercentage encoded.",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "string",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            21202,
                                                            21219
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "string"
                                                    },
                                                    "query": {
                                                      "name": "query",
                                                      "global": false,
                                                      "description": "Object representation of the `search` property of the current location.",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "LocationQuery",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            21323,
                                                            21344
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "LocationQuery"
                                                    },
                                                    "hash": {
                                                      "name": "hash",
                                                      "global": false,
                                                      "description": "Hash of the current location. If present, starts with a `#`.",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "string",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            21437,
                                                            21450
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "string"
                                                    },
                                                    "redirectedFrom": {
                                                      "name": "redirectedFrom",
                                                      "global": false,
                                                      "description": "Contains the location we were initially trying to access before ending up\r\non the current location.",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "RouteLocationGeneric | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            21589,
                                                            21631
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "RouteLocationGeneric | undefined"
                                                    },
                                                    "path": {
                                                      "name": "path",
                                                      "global": false,
                                                      "description": "Percentage encoded pathname section of the URL.",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "string",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            8190,
                                                            8203
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "string"
                                                    },
                                                    "name": {
                                                      "name": "name",
                                                      "global": false,
                                                      "description": "Name of the matched record",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "RouteRecordNameGeneric | null",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            8062,
                                                            8110
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "RouteRecordNameGeneric | null",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": "null",
                                                          "2": "string",
                                                          "3": "symbol"
                                                        }
                                                      }
                                                    },
                                                    "params": {
                                                      "name": "params",
                                                      "global": false,
                                                      "description": "Object of decoded params extracted from the `path`.",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "RouteParamsGeneric",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            8287,
                                                            8314
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "RouteParamsGeneric"
                                                    },
                                                    "meta": {
                                                      "name": "meta",
                                                      "global": false,
                                                      "description": "Merged `meta` properties from all the matched route records.",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "RouteMeta",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                          "range": [
                                                            8407,
                                                            8423
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "RouteMeta"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "name": "path",
                                            "global": false,
                                            "description": "Percentage encoded pathname section of the URL.",
                                            "tags": [],
                                            "required": true,
                                            "type": "string",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  8190,
                                                  8203
                                                ]
                                              }
                                            ],
                                            "schema": "string"
                                          },
                                          "meta": {
                                            "name": "meta",
                                            "global": false,
                                            "description": "Merged `meta` properties from all the matched route records.",
                                            "tags": [],
                                            "required": true,
                                            "type": "RouteMeta",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  8407,
                                                  8423
                                                ]
                                              }
                                            ],
                                            "schema": "RouteMeta"
                                          }
                                        }
                                      }
                                    },
                                    "$router": {
                                      "name": "$router",
                                      "global": false,
                                      "description": "{@link Router} instance used by the application.",
                                      "tags": [],
                                      "required": true,
                                      "type": "Router",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                          "range": [
                                            61578,
                                            61646
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "object",
                                        "type": "Router",
                                        "schema": {
                                          "currentRoute": {
                                            "name": "currentRoute",
                                            "global": false,
                                            "description": "Current {@link RouteLocationNormalized}",
                                            "tags": [],
                                            "required": true,
                                            "type": "Ref<RouteLocationNormalizedLoadedGeneric>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  31330,
                                                  31388
                                                ]
                                              }
                                            ],
                                            "schema": "Ref<RouteLocationNormalizedLoadedGeneric>"
                                          },
                                          "options": {
                                            "name": "options",
                                            "global": false,
                                            "description": "Original options object passed to create the Router",
                                            "tags": [],
                                            "required": true,
                                            "type": "RouterOptions",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  31472,
                                                  31504
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "object",
                                              "type": "RouterOptions",
                                              "schema": {
                                                "history": {
                                                  "name": "history",
                                                  "global": false,
                                                  "description": "History implementation used by the router. Most web applications should use\r\n`createWebHistory` but it requires the server to be properly configured.\r\nYou can also use a _hash_ based history with `createWebHashHistory` that\r\ndoes not require any configuration on the server but isn't handled at all\r\nby search engines and does poorly on SEO.",
                                                  "tags": [
                                                    {
                                                      "name": "example",
                                                      "text": "```js\r\ncreateRouter({\r\n  history: createWebHistory(),\r\n  // other options...\r\n})\r\n```"
                                                    }
                                                  ],
                                                  "required": true,
                                                  "type": "RouterHistory",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        52147,
                                                        52170
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "object",
                                                    "type": "RouterHistory",
                                                    "schema": {
                                                      "base": {
                                                        "name": "base",
                                                        "global": false,
                                                        "description": "Base path that is prepended to every url. This allows hosting an SPA at a\r\nsub-folder of a domain like `example.com/sub-folder` by having a `base` of\r\n`/sub-folder`",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "string",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              46423,
                                                              46445
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "string"
                                                      },
                                                      "location": {
                                                        "name": "location",
                                                        "global": false,
                                                        "description": "Current History location",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "string",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              46502,
                                                              46537
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "string"
                                                      },
                                                      "state": {
                                                        "name": "state",
                                                        "global": false,
                                                        "description": "Current History state",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "HistoryState",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              46591,
                                                              46620
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "HistoryState"
                                                      },
                                                      "push": {
                                                        "name": "push",
                                                        "global": false,
                                                        "description": "Navigates to a location. In the case of an HTML5 History implementation,\r\nthis will call `history.pushState` to effectively change the URL.",
                                                        "tags": [
                                                          {
                                                            "name": "param",
                                                            "text": "to - location to push"
                                                          },
                                                          {
                                                            "name": "param",
                                                            "text": "data - optional {@link HistoryState} to be associated with the\r\nnavigation entry"
                                                          }
                                                        ],
                                                        "required": true,
                                                        "type": "(to: string, data?: HistoryState | undefined) => void",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              46947,
                                                              47000
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "event",
                                                          "type": "(to: string, data?: HistoryState | undefined): void",
                                                          "schema": {}
                                                        }
                                                      },
                                                      "replace": {
                                                        "name": "replace",
                                                        "global": false,
                                                        "description": "Same as {@link RouterHistory.push} but performs a `history.replaceState`\r\ninstead of `history.pushState`",
                                                        "tags": [
                                                          {
                                                            "name": "param",
                                                            "text": "to - location to set"
                                                          },
                                                          {
                                                            "name": "param",
                                                            "text": "data - optional {@link HistoryState} to be associated with the\r\nnavigation entry"
                                                          }
                                                        ],
                                                        "required": true,
                                                        "type": "(to: string, data?: HistoryState | undefined) => void",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              47291,
                                                              47347
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "event",
                                                          "type": "(to: string, data?: HistoryState | undefined): void",
                                                          "schema": {}
                                                        }
                                                      },
                                                      "go": {
                                                        "name": "go",
                                                        "global": false,
                                                        "description": "Traverses history in a given direction.",
                                                        "tags": [
                                                          {
                                                            "name": "example",
                                                            "text": "```js\r\nmyHistory.go(-1) // equivalent to window.history.back()\r\nmyHistory.go(1) // equivalent to window.history.forward()\r\n```"
                                                          },
                                                          {
                                                            "name": "param",
                                                            "text": "delta - distance to travel. If delta is \\< 0, it will go back,\r\nif it's \\> 0, it will go forward by that amount of entries."
                                                          },
                                                          {
                                                            "name": "param",
                                                            "text": "triggerListeners - whether this should trigger listeners attached to\r\nthe history"
                                                          }
                                                        ],
                                                        "required": true,
                                                        "type": "(delta: number, triggerListeners?: boolean | undefined) => void",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              47858,
                                                              47910
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "event",
                                                          "type": "(delta: number, triggerListeners?: boolean | undefined): void",
                                                          "schema": {}
                                                        }
                                                      },
                                                      "listen": {
                                                        "name": "listen",
                                                        "global": false,
                                                        "description": "Attach a listener to the History implementation that is triggered when the\r\nnavigation is triggered from outside (like the Browser back and forward\r\nbuttons) or when passing `true` to {@link RouterHistory.back } and\r\n{@link RouterHistory.forward }",
                                                        "tags": [
                                                          {
                                                            "name": "param",
                                                            "text": "callback - listener to attach"
                                                          },
                                                          {
                                                            "name": "returns",
                                                            "text": "a callback to remove the listener"
                                                          }
                                                        ],
                                                        "required": true,
                                                        "type": "(callback: NavigationCallback) => () => void",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              48313,
                                                              48362
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "event",
                                                          "type": "(callback: NavigationCallback): () => void",
                                                          "schema": {}
                                                        }
                                                      },
                                                      "createHref": {
                                                        "name": "createHref",
                                                        "global": false,
                                                        "description": "Generates the corresponding href to be used in an anchor tag.",
                                                        "tags": [
                                                          {
                                                            "name": "param",
                                                            "text": "location - history location that should create an href"
                                                          }
                                                        ],
                                                        "required": true,
                                                        "type": "(location: string) => string",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              48534,
                                                              48580
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "event",
                                                          "type": "(location: string): string",
                                                          "schema": {}
                                                        }
                                                      },
                                                      "destroy": {
                                                        "name": "destroy",
                                                        "global": false,
                                                        "description": "Clears any event listener attached by the history implementation.",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "() => void",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              48678,
                                                              48694
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "event",
                                                          "type": "(): void"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "routes": {
                                                  "name": "routes",
                                                  "global": false,
                                                  "description": "Initial list of routes that should be added to the router.",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "readonly RouteRecordRaw[]",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        52261,
                                                        52296
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "array",
                                                    "type": "readonly RouteRecordRaw[]",
                                                    "schema": {
                                                      "0": "RouteRecordRaw"
                                                    }
                                                  }
                                                },
                                                "scrollBehavior": {
                                                  "name": "scrollBehavior",
                                                  "global": false,
                                                  "description": "Function to control scrolling when navigating between pages. Can return a\r\nPromise to delay scrolling. Check {@link ScrollBehavior}.",
                                                  "tags": [
                                                    {
                                                      "name": "example",
                                                      "text": "```js\r\nfunction scrollBehavior(to, from, savedPosition) {\r\n  // `to` and `from` are both route locations\r\n  // `savedPosition` can be null if there isn't one\r\n}\r\n```"
                                                    }
                                                  ],
                                                  "required": false,
                                                  "type": "RouterScrollBehavior | undefined",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        52702,
                                                        52740
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "enum",
                                                    "type": "RouterScrollBehavior | undefined",
                                                    "schema": {
                                                      "0": "undefined",
                                                      "1": {
                                                        "kind": "event",
                                                        "type": "(to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, savedPosition: _ScrollPositionNormalized | null): Awaitable<...>",
                                                        "schema": []
                                                      }
                                                    }
                                                  }
                                                },
                                                "parseQuery": {
                                                  "name": "parseQuery",
                                                  "global": false,
                                                  "description": "Custom implementation to parse a query. See its counterpart,\r\n{@link RouterOptions.stringifyQuery}.",
                                                  "tags": [
                                                    {
                                                      "name": "example",
                                                      "text": "Let's say you want to use the [qs package](https://github.com/ljharb/qs)\r\nto parse queries, you can provide both `parseQuery` and `stringifyQuery`:\r\n```js\r\nimport qs from 'qs'\r\n\r\ncreateRouter({\r\n  // other options...\r\n  parseQuery: qs.parse,\r\n  stringifyQuery: qs.stringify,\r\n})\r\n```"
                                                    }
                                                  ],
                                                  "required": false,
                                                  "type": "((search: string) => LocationQuery) | undefined",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        53265,
                                                        53296
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "enum",
                                                    "type": "((search: string) => LocationQuery) | undefined",
                                                    "schema": {
                                                      "0": "undefined",
                                                      "1": {
                                                        "kind": "event",
                                                        "type": "(search: string): LocationQuery",
                                                        "schema": []
                                                      }
                                                    }
                                                  }
                                                },
                                                "stringifyQuery": {
                                                  "name": "stringifyQuery",
                                                  "global": false,
                                                  "description": "Custom implementation to stringify a query object. Should not prepend a leading `?`.\r\n{@link RouterOptions.parseQueryparseQuery} counterpart to handle query parsing.",
                                                  "tags": [],
                                                  "required": false,
                                                  "type": "((query: LocationQueryRaw) => string) | undefined",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        53504,
                                                        53543
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "enum",
                                                    "type": "((query: LocationQueryRaw) => string) | undefined",
                                                    "schema": {
                                                      "0": "undefined",
                                                      "1": {
                                                        "kind": "event",
                                                        "type": "(query: LocationQueryRaw): string",
                                                        "schema": []
                                                      }
                                                    }
                                                  }
                                                },
                                                "linkActiveClass": {
                                                  "name": "linkActiveClass",
                                                  "global": false,
                                                  "description": "Default class applied to active {@link RouterLink}. If none is provided,\r\n`router-link-active` will be applied.",
                                                  "tags": [],
                                                  "required": false,
                                                  "type": "string | undefined",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        53694,
                                                        53719
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "string | undefined"
                                                },
                                                "linkExactActiveClass": {
                                                  "name": "linkExactActiveClass",
                                                  "global": false,
                                                  "description": "Default class applied to exact active {@link RouterLink}. If none is provided,\r\n`router-link-exact-active` will be applied.",
                                                  "tags": [],
                                                  "required": false,
                                                  "type": "string | undefined",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        53882,
                                                        53912
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "string | undefined"
                                                },
                                                "end": {
                                                  "name": "end",
                                                  "global": false,
                                                  "description": "Should the RegExp match until the end by appending a `$` to it.",
                                                  "tags": [
                                                    {
                                                      "name": "defaultValue",
                                                      "text": "`true`"
                                                    }
                                                  ],
                                                  "required": false,
                                                  "type": "boolean | undefined",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        16460,
                                                        16474
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "boolean | undefined"
                                                },
                                                "sensitive": {
                                                  "name": "sensitive",
                                                  "global": false,
                                                  "description": "Makes the RegExp case-sensitive.",
                                                  "tags": [
                                                    {
                                                      "name": "defaultValue",
                                                      "text": "`false`"
                                                    }
                                                  ],
                                                  "required": false,
                                                  "type": "boolean | undefined",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        16002,
                                                        16022
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "boolean | undefined"
                                                },
                                                "strict": {
                                                  "name": "strict",
                                                  "global": false,
                                                  "description": "Whether to disallow a trailing slash or not.",
                                                  "tags": [
                                                    {
                                                      "name": "defaultValue",
                                                      "text": "`false`"
                                                    }
                                                  ],
                                                  "required": false,
                                                  "type": "boolean | undefined",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        16137,
                                                        16154
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "boolean | undefined"
                                                }
                                              }
                                            }
                                          },
                                          "listening": {
                                            "name": "listening",
                                            "global": false,
                                            "description": "Allows turning off the listening of history events. This is a low level api for micro-frontend.",
                                            "tags": [],
                                            "required": true,
                                            "type": "boolean",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  31632,
                                                  31651
                                                ]
                                              }
                                            ],
                                            "schema": "boolean"
                                          },
                                          "addRoute": {
                                            "name": "addRoute",
                                            "global": false,
                                            "description": "Add a new {@link RouteRecordRawroute record} as the child of an existing route.\nAdd a new {@link RouteRecordRawroute record} to the router.",
                                            "tags": [
                                              {
                                                "name": "param",
                                                "text": "parentName - Parent Route Record where `route` should be appended at"
                                              },
                                              {
                                                "name": "param",
                                                "text": "route - Route Record to add"
                                              },
                                              {
                                                "name": "param",
                                                "text": "route - Route Record to add"
                                              }
                                            ],
                                            "required": true,
                                            "type": "{ (parentName: NonNullable<RouteRecordNameGeneric>, route: RouteRecordRaw): () => void; (route: RouteRecordRaw): () => void; }",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  31901,
                                                  31994
                                                ]
                                              },
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  32140,
                                                  32184
                                                ]
                                              }
                                            ],
                                            "schema": "{ (parentName: NonNullable<RouteRecordNameGeneric>, route: RouteRecordRaw): () => void; (route: RouteRecordRaw): () => void; }"
                                          },
                                          "removeRoute": {
                                            "name": "removeRoute",
                                            "global": false,
                                            "description": "Remove an existing route by its name.",
                                            "tags": [
                                              {
                                                "name": "param",
                                                "text": "name - Name of the route to remove"
                                              }
                                            ],
                                            "required": true,
                                            "type": "(name: NonNullable<RouteRecordNameGeneric>) => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  32312,
                                                  32373
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(name: NonNullable<RouteRecordNameGeneric>): void",
                                              "schema": {}
                                            }
                                          },
                                          "hasRoute": {
                                            "name": "hasRoute",
                                            "global": false,
                                            "description": "Checks if a route with a given name exists",
                                            "tags": [
                                              {
                                                "name": "param",
                                                "text": "name - Name of the route to check"
                                              }
                                            ],
                                            "required": true,
                                            "type": "(name: NonNullable<RouteRecordNameGeneric>) => boolean",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  32505,
                                                  32566
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(name: NonNullable<RouteRecordNameGeneric>): boolean",
                                              "schema": {}
                                            }
                                          },
                                          "getRoutes": {
                                            "name": "getRoutes",
                                            "global": false,
                                            "description": "Get a full list of all the {@link RouteRecordroute records}.",
                                            "tags": [],
                                            "required": true,
                                            "type": "() => RouteRecordNormalized[]",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  32662,
                                                  32689
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(): RouteRecordNormalized[]"
                                            }
                                          },
                                          "clearRoutes": {
                                            "name": "clearRoutes",
                                            "global": false,
                                            "description": "Delete all routes from the router matcher.",
                                            "tags": [],
                                            "required": true,
                                            "type": "() => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  32764,
                                                  32784
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(): void"
                                            }
                                          },
                                          "resolve": {
                                            "name": "resolve",
                                            "global": false,
                                            "description": "Returns the {@link RouteLocationnormalized version} of a\r\n{@link RouteLocationRawroute location}. Also includes an `href` property\r\nthat includes any existing `base`. By default, the `currentLocation` used is\r\n`router.currentRoute` and should only be overridden in advanced use cases.",
                                            "tags": [
                                              {
                                                "name": "param",
                                                "text": "to - Raw route location to resolve"
                                              },
                                              {
                                                "name": "param",
                                                "text": "currentLocation - Optional current location to resolve against"
                                              }
                                            ],
                                            "required": true,
                                            "type": "{ <Name extends keyof RouteMap = string | symbol>(to: RouteLocationAsRelativeTyped<RouteMapGeneric, Name>, currentLocation?: RouteLocationNormalizedLoadedGeneric | undefined): RouteLocationResolvedGeneric; (to: string | ... 1 more ... | RouteLocationAsPathGeneric, currentLocation?: RouteLocationNormalizedLoadedGener...",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  33264,
                                                  33446
                                                ]
                                              },
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  33452,
                                                  33607
                                                ]
                                              }
                                            ],
                                            "schema": "{ <Name extends keyof RouteMap = string | symbol>(to: RouteLocationAsRelativeTyped<RouteMapGeneric, Name>, currentLocation?: RouteLocationNormalizedLoadedGeneric | undefined): RouteLocationResolvedGeneric; (to: string | ... 1 more ... | RouteLocationAsPathGeneric, currentLocation?: RouteLocationNormalizedLoadedGener..."
                                          },
                                          "push": {
                                            "name": "push",
                                            "global": false,
                                            "description": "Programmatically navigate to a new URL by pushing an entry in the history\r\nstack.",
                                            "tags": [
                                              {
                                                "name": "param",
                                                "text": "to - Route location to navigate to"
                                              }
                                            ],
                                            "required": true,
                                            "type": "(to: string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric) => Promise<void | NavigationFailure | undefined>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  33786,
                                                  33860
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(to: string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric): Promise<void | NavigationFailure | undefined>",
                                              "schema": {}
                                            }
                                          },
                                          "replace": {
                                            "name": "replace",
                                            "global": false,
                                            "description": "Programmatically navigate to a new URL by replacing the current entry in\r\nthe history stack.",
                                            "tags": [
                                              {
                                                "name": "param",
                                                "text": "to - Route location to navigate to"
                                              }
                                            ],
                                            "required": true,
                                            "type": "(to: string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric) => Promise<void | NavigationFailure | undefined>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  34050,
                                                  34127
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(to: string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric): Promise<void | NavigationFailure | undefined>",
                                              "schema": {}
                                            }
                                          },
                                          "back": {
                                            "name": "back",
                                            "global": false,
                                            "description": "Go back in history if possible by calling `history.back()`. Equivalent to\r\n`router.go(-1)`.",
                                            "tags": [],
                                            "required": true,
                                            "type": "() => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  34258,
                                                  34291
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(): void"
                                            }
                                          },
                                          "forward": {
                                            "name": "forward",
                                            "global": false,
                                            "description": "Go forward in history if possible by calling `history.forward()`.\r\nEquivalent to `router.go(1)`.",
                                            "tags": [],
                                            "required": true,
                                            "type": "() => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  34427,
                                                  34463
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(): void"
                                            }
                                          },
                                          "go": {
                                            "name": "go",
                                            "global": false,
                                            "description": "Allows you to move forward or backward through the history. Calls\r\n`history.go()`.",
                                            "tags": [
                                              {
                                                "name": "param",
                                                "text": "delta - The position in the history to which you want to move,\r\nrelative to the current page"
                                              }
                                            ],
                                            "required": true,
                                            "type": "(delta: number) => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  34708,
                                                  34732
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(delta: number): void",
                                              "schema": {}
                                            }
                                          },
                                          "beforeEach": {
                                            "name": "beforeEach",
                                            "global": false,
                                            "description": "Add a navigation guard that executes before any navigation. Returns a\r\nfunction that removes the registered guard.",
                                            "tags": [
                                              {
                                                "name": "param",
                                                "text": "guard - navigation guard to add"
                                              }
                                            ],
                                            "required": true,
                                            "type": "(guard: NavigationGuardWithThis<undefined>) => () => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  34941,
                                                  35007
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(guard: NavigationGuardWithThis<undefined>): () => void",
                                              "schema": {
                                                "0": "undefined"
                                              }
                                            }
                                          },
                                          "beforeResolve": {
                                            "name": "beforeResolve",
                                            "global": false,
                                            "description": "Add a navigation guard that executes before navigation is about to be\r\nresolved. At this state all component have been fetched and other\r\nnavigation guards have been successful. Returns a function that removes the\r\nregistered guard.",
                                            "tags": [
                                              {
                                                "name": "param",
                                                "text": "guard - navigation guard to add"
                                              },
                                              {
                                                "name": "returns",
                                                "text": "a function that removes the registered guard"
                                              },
                                              {
                                                "name": "example",
                                                "text": "```js\r\nrouter.beforeResolve(to => {\r\n  if (to.meta.requiresAuth && !isAuthenticated) return false\r\n})\r\n```"
                                              }
                                            ],
                                            "required": true,
                                            "type": "(guard: NavigationGuardWithThis<undefined>) => () => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  35586,
                                                  35655
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(guard: NavigationGuardWithThis<undefined>): () => void",
                                              "schema": {
                                                "0": "undefined"
                                              }
                                            }
                                          },
                                          "afterEach": {
                                            "name": "afterEach",
                                            "global": false,
                                            "description": "Add a navigation hook that is executed after every navigation. Returns a\r\nfunction that removes the registered hook.",
                                            "tags": [
                                              {
                                                "name": "param",
                                                "text": "guard - navigation hook to add"
                                              },
                                              {
                                                "name": "returns",
                                                "text": "a function that removes the registered hook"
                                              },
                                              {
                                                "name": "example",
                                                "text": "```js\r\nrouter.afterEach((to, from, failure) => {\r\n  if (isNavigationFailure(failure)) {\r\n    console.log('failed navigation', failure)\r\n  }\r\n})\r\n```"
                                              }
                                            ],
                                            "required": true,
                                            "type": "(guard: NavigationHookAfter) => () => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  36150,
                                                  36200
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(guard: NavigationHookAfter): () => void",
                                              "schema": {}
                                            }
                                          },
                                          "onError": {
                                            "name": "onError",
                                            "global": false,
                                            "description": "Adds an error handler that is called every time a non caught error happens\r\nduring navigation. This includes errors thrown synchronously and\r\nasynchronously, errors returned or passed to `next` in any navigation\r\nguard, and errors occurred when trying to resolve an async component that\r\nis required to render a route.",
                                            "tags": [
                                              {
                                                "name": "param",
                                                "text": "handler - error handler to register"
                                              }
                                            ],
                                            "required": true,
                                            "type": "(handler: _ErrorListener) => () => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  36638,
                                                  36683
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(handler: _ErrorListener): () => void",
                                              "schema": {}
                                            }
                                          },
                                          "isReady": {
                                            "name": "isReady",
                                            "global": false,
                                            "description": "Returns a Promise that resolves when the router has completed the initial\r\nnavigation, which means it has resolved all async enter hooks and async\r\ncomponents that are associated with the initial route. If the initial\r\nnavigation already happened, the promise resolves immediately.\r\n\r\nThis is useful in server-side rendering to ensure consistent output on both\r\nthe server and the client. Note that on server side, you need to manually\r\npush the initial location while on client side, the router automatically\r\npicks it up from the URL.",
                                            "tags": [],
                                            "required": true,
                                            "type": "() => Promise<void>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  37307,
                                                  37332
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(): Promise<void>"
                                            }
                                          },
                                          "install": {
                                            "name": "install",
                                            "global": false,
                                            "description": "Called automatically by `app.use(router)`. Should not be called manually by\r\nthe user. This will trigger the initial navigation when on client side.",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              },
                                              {
                                                "name": "param",
                                                "text": "app - Application that uses the router"
                                              }
                                            ],
                                            "required": true,
                                            "type": "(app: App<any>) => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                                "range": [
                                                  37600,
                                                  37624
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(app: App<any>): void",
                                              "schema": {
                                                "0": "any"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "$dt": {
                                      "name": "$dt",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "DtFunction",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/index.d.ts",
                                          "range": [
                                            4532,
                                            4548
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "event",
                                        "type": "(path: GeneratedPinceauPaths | (string & {}), key?: \"value\" | \"variable\" | undefined): string",
                                        "schema": {}
                                      }
                                    },
                                    "$pinceau": {
                                      "name": "$pinceau",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "ComputedRef<string>",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/index.d.ts",
                                          "range": [
                                            4557,
                                            4587
                                          ]
                                        }
                                      ],
                                      "schema": "ComputedRef<string>"
                                    },
                                    "$pinceauTheme": {
                                      "name": "$pinceauTheme",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "{ $tokens: TokensFunction; updateToken: (path: string | string[], value: any, mq?: PinceauMediaQueries | undefined) => void; updateTheme: (value: Theme<...>) => void; reactiveToken: (path: GeneratedPinceauPaths | ({} & string)) => WritableComputedRef<...>; resolveStylesheet: () => void; theme: any; }",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/index.d.ts",
                                          "range": [
                                            4596,
                                            4651
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "object",
                                        "type": "{ $tokens: TokensFunction; updateToken: (path: string | string[], value: any, mq?: PinceauMediaQueries | undefined) => void; updateTheme: (value: Theme<...>) => void; reactiveToken: (path: GeneratedPinceauPaths | ({} & string)) => WritableComputedRef<...>; resolveStylesheet: () => void; theme: any; }",
                                        "schema": {
                                          "$tokens": {
                                            "name": "$tokens",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "TokensFunction",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/theme-ee4fd586.d.ts",
                                                "range": [
                                                  316,
                                                  340
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(path?: GeneratedPinceauPaths | (string & {}) | undefined, options?: TokensFunctionOptions | undefined, theme?: any): string | number | DesignTokens | DesignToken<...>",
                                              "schema": {}
                                            }
                                          },
                                          "updateToken": {
                                            "name": "updateToken",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "(path: string | string[], value: any, mq?: PinceauMediaQueries | undefined) => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/theme-ee4fd586.d.ts",
                                                "range": [
                                                  345,
                                                  430
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(path: string | string[], value: any, mq?: PinceauMediaQueries | undefined): void",
                                              "schema": {}
                                            }
                                          },
                                          "updateTheme": {
                                            "name": "updateTheme",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "(value: Theme<{ readonly media: { readonly xs: { readonly value: \"(min-width: 475px)\"; readonly variable: \"var(--media-xs)\"; readonly raw: \"(min-width: 475px)\"; }; readonly sm: { readonly value: \"(min-width: 640px)\"; readonly variable: \"var(--media-sm)\"; readonly raw: \"(min-width: 640px)\"; }; ... 6 more ...; readonl...",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/theme-ee4fd586.d.ts",
                                                "range": [
                                                  435,
                                                  485
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(value: Theme<{ readonly media: { readonly xs: { readonly value: \"(min-width: 475px)\"; readonly variable: \"var(--media-xs)\"; readonly raw: \"(min-width: 475px)\"; }; readonly sm: { readonly value: \"(min-width: 640px)\"; readonly variable: \"var(--media-sm)\"; readonly raw: \"(min-width: 640px)\"; }; ... 6 more ...; readonly portrait: { ...; }; }; ... 18 more ...; readonly alpine: { ...; }; }>): void",
                                              "schema": {}
                                            }
                                          },
                                          "reactiveToken": {
                                            "name": "reactiveToken",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "(path: GeneratedPinceauPaths | ({} & string)) => WritableComputedRef<any>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/theme-ee4fd586.d.ts",
                                                "range": [
                                                  490,
                                                  580
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(path: GeneratedPinceauPaths | ({} & string)): WritableComputedRef<any>",
                                              "schema": {}
                                            }
                                          },
                                          "resolveStylesheet": {
                                            "name": "resolveStylesheet",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "() => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/theme-ee4fd586.d.ts",
                                                "range": [
                                                  585,
                                                  615
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(): void"
                                            }
                                          },
                                          "theme": {
                                            "name": "theme",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "any",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/theme-ee4fd586.d.ts",
                                                "range": [
                                                  620,
                                                  631
                                                ]
                                              }
                                            ],
                                            "schema": "any"
                                          }
                                        }
                                      }
                                    },
                                    "$pinceauRuntime": {
                                      "name": "$pinceauRuntime",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "any",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/index.d.ts",
                                          "range": [
                                            4660,
                                            4681
                                          ]
                                        }
                                      ],
                                      "schema": "any"
                                    },
                                    "$nuxt": {
                                      "name": "$nuxt",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "NuxtApp",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/types/augments.d.ts",
                                          "range": [
                                            1298,
                                            1312
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "object",
                                        "type": "NuxtApp",
                                        "schema": {
                                          "_name": {
                                            "name": "_name",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": true,
                                            "type": "string",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4060,
                                                  4074
                                                ]
                                              }
                                            ],
                                            "schema": "string"
                                          },
                                          "vueApp": {
                                            "name": "vueApp",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "App<Element>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4079,
                                                  4100
                                                ]
                                              }
                                            ],
                                            "schema": "App<Element>"
                                          },
                                          "globalName": {
                                            "name": "globalName",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "string",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4105,
                                                  4124
                                                ]
                                              }
                                            ],
                                            "schema": "string"
                                          },
                                          "versions": {
                                            "name": "versions",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "Record<string, string>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4129,
                                                  4162
                                                ]
                                              }
                                            ],
                                            "schema": "Record<string, string>"
                                          },
                                          "hooks": {
                                            "name": "hooks",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "Hookable<RuntimeNuxtHooks, HookKeys<RuntimeNuxtHooks>>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4167,
                                                  4201
                                                ]
                                              }
                                            ],
                                            "schema": "Hookable<RuntimeNuxtHooks, HookKeys<RuntimeNuxtHooks>>"
                                          },
                                          "hook": {
                                            "name": "hook",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, function_: InferCallback<RuntimeNuxtHooks, NameT>, options?: { ...; } | undefined) => () => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4206,
                                                  4238
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, function_: InferCallback<RuntimeNuxtHooks, NameT>, options?: { ...; } | undefined): () => void",
                                              "schema": {}
                                            }
                                          },
                                          "callHook": {
                                            "name": "callHook",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, ...arguments_: Parameters<InferCallback<RuntimeNuxtHooks, NameT>>) => Promise<...>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4243,
                                                  4283
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, ...arguments_: Parameters<InferCallback<RuntimeNuxtHooks, NameT>>): Promise<...>",
                                              "schema": {}
                                            }
                                          },
                                          "runWithContext": {
                                            "name": "runWithContext",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "<T extends () => any>(fn: T) => ReturnType<T> | Promise<Awaited<ReturnType<T>>>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4288,
                                                  4384
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "<T extends () => any>(fn: T): ReturnType<T> | Promise<Awaited<ReturnType<T>>>",
                                              "schema": {}
                                            }
                                          },
                                          "_cookies": {
                                            "name": "_cookies",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": false,
                                            "type": "Record<string, unknown> | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4438,
                                                  4473
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "enum",
                                              "type": "Record<string, unknown> | undefined",
                                              "schema": {
                                                "0": "undefined",
                                                "1": "Record<string, unknown>"
                                              }
                                            }
                                          },
                                          "_id": {
                                            "name": "_id",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": false,
                                            "type": "number | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4499,
                                                  4512
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "enum",
                                              "type": "number | undefined",
                                              "schema": {
                                                "0": "undefined",
                                                "1": "number"
                                              }
                                            }
                                          },
                                          "_scope": {
                                            "name": "_scope",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": true,
                                            "type": "EffectScope",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4538,
                                                  4558
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "object",
                                              "type": "EffectScope",
                                              "schema": {
                                                "detached": {
                                                  "name": "detached",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "boolean",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/reactivity/dist/reactivity.d.ts",
                                                      "range": [
                                                        585,
                                                        603
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "boolean"
                                                },
                                                "active": {
                                                  "name": "active",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "boolean",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/reactivity/dist/reactivity.d.ts",
                                                      "range": [
                                                        645,
                                                        667
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "boolean"
                                                },
                                                "run": {
                                                  "name": "run",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "<T>(fn: () => T) => T | undefined",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/reactivity/dist/reactivity.d.ts",
                                                      "range": [
                                                        672,
                                                        707
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "event",
                                                    "type": "<T>(fn: () => T): T | undefined",
                                                    "schema": {}
                                                  }
                                                },
                                                "stop": {
                                                  "name": "stop",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "(fromParent?: boolean | undefined) => void",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/reactivity/dist/reactivity.d.ts",
                                                      "range": [
                                                        712,
                                                        745
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "event",
                                                    "type": "(fromParent?: boolean | undefined): void",
                                                    "schema": {}
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "_asyncDataPromises": {
                                            "name": "_asyncDataPromises",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": true,
                                            "type": "Record<string, Promise<any> | undefined>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4584,
                                                  4645
                                                ]
                                              }
                                            ],
                                            "schema": "Record<string, Promise<any> | undefined>"
                                          },
                                          "_asyncData": {
                                            "name": "_asyncData",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": true,
                                            "type": "Record<string, { data: Ref<unknown>; pending: Ref<boolean>; error: Ref<Error | null>; status: Ref<AsyncDataRequestStatus>; _default: () => unknown; } | undefined>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  4671,
                                                  5031
                                                ]
                                              }
                                            ],
                                            "schema": "Record<string, { data: Ref<unknown>; pending: Ref<boolean>; error: Ref<Error | null>; status: Ref<AsyncDataRequestStatus>; _default: () => unknown; } | undefined>"
                                          },
                                          "_loadingIndicator": {
                                            "name": "_loadingIndicator",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": false,
                                            "type": "LoadingIndicator | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5057,
                                                  5094
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "enum",
                                              "type": "LoadingIndicator | undefined",
                                              "schema": {
                                                "0": "undefined",
                                                "1": {
                                                  "kind": "object",
                                                  "type": "LoadingIndicator",
                                                  "schema": {
                                                    "_cleanup": {
                                                      "name": "_cleanup",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "() => void",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                          "range": [
                                                            617,
                                                            638
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "event",
                                                        "type": "(): void"
                                                      }
                                                    },
                                                    "progress": {
                                                      "name": "progress",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "Ref<number>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                          "range": [
                                                            643,
                                                            665
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Ref<number>"
                                                    },
                                                    "isLoading": {
                                                      "name": "isLoading",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "Ref<boolean>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                          "range": [
                                                            670,
                                                            694
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Ref<boolean>"
                                                    },
                                                    "error": {
                                                      "name": "error",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "Ref<boolean>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                          "range": [
                                                            699,
                                                            719
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Ref<boolean>"
                                                    },
                                                    "start": {
                                                      "name": "start",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "() => void",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                          "range": [
                                                            724,
                                                            742
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "event",
                                                        "type": "(): void"
                                                      }
                                                    },
                                                    "set": {
                                                      "name": "set",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "(value: number) => void",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                          "range": [
                                                            747,
                                                            776
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "event",
                                                        "type": "(value: number): void",
                                                        "schema": {}
                                                      }
                                                    },
                                                    "finish": {
                                                      "name": "finish",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "(opts?: { force?: boolean | undefined; error?: boolean | undefined; } | undefined) => void",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                          "range": [
                                                            781,
                                                            864
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "event",
                                                        "type": "(opts?: { force?: boolean | undefined; error?: boolean | undefined; } | undefined): void",
                                                        "schema": {}
                                                      }
                                                    },
                                                    "clear": {
                                                      "name": "clear",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "() => void",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                          "range": [
                                                            869,
                                                            887
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "event",
                                                        "type": "(): void"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "_loadingIndicatorDeps": {
                                            "name": "_loadingIndicatorDeps",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": false,
                                            "type": "number | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5120,
                                                  5151
                                                ]
                                              }
                                            ],
                                            "schema": "number | undefined"
                                          },
                                          "_middleware": {
                                            "name": "_middleware",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": true,
                                            "type": "{ global: RouteMiddleware[]; named: Record<string, RouteMiddleware>; }",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5177,
                                                  5281
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "object",
                                              "type": "{ global: RouteMiddleware[]; named: Record<string, RouteMiddleware>; }",
                                              "schema": {
                                                "global": {
                                                  "name": "global",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "RouteMiddleware[]",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                      "range": [
                                                        5200,
                                                        5226
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "array",
                                                    "type": "RouteMiddleware[]",
                                                    "schema": {
                                                      "0": {
                                                        "kind": "event",
                                                        "type": "(to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedGeneric): _Awaitable<NavigationGuardReturn>",
                                                        "schema": []
                                                      }
                                                    }
                                                  }
                                                },
                                                "named": {
                                                  "name": "named",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "Record<string, RouteMiddleware>",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                      "range": [
                                                        5235,
                                                        5274
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "Record<string, RouteMiddleware>"
                                                }
                                              }
                                            }
                                          },
                                          "_once": {
                                            "name": "_once",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": true,
                                            "type": "{ [key: string]: Promise<any>; }",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5307,
                                                  5359
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "object",
                                              "type": "{ [key: string]: Promise<any>; }",
                                              "schema": {}
                                            }
                                          },
                                          "_observer": {
                                            "name": "_observer",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": false,
                                            "type": "{ observe: (element: Element, callback: () => void) => () => void; } | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5385,
                                                  5478
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "enum",
                                              "type": "{ observe: (element: Element, callback: () => void) => () => void; } | undefined",
                                              "schema": {
                                                "0": "undefined",
                                                "1": {
                                                  "kind": "object",
                                                  "type": "{ observe: (element: Element, callback: () => void) => () => void; }",
                                                  "schema": {
                                                    "observe": {
                                                      "name": "observe",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "(element: Element, callback: () => void) => () => void",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            5407,
                                                            5471
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "event",
                                                        "type": "(element: Element, callback: () => void): () => void",
                                                        "schema": {}
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "_payloadCache": {
                                            "name": "_payloadCache",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": false,
                                            "type": "Record<string, Record<string, any> | Promise<Record<string, any>> | null> | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5504,
                                                  5594
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "enum",
                                              "type": "Record<string, Record<string, any> | Promise<Record<string, any>> | null> | undefined",
                                              "schema": {
                                                "0": "undefined",
                                                "1": "Record<string, Record<string, any> | Promise<Record<string, any>> | null>"
                                              }
                                            }
                                          },
                                          "_appConfig": {
                                            "name": "_appConfig",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": true,
                                            "type": "AppConfig",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5620,
                                                  5642
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "object",
                                              "type": "AppConfig",
                                              "schema": {}
                                            }
                                          },
                                          "_route": {
                                            "name": "_route",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": true,
                                            "type": "RouteLocationNormalizedLoadedGeneric",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5668,
                                                  5706
                                                ]
                                              }
                                            ],
                                            "schema": "RouteLocationNormalizedLoadedGeneric"
                                          },
                                          "_islandPromises": {
                                            "name": "_islandPromises",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": false,
                                            "type": "Record<string, Promise<any>> | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5732,
                                                  5779
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "enum",
                                              "type": "Record<string, Promise<any>> | undefined",
                                              "schema": {
                                                "0": "undefined",
                                                "1": "Record<string, Promise<any>>"
                                              }
                                            }
                                          },
                                          "_payloadRevivers": {
                                            "name": "_payloadRevivers",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": true,
                                            "type": "Record<string, (data: any) => any>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5805,
                                                  5858
                                                ]
                                              }
                                            ],
                                            "schema": "Record<string, (data: any) => any>"
                                          },
                                          "_routeAnnouncer": {
                                            "name": "_routeAnnouncer",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": false,
                                            "type": "RouteAnnouncer | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5884,
                                                  5917
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "enum",
                                              "type": "RouteAnnouncer | undefined",
                                              "schema": {
                                                "0": "undefined",
                                                "1": {
                                                  "kind": "object",
                                                  "type": "RouteAnnouncer",
                                                  "schema": {
                                                    "message": {
                                                      "name": "message",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "Ref<string>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                          "range": [
                                                            224,
                                                            245
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Ref<string>"
                                                    },
                                                    "politeness": {
                                                      "name": "politeness",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "Ref<Politeness>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                          "range": [
                                                            250,
                                                            278
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Ref<Politeness>"
                                                    },
                                                    "set": {
                                                      "name": "set",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "(message: string, politeness: Politeness) => void",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                          "range": [
                                                            283,
                                                            338
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "event",
                                                        "type": "(message: string, politeness: Politeness): void",
                                                        "schema": {}
                                                      }
                                                    },
                                                    "polite": {
                                                      "name": "polite",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "(message: string) => void",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                          "range": [
                                                            343,
                                                            377
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "event",
                                                        "type": "(message: string): void",
                                                        "schema": {}
                                                      }
                                                    },
                                                    "assertive": {
                                                      "name": "assertive",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "(message: string) => void",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                          "range": [
                                                            382,
                                                            419
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "event",
                                                        "type": "(message: string): void",
                                                        "schema": {}
                                                      }
                                                    },
                                                    "_cleanup": {
                                                      "name": "_cleanup",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "() => void",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                          "range": [
                                                            424,
                                                            445
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "event",
                                                        "type": "(): void"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "_routeAnnouncerDeps": {
                                            "name": "_routeAnnouncerDeps",
                                            "global": false,
                                            "description": "",
                                            "tags": [
                                              {
                                                "name": "internal"
                                              }
                                            ],
                                            "required": false,
                                            "type": "number | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5943,
                                                  5972
                                                ]
                                              }
                                            ],
                                            "schema": "number | undefined"
                                          },
                                          "$config": {
                                            "name": "$config",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "RuntimeConfig",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  5977,
                                                  6000
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "object",
                                              "type": "RuntimeConfig",
                                              "schema": {
                                                "app": {
                                                  "name": "app",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "NitroRuntimeConfigApp",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/schema/dist/index.d.ts",
                                                      "range": [
                                                        85401,
                                                        85428
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "object",
                                                    "type": "NitroRuntimeConfigApp",
                                                    "schema": {
                                                      "baseURL": {
                                                        "name": "baseURL",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "string",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/nitropack/dist/shared/nitro.18796496.d.ts",
                                                            "range": [
                                                              23038,
                                                              23054
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "nitro": {
                                                  "name": "nitro",
                                                  "global": false,
                                                  "description": "Only available on the server.",
                                                  "tags": [],
                                                  "required": false,
                                                  "type": "{ envPrefix?: string | undefined; envExpansion?: boolean | undefined; routeRules?: { [path: string]: NitroRouteConfig; } | undefined; } | undefined",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/schema/dist/index.d.ts",
                                                      "range": [
                                                        85474,
                                                        85510
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "enum",
                                                    "type": "{ envPrefix?: string | undefined; envExpansion?: boolean | undefined; routeRules?: { [path: string]: NitroRouteConfig; } | undefined; } | undefined",
                                                    "schema": {
                                                      "0": "undefined",
                                                      "1": {
                                                        "kind": "object",
                                                        "type": "{ envPrefix?: string | undefined; envExpansion?: boolean | undefined; routeRules?: { [path: string]: NitroRouteConfig; } | undefined; }",
                                                        "schema": {
                                                          "envPrefix": {
                                                            "name": "envPrefix",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "string | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nitropack/dist/shared/nitro.18796496.d.ts",
                                                                "range": [
                                                                  23165,
                                                                  23184
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "string | undefined"
                                                          },
                                                          "envExpansion": {
                                                            "name": "envExpansion",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "boolean | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nitropack/dist/shared/nitro.18796496.d.ts",
                                                                "range": [
                                                                  23193,
                                                                  23216
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "boolean | undefined"
                                                          },
                                                          "routeRules": {
                                                            "name": "routeRules",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "{ [path: string]: NitroRouteConfig; } | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nitropack/dist/shared/nitro.18796496.d.ts",
                                                                "range": [
                                                                  23225,
                                                                  23296
                                                                ]
                                                              }
                                                            ],
                                                            "schema": {
                                                              "kind": "enum",
                                                              "type": "{ [path: string]: NitroRouteConfig; } | undefined",
                                                              "schema": {
                                                                "0": "undefined",
                                                                "1": {
                                                                  "kind": "object",
                                                                  "type": "{ [path: string]: NitroRouteConfig; }",
                                                                  "schema": {}
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "public": {
                                                  "name": "public",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "PublicRuntimeConfig",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/schema/dist/index.d.ts",
                                                      "range": [
                                                        85515,
                                                        85543
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "object",
                                                    "type": "PublicRuntimeConfig",
                                                    "schema": {
                                                      "content": {
                                                        "name": "content",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "ModulePublicRuntimeConfig",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                            "range": [
                                                              29790,
                                                              29825
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "object",
                                                          "type": "ModulePublicRuntimeConfig",
                                                          "schema": {
                                                            "experimental": {
                                                              "name": "experimental",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "{ stripQueryParameters: boolean; clientDB: boolean; advanceQuery: boolean; }",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    28793,
                                                                    28912
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": {
                                                                "kind": "object",
                                                                "type": "{ stripQueryParameters: boolean; clientDB: boolean; advanceQuery: boolean; }",
                                                                "schema": {
                                                                  "stripQueryParameters": {
                                                                    "name": "stripQueryParameters",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "boolean",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          28817,
                                                                          28847
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean"
                                                                  },
                                                                  "clientDB": {
                                                                    "name": "clientDB",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "boolean",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          28856,
                                                                          28874
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean"
                                                                  },
                                                                  "advanceQuery": {
                                                                    "name": "advanceQuery",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "boolean",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          28883,
                                                                          28905
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean"
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "api": {
                                                              "name": "api",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "{ baseURL: string; }",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    28917,
                                                                    28955
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": {
                                                                "kind": "object",
                                                                "type": "{ baseURL: string; }",
                                                                "schema": {
                                                                  "baseURL": {
                                                                    "name": "baseURL",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "string",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          28932,
                                                                          28948
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string"
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "host": {
                                                              "name": "host",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "string | undefined",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    28960,
                                                                    28985
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "string | undefined"
                                                            },
                                                            "trailingSlash": {
                                                              "name": "trailingSlash",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "boolean",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    28990,
                                                                    29013
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "boolean"
                                                            },
                                                            "integrity": {
                                                              "name": "integrity",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "number | undefined",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29018,
                                                                    29048
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "number | undefined"
                                                            },
                                                            "respectPathCase": {
                                                              "name": "respectPathCase",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "boolean",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29053,
                                                                    29078
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "boolean"
                                                            },
                                                            "defaultLocale": {
                                                              "name": "defaultLocale",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "string | undefined",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29083,
                                                                    29129
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "string | undefined"
                                                            },
                                                            "locales": {
                                                              "name": "locales",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "string[]",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29134,
                                                                    29168
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "string[]"
                                                            },
                                                            "tags": {
                                                              "name": "tags",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "Record<string, string>",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29173,
                                                                    29202
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "Record<string, string>"
                                                            },
                                                            "base": {
                                                              "name": "base",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "string",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29207,
                                                                    29220
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "string"
                                                            },
                                                            "wsUrl": {
                                                              "name": "wsUrl",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": false,
                                                              "type": "string | undefined",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29225,
                                                                    29240
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "string | undefined"
                                                            },
                                                            "highlight": {
                                                              "name": "highlight",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "false | { theme?: BundledTheme | { [theme: string]: BundledTheme; default: BundledTheme; } | undefined; preload?: (BundledLanguage | LanguageRegistration)[] | undefined; langs?: (BundledLanguage | LanguageRegistration)[] | undefined; themes?: (BundledTheme | ThemeRegistrationAny)[] | undefined; }",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29245,
                                                                    29283
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": {
                                                                "kind": "enum",
                                                                "type": "false | { theme?: BundledTheme | { [theme: string]: BundledTheme; default: BundledTheme; } | undefined; preload?: (BundledLanguage | LanguageRegistration)[] | undefined; langs?: (BundledLanguage | LanguageRegistration)[] | undefined; themes?: (BundledTheme | ThemeRegistrationAny)[] | undefined; }",
                                                                "schema": {
                                                                  "0": "false",
                                                                  "1": {
                                                                    "kind": "object",
                                                                    "type": "{ theme?: BundledTheme | { [theme: string]: BundledTheme; default: BundledTheme; } | undefined; preload?: (BundledLanguage | LanguageRegistration)[] | undefined; langs?: (BundledLanguage | LanguageRegistration)[] | undefined; themes?: (BundledTheme | ThemeRegistrationAny)[] | undefined; }",
                                                                    "schema": {
                                                                      "theme": {
                                                                        "name": "theme",
                                                                        "global": false,
                                                                        "description": "Default theme that will be used for highlighting code blocks.",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "BundledTheme | { [theme: string]: BundledTheme; default: BundledTheme; } | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              15234,
                                                                              15347
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": {
                                                                          "kind": "enum",
                                                                          "type": "BundledTheme | { [theme: string]: BundledTheme; default: BundledTheme; } | undefined",
                                                                          "schema": {
                                                                            "0": "undefined",
                                                                            "1": "\"andromeeda\"",
                                                                            "2": "\"aurora-x\"",
                                                                            "3": "\"ayu-dark\"",
                                                                            "4": "\"catppuccin-frappe\"",
                                                                            "5": "\"catppuccin-latte\"",
                                                                            "6": "\"catppuccin-macchiato\"",
                                                                            "7": "\"catppuccin-mocha\"",
                                                                            "8": "\"dark-plus\"",
                                                                            "9": "\"dracula\"",
                                                                            "10": "\"dracula-soft\"",
                                                                            "11": "\"github-dark\"",
                                                                            "12": "\"github-dark-default\"",
                                                                            "13": "\"github-dark-dimmed\"",
                                                                            "14": "\"github-light\"",
                                                                            "15": "\"github-light-default\"",
                                                                            "16": "\"houston\"",
                                                                            "17": "\"laserwave\"",
                                                                            "18": "\"light-plus\"",
                                                                            "19": "\"material-theme\"",
                                                                            "20": "\"material-theme-darker\"",
                                                                            "21": "\"material-theme-lighter\"",
                                                                            "22": "\"material-theme-ocean\"",
                                                                            "23": "\"material-theme-palenight\"",
                                                                            "24": "\"min-dark\"",
                                                                            "25": "\"min-light\"",
                                                                            "26": "\"monokai\"",
                                                                            "27": "\"night-owl\"",
                                                                            "28": "\"nord\"",
                                                                            "29": "\"one-dark-pro\"",
                                                                            "30": "\"one-light\"",
                                                                            "31": "\"poimandres\"",
                                                                            "32": "\"red\"",
                                                                            "33": "\"rose-pine\"",
                                                                            "34": "\"rose-pine-dawn\"",
                                                                            "35": "\"rose-pine-moon\"",
                                                                            "36": "\"slack-dark\"",
                                                                            "37": "\"slack-ochin\"",
                                                                            "38": "\"snazzy-light\"",
                                                                            "39": "\"solarized-dark\"",
                                                                            "40": "\"solarized-light\"",
                                                                            "41": "\"synthwave-84\"",
                                                                            "42": "\"tokyo-night\"",
                                                                            "43": "\"vesper\"",
                                                                            "44": "\"vitesse-black\"",
                                                                            "45": "\"vitesse-dark\"",
                                                                            "46": "\"vitesse-light\"",
                                                                            "47": {
                                                                              "kind": "object",
                                                                              "type": "{ [theme: string]: BundledTheme; default: BundledTheme; }",
                                                                              "schema": {
                                                                                "default": {
                                                                                  "name": "default",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "BundledTheme",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        15271,
                                                                                        15293
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "BundledTheme",
                                                                                    "schema": {
                                                                                      "0": "\"andromeeda\"",
                                                                                      "1": "\"aurora-x\"",
                                                                                      "2": "\"ayu-dark\"",
                                                                                      "3": "\"catppuccin-frappe\"",
                                                                                      "4": "\"catppuccin-latte\"",
                                                                                      "5": "\"catppuccin-macchiato\"",
                                                                                      "6": "\"catppuccin-mocha\"",
                                                                                      "7": "\"dark-plus\"",
                                                                                      "8": "\"dracula\"",
                                                                                      "9": "\"dracula-soft\"",
                                                                                      "10": "\"github-dark\"",
                                                                                      "11": "\"github-dark-default\"",
                                                                                      "12": "\"github-dark-dimmed\"",
                                                                                      "13": "\"github-light\"",
                                                                                      "14": "\"github-light-default\"",
                                                                                      "15": "\"houston\"",
                                                                                      "16": "\"laserwave\"",
                                                                                      "17": "\"light-plus\"",
                                                                                      "18": "\"material-theme\"",
                                                                                      "19": "\"material-theme-darker\"",
                                                                                      "20": "\"material-theme-lighter\"",
                                                                                      "21": "\"material-theme-ocean\"",
                                                                                      "22": "\"material-theme-palenight\"",
                                                                                      "23": "\"min-dark\"",
                                                                                      "24": "\"min-light\"",
                                                                                      "25": "\"monokai\"",
                                                                                      "26": "\"night-owl\"",
                                                                                      "27": "\"nord\"",
                                                                                      "28": "\"one-dark-pro\"",
                                                                                      "29": "\"one-light\"",
                                                                                      "30": "\"poimandres\"",
                                                                                      "31": "\"red\"",
                                                                                      "32": "\"rose-pine\"",
                                                                                      "33": "\"rose-pine-dawn\"",
                                                                                      "34": "\"rose-pine-moon\"",
                                                                                      "35": "\"slack-dark\"",
                                                                                      "36": "\"slack-ochin\"",
                                                                                      "37": "\"snazzy-light\"",
                                                                                      "38": "\"solarized-dark\"",
                                                                                      "39": "\"solarized-light\"",
                                                                                      "40": "\"synthwave-84\"",
                                                                                      "41": "\"tokyo-night\"",
                                                                                      "42": "\"vesper\"",
                                                                                      "43": "\"vitesse-black\"",
                                                                                      "44": "\"vitesse-dark\"",
                                                                                      "45": "\"vitesse-light\""
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "preload": {
                                                                        "name": "preload",
                                                                        "global": false,
                                                                        "description": "Preloaded languages that will be available for highlighting code blocks.",
                                                                        "tags": [
                                                                          {
                                                                            "name": "deprecated",
                                                                            "text": "Use `langs` instead"
                                                                          }
                                                                        ],
                                                                        "required": false,
                                                                        "type": "(BundledLanguage | LanguageRegistration)[] | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              15518,
                                                                              15571
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": {
                                                                          "kind": "enum",
                                                                          "type": "(BundledLanguage | LanguageRegistration)[] | undefined",
                                                                          "schema": {
                                                                            "0": "undefined",
                                                                            "1": {
                                                                              "kind": "array",
                                                                              "type": "(BundledLanguage | LanguageRegistration)[]",
                                                                              "schema": [
                                                                                {
                                                                                  "kind": "enum",
                                                                                  "type": "BundledLanguage | LanguageRegistration",
                                                                                  "schema": [
                                                                                    "\"vue\"",
                                                                                    "\"markdown\"",
                                                                                    "\"yaml\"",
                                                                                    "\"json\"",
                                                                                    "\"csv\"",
                                                                                    "\"md\"",
                                                                                    "\"yml\"",
                                                                                    "\"json5\"",
                                                                                    "\"css\"",
                                                                                    "\"go\"",
                                                                                    "\"abap\"",
                                                                                    "\"actionscript-3\"",
                                                                                    "\"ada\"",
                                                                                    "\"adoc\"",
                                                                                    "\"angular-html\"",
                                                                                    "\"angular-ts\"",
                                                                                    "\"apache\"",
                                                                                    "\"apex\"",
                                                                                    "\"apl\"",
                                                                                    "\"applescript\"",
                                                                                    "\"ara\"",
                                                                                    "\"asciidoc\"",
                                                                                    "\"asm\"",
                                                                                    "\"astro\"",
                                                                                    "\"awk\"",
                                                                                    "\"ballerina\"",
                                                                                    "\"bash\"",
                                                                                    "\"bat\"",
                                                                                    "\"batch\"",
                                                                                    "\"be\"",
                                                                                    "\"beancount\"",
                                                                                    "\"berry\"",
                                                                                    "\"bibtex\"",
                                                                                    "\"bicep\"",
                                                                                    "\"blade\"",
                                                                                    "\"c\"",
                                                                                    "\"c#\"",
                                                                                    "\"c++\"",
                                                                                    "\"cadence\"",
                                                                                    "\"cdc\"",
                                                                                    "\"clarity\"",
                                                                                    "\"clj\"",
                                                                                    "\"clojure\"",
                                                                                    "\"closure-templates\"",
                                                                                    "\"cmake\"",
                                                                                    "\"cmd\"",
                                                                                    "\"cobol\"",
                                                                                    "\"codeowners\"",
                                                                                    "\"codeql\"",
                                                                                    "\"coffee\"",
                                                                                    "\"coffeescript\"",
                                                                                    "\"common-lisp\"",
                                                                                    "\"console\"",
                                                                                    "\"cpp\"",
                                                                                    "\"cql\"",
                                                                                    "\"crystal\"",
                                                                                    "\"cs\"",
                                                                                    "\"csharp\"",
                                                                                    "\"cue\"",
                                                                                    "\"cypher\"",
                                                                                    "\"d\"",
                                                                                    "\"dart\"",
                                                                                    "\"dax\"",
                                                                                    "\"desktop\"",
                                                                                    "\"diff\"",
                                                                                    "\"docker\"",
                                                                                    "\"dockerfile\"",
                                                                                    "\"dream-maker\"",
                                                                                    "\"edge\"",
                                                                                    "\"elisp\"",
                                                                                    "\"elixir\"",
                                                                                    "\"elm\"",
                                                                                    "\"emacs-lisp\"",
                                                                                    "\"erb\"",
                                                                                    "\"erl\"",
                                                                                    "\"erlang\"",
                                                                                    "\"f\"",
                                                                                    "\"f#\"",
                                                                                    "\"f03\"",
                                                                                    "\"f08\"",
                                                                                    "\"f18\"",
                                                                                    "\"f77\"",
                                                                                    "\"f90\"",
                                                                                    "\"f95\"",
                                                                                    "\"fennel\"",
                                                                                    "\"fish\"",
                                                                                    "\"fluent\"",
                                                                                    "\"for\"",
                                                                                    "\"fortran-fixed-form\"",
                                                                                    "\"fortran-free-form\"",
                                                                                    "\"fs\"",
                                                                                    "\"fsharp\"",
                                                                                    "\"fsl\"",
                                                                                    "\"ftl\"",
                                                                                    "\"gdresource\"",
                                                                                    "\"gdscript\"",
                                                                                    "\"gdshader\"",
                                                                                    "\"genie\"",
                                                                                    "\"gherkin\"",
                                                                                    "\"git-commit\"",
                                                                                    "\"git-rebase\"",
                                                                                    "\"gjs\"",
                                                                                    "\"gleam\"",
                                                                                    "\"glimmer-js\"",
                                                                                    "\"glimmer-ts\"",
                                                                                    "\"glsl\"",
                                                                                    "\"gnuplot\"",
                                                                                    "\"gql\"",
                                                                                    "\"graphql\"",
                                                                                    "\"groovy\"",
                                                                                    "\"gts\"",
                                                                                    "\"hack\"",
                                                                                    "\"haml\"",
                                                                                    "\"handlebars\"",
                                                                                    "\"haskell\"",
                                                                                    "\"haxe\"",
                                                                                    "\"hbs\"",
                                                                                    "\"hcl\"",
                                                                                    "\"hjson\"",
                                                                                    "\"hlsl\"",
                                                                                    "\"hs\"",
                                                                                    "\"html\"",
                                                                                    "\"html-derivative\"",
                                                                                    "\"http\"",
                                                                                    "\"hxml\"",
                                                                                    "\"hy\"",
                                                                                    "\"imba\"",
                                                                                    "\"ini\"",
                                                                                    "\"jade\"",
                                                                                    "\"java\"",
                                                                                    "\"javascript\"",
                                                                                    "\"jinja\"",
                                                                                    "\"jison\"",
                                                                                    "\"jl\"",
                                                                                    "\"js\"",
                                                                                    "\"jsonc\"",
                                                                                    "\"jsonl\"",
                                                                                    "\"jsonnet\"",
                                                                                    "\"jssm\"",
                                                                                    "\"jsx\"",
                                                                                    "\"julia\"",
                                                                                    "\"kotlin\"",
                                                                                    "\"kql\"",
                                                                                    "\"kt\"",
                                                                                    "\"kts\"",
                                                                                    "\"kusto\"",
                                                                                    "\"latex\"",
                                                                                    "\"lean\"",
                                                                                    "\"lean4\"",
                                                                                    "\"less\"",
                                                                                    "\"liquid\"",
                                                                                    "\"lisp\"",
                                                                                    "\"log\"",
                                                                                    "\"logo\"",
                                                                                    "\"lua\"",
                                                                                    "\"luau\"",
                                                                                    "\"make\"",
                                                                                    "\"makefile\"",
                                                                                    "\"marko\"",
                                                                                    "\"matlab\"",
                                                                                    "\"mdc\"",
                                                                                    "\"mdx\"",
                                                                                    "\"mediawiki\"",
                                                                                    "\"mermaid\"",
                                                                                    "\"mojo\"",
                                                                                    "\"move\"",
                                                                                    "\"nar\"",
                                                                                    "\"narrat\"",
                                                                                    "\"nextflow\"",
                                                                                    "\"nf\"",
                                                                                    "\"nginx\"",
                                                                                    "\"nim\"",
                                                                                    "\"nix\"",
                                                                                    "\"nu\"",
                                                                                    "\"nushell\"",
                                                                                    "\"objc\"",
                                                                                    "\"objective-c\"",
                                                                                    "\"objective-cpp\"",
                                                                                    "\"ocaml\"",
                                                                                    "\"pascal\"",
                                                                                    "\"perl\"",
                                                                                    "\"perl6\"",
                                                                                    "\"php\"",
                                                                                    "\"plsql\"",
                                                                                    "\"po\"",
                                                                                    "\"postcss\"",
                                                                                    "\"pot\"",
                                                                                    "\"potx\"",
                                                                                    "\"powerquery\"",
                                                                                    "\"powershell\"",
                                                                                    "\"prisma\"",
                                                                                    "\"prolog\"",
                                                                                    "\"properties\"",
                                                                                    "\"proto\"",
                                                                                    "\"ps\"",
                                                                                    "\"ps1\"",
                                                                                    "\"pug\"",
                                                                                    "\"puppet\"",
                                                                                    "\"purescript\"",
                                                                                    "\"py\"",
                                                                                    "\"python\"",
                                                                                    "\"ql\"",
                                                                                    "\"qml\"",
                                                                                    "\"qmldir\"",
                                                                                    "\"qss\"",
                                                                                    "\"r\"",
                                                                                    "\"racket\"",
                                                                                    "\"raku\"",
                                                                                    "\"razor\"",
                                                                                    "\"rb\"",
                                                                                    "\"reg\"",
                                                                                    "\"regex\"",
                                                                                    "\"regexp\"",
                                                                                    "\"rel\"",
                                                                                    "\"riscv\"",
                                                                                    "\"rs\"",
                                                                                    "\"rst\"",
                                                                                    "\"ruby\"",
                                                                                    "\"rust\"",
                                                                                    "\"sas\"",
                                                                                    "\"sass\"",
                                                                                    "\"scala\"",
                                                                                    "\"scheme\"",
                                                                                    "\"scss\"",
                                                                                    "\"sh\"",
                                                                                    "\"shader\"",
                                                                                    "\"shaderlab\"",
                                                                                    "\"shell\"",
                                                                                    "\"shellscript\"",
                                                                                    "\"shellsession\"",
                                                                                    "\"smalltalk\"",
                                                                                    "\"solidity\"",
                                                                                    "\"soy\"",
                                                                                    "\"sparql\"",
                                                                                    "\"spl\"",
                                                                                    "\"splunk\"",
                                                                                    "\"sql\"",
                                                                                    "\"ssh-config\"",
                                                                                    "\"stata\"",
                                                                                    "\"styl\"",
                                                                                    "\"stylus\"",
                                                                                    "\"svelte\"",
                                                                                    "\"swift\"",
                                                                                    "\"system-verilog\"",
                                                                                    "\"systemd\"",
                                                                                    "\"tasl\"",
                                                                                    "\"tcl\"",
                                                                                    "\"templ\"",
                                                                                    "\"terraform\"",
                                                                                    "\"tex\"",
                                                                                    "\"tf\"",
                                                                                    "\"tfvars\"",
                                                                                    "\"toml\"",
                                                                                    "\"ts\"",
                                                                                    "\"tsp\"",
                                                                                    "\"tsv\"",
                                                                                    "\"tsx\"",
                                                                                    "\"turtle\"",
                                                                                    "\"twig\"",
                                                                                    "\"typ\"",
                                                                                    "\"typescript\"",
                                                                                    "\"typespec\"",
                                                                                    "\"typst\"",
                                                                                    "\"v\"",
                                                                                    "\"vala\"",
                                                                                    "\"vb\"",
                                                                                    "\"verilog\"",
                                                                                    "\"vhdl\"",
                                                                                    "\"vim\"",
                                                                                    "\"viml\"",
                                                                                    "\"vimscript\"",
                                                                                    "\"vue-html\"",
                                                                                    "\"vy\"",
                                                                                    "\"vyper\"",
                                                                                    "\"wasm\"",
                                                                                    "\"wenyan\"",
                                                                                    "\"wgsl\"",
                                                                                    "\"wiki\"",
                                                                                    "\"wikitext\"",
                                                                                    "\"wl\"",
                                                                                    "\"wolfram\"",
                                                                                    "\"xml\"",
                                                                                    "\"xsl\"",
                                                                                    "\"zenscript\"",
                                                                                    "\"zig\"",
                                                                                    "\"zsh\"",
                                                                                    "\"文言\"",
                                                                                    {
                                                                                      "kind": "object",
                                                                                      "type": "LanguageRegistration",
                                                                                      "schema": {
                                                                                        "name": {
                                                                                          "name": "name",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": true,
                                                                                          "type": "string",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                12663,
                                                                                                12676
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string"
                                                                                        },
                                                                                        "scopeName": {
                                                                                          "name": "scopeName",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": true,
                                                                                          "type": "string",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                12681,
                                                                                                12699
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string"
                                                                                        },
                                                                                        "displayName": {
                                                                                          "name": "displayName",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                12704,
                                                                                                12725
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "aliases": {
                                                                                          "name": "aliases",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string[] | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                12730,
                                                                                                12749
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string[] | undefined"
                                                                                        },
                                                                                        "embeddedLangs": {
                                                                                          "name": "embeddedLangs",
                                                                                          "global": false,
                                                                                          "description": "A list of languages the current language embeds.\nIf manually specifying languages to load, make sure to load the embedded\nlanguages for each parent language.",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string[] | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                12949,
                                                                                                12974
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string[] | undefined"
                                                                                        },
                                                                                        "embeddedLangsLazy": {
                                                                                          "name": "embeddedLangsLazy",
                                                                                          "global": false,
                                                                                          "description": "A list of languages that embed the current language.\nUnlike `embeddedLangs`, the embedded languages will not be loaded automatically.",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string[] | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                13143,
                                                                                                13172
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string[] | undefined"
                                                                                        },
                                                                                        "balancedBracketSelectors": {
                                                                                          "name": "balancedBracketSelectors",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string[] | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                13177,
                                                                                                13213
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string[] | undefined"
                                                                                        },
                                                                                        "unbalancedBracketSelectors": {
                                                                                          "name": "unbalancedBracketSelectors",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string[] | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                13218,
                                                                                                13256
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string[] | undefined"
                                                                                        },
                                                                                        "foldingStopMarker": {
                                                                                          "name": "foldingStopMarker",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                13261,
                                                                                                13288
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "foldingStartMarker": {
                                                                                          "name": "foldingStartMarker",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                13293,
                                                                                                13321
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "injectTo": {
                                                                                          "name": "injectTo",
                                                                                          "global": false,
                                                                                          "description": "Inject this language to other scopes.\nSame as `injectTo` in VSCode's `contributes.grammars`.",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "see",
                                                                                              "text": "https://code.visualstudio.com/api/language-extensions/syntax-highlight-guide#injection-grammars"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "string[] | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                13564,
                                                                                                13584
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string[] | undefined"
                                                                                        },
                                                                                        "repository": {
                                                                                          "name": "repository",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": true,
                                                                                          "type": "IRawRepository",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                5523,
                                                                                                5550
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": {
                                                                                            "kind": "object",
                                                                                            "type": "IRawRepository",
                                                                                            "schema": {
                                                                                              "$self": {
                                                                                                "name": "$self",
                                                                                                "global": false,
                                                                                                "description": "",
                                                                                                "tags": [],
                                                                                                "required": true,
                                                                                                "type": "IRawRule",
                                                                                                "declarations": [
                                                                                                  {
                                                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                    "range": [
                                                                                                      6194,
                                                                                                      6210
                                                                                                    ]
                                                                                                  }
                                                                                                ],
                                                                                                "schema": {
                                                                                                  "kind": "object",
                                                                                                  "type": "IRawRule",
                                                                                                  "schema": {
                                                                                                    "id": {
                                                                                                      "name": "id",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "RuleId | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6332,
                                                                                                            6344
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": {
                                                                                                        "kind": "enum",
                                                                                                        "type": "RuleId | undefined",
                                                                                                        "schema": {
                                                                                                          "0": "undefined",
                                                                                                          "1": {
                                                                                                            "kind": "object",
                                                                                                            "type": "RuleId",
                                                                                                            "schema": {
                                                                                                              "___brand": {
                                                                                                                "name": "___brand",
                                                                                                                "global": false,
                                                                                                                "description": "",
                                                                                                                "tags": [],
                                                                                                                "required": true,
                                                                                                                "type": "unique symbol",
                                                                                                                "declarations": [
                                                                                                                  {
                                                                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                                    "range": [
                                                                                                                      1360,
                                                                                                                      1389
                                                                                                                    ]
                                                                                                                  }
                                                                                                                ],
                                                                                                                "schema": "unique symbol"
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    },
                                                                                                    "include": {
                                                                                                      "name": "include",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "string | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6349,
                                                                                                            6382
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "string | undefined"
                                                                                                    },
                                                                                                    "name": {
                                                                                                      "name": "name",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "string | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6387,
                                                                                                            6413
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "string | undefined"
                                                                                                    },
                                                                                                    "contentName": {
                                                                                                      "name": "contentName",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "string | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6418,
                                                                                                            6451
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "string | undefined"
                                                                                                    },
                                                                                                    "match": {
                                                                                                      "name": "match",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "string | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6456,
                                                                                                            6486
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "string | undefined"
                                                                                                    },
                                                                                                    "captures": {
                                                                                                      "name": "captures",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "IRawCaptures | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6491,
                                                                                                            6524
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": {
                                                                                                        "kind": "enum",
                                                                                                        "type": "IRawCaptures | undefined",
                                                                                                        "schema": {
                                                                                                          "0": "undefined",
                                                                                                          "1": {
                                                                                                            "kind": "object",
                                                                                                            "type": "IRawCaptures",
                                                                                                            "schema": {
                                                                                                              "$vscodeTextmateLocation": {
                                                                                                                "name": "$vscodeTextmateLocation",
                                                                                                                "global": false,
                                                                                                                "description": "",
                                                                                                                "tags": [],
                                                                                                                "required": false,
                                                                                                                "type": "ILocation | undefined",
                                                                                                                "declarations": [
                                                                                                                  {
                                                                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                                    "range": [
                                                                                                                      7130,
                                                                                                                      7175
                                                                                                                    ]
                                                                                                                  }
                                                                                                                ],
                                                                                                                "schema": {
                                                                                                                  "kind": "enum",
                                                                                                                  "type": "ILocation | undefined",
                                                                                                                  "schema": {
                                                                                                                    "0": "undefined",
                                                                                                                    "1": {
                                                                                                                      "kind": "object",
                                                                                                                      "type": "ILocation",
                                                                                                                      "schema": {
                                                                                                                        "filename": {
                                                                                                                          "name": "filename",
                                                                                                                          "global": false,
                                                                                                                          "description": "",
                                                                                                                          "tags": [],
                                                                                                                          "required": true,
                                                                                                                          "type": "string",
                                                                                                                          "declarations": [
                                                                                                                            {
                                                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                                              "range": [
                                                                                                                                7020,
                                                                                                                                7046
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          ],
                                                                                                                          "schema": "string"
                                                                                                                        },
                                                                                                                        "line": {
                                                                                                                          "name": "line",
                                                                                                                          "global": false,
                                                                                                                          "description": "",
                                                                                                                          "tags": [],
                                                                                                                          "required": true,
                                                                                                                          "type": "number",
                                                                                                                          "declarations": [
                                                                                                                            {
                                                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                                              "range": [
                                                                                                                                7051,
                                                                                                                                7073
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          ],
                                                                                                                          "schema": "number"
                                                                                                                        },
                                                                                                                        "char": {
                                                                                                                          "name": "char",
                                                                                                                          "global": false,
                                                                                                                          "description": "",
                                                                                                                          "tags": [],
                                                                                                                          "required": true,
                                                                                                                          "type": "number",
                                                                                                                          "declarations": [
                                                                                                                            {
                                                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                                              "range": [
                                                                                                                                7078,
                                                                                                                                7100
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          ],
                                                                                                                          "schema": "number"
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    },
                                                                                                    "begin": {
                                                                                                      "name": "begin",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "string | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6529,
                                                                                                            6559
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "string | undefined"
                                                                                                    },
                                                                                                    "beginCaptures": {
                                                                                                      "name": "beginCaptures",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "IRawCaptures | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6564,
                                                                                                            6602
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "IRawCaptures | undefined"
                                                                                                    },
                                                                                                    "end": {
                                                                                                      "name": "end",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "string | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6607,
                                                                                                            6635
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "string | undefined"
                                                                                                    },
                                                                                                    "endCaptures": {
                                                                                                      "name": "endCaptures",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "IRawCaptures | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6640,
                                                                                                            6676
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "IRawCaptures | undefined"
                                                                                                    },
                                                                                                    "while": {
                                                                                                      "name": "while",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "string | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6681,
                                                                                                            6711
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "string | undefined"
                                                                                                    },
                                                                                                    "whileCaptures": {
                                                                                                      "name": "whileCaptures",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "IRawCaptures | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6716,
                                                                                                            6754
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "IRawCaptures | undefined"
                                                                                                    },
                                                                                                    "patterns": {
                                                                                                      "name": "patterns",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "IRawRule[] | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6759,
                                                                                                            6790
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": {
                                                                                                        "kind": "enum",
                                                                                                        "type": "IRawRule[] | undefined",
                                                                                                        "schema": {
                                                                                                          "0": "undefined",
                                                                                                          "1": {
                                                                                                            "kind": "array",
                                                                                                            "type": "IRawRule[]",
                                                                                                            "schema": [
                                                                                                              "IRawRule"
                                                                                                            ]
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    },
                                                                                                    "repository": {
                                                                                                      "name": "repository",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "IRawRepository | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6795,
                                                                                                            6832
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": {
                                                                                                        "kind": "enum",
                                                                                                        "type": "IRawRepository | undefined",
                                                                                                        "schema": {
                                                                                                          "0": "undefined",
                                                                                                          "1": "IRawRepository"
                                                                                                        }
                                                                                                      }
                                                                                                    },
                                                                                                    "applyEndPatternLast": {
                                                                                                      "name": "applyEndPatternLast",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "boolean | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            6837,
                                                                                                            6876
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "boolean | undefined"
                                                                                                    },
                                                                                                    "$vscodeTextmateLocation": {
                                                                                                      "name": "$vscodeTextmateLocation",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": false,
                                                                                                      "type": "ILocation | undefined",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                          "range": [
                                                                                                            7130,
                                                                                                            7175
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "ILocation | undefined"
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "$base": {
                                                                                                "name": "$base",
                                                                                                "global": false,
                                                                                                "description": "",
                                                                                                "tags": [],
                                                                                                "required": true,
                                                                                                "type": "IRawRule",
                                                                                                "declarations": [
                                                                                                  {
                                                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                    "range": [
                                                                                                      6215,
                                                                                                      6231
                                                                                                    ]
                                                                                                  }
                                                                                                ],
                                                                                                "schema": "IRawRule"
                                                                                              },
                                                                                              "$vscodeTextmateLocation": {
                                                                                                "name": "$vscodeTextmateLocation",
                                                                                                "global": false,
                                                                                                "description": "",
                                                                                                "tags": [],
                                                                                                "required": false,
                                                                                                "type": "ILocation | undefined",
                                                                                                "declarations": [
                                                                                                  {
                                                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                    "range": [
                                                                                                      7130,
                                                                                                      7175
                                                                                                    ]
                                                                                                  }
                                                                                                ],
                                                                                                "schema": "ILocation | undefined"
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "patterns": {
                                                                                          "name": "patterns",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": true,
                                                                                          "type": "IRawRule[]",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                5590,
                                                                                                5620
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "IRawRule[]"
                                                                                        },
                                                                                        "injections": {
                                                                                          "name": "injections",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "{ [expression: string]: IRawRule; } | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                5625,
                                                                                                5695
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": {
                                                                                            "kind": "enum",
                                                                                            "type": "{ [expression: string]: IRawRule; } | undefined",
                                                                                            "schema": {
                                                                                              "0": "undefined",
                                                                                              "1": {
                                                                                                "kind": "object",
                                                                                                "type": "{ [expression: string]: IRawRule; }",
                                                                                                "schema": {}
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "injectionSelector": {
                                                                                          "name": "injectionSelector",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                5700,
                                                                                                5736
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "fileTypes": {
                                                                                          "name": "fileTypes",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string[] | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                5741,
                                                                                                5771
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string[] | undefined"
                                                                                        },
                                                                                        "firstLineMatch": {
                                                                                          "name": "firstLineMatch",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                5804,
                                                                                                5837
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "$vscodeTextmateLocation": {
                                                                                          "name": "$vscodeTextmateLocation",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "ILocation | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                7130,
                                                                                                7175
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "ILocation | undefined"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "langs": {
                                                                        "name": "langs",
                                                                        "global": false,
                                                                        "description": "Languages to be bundled loaded by Shiki\n\nAll languages used has to be included in this list at build time, to create granular bundles.\n\nUnlike the `preload` option, when this option is provided, it will override the default languages.",
                                                                        "tags": [
                                                                          {
                                                                            "name": "default",
                                                                            "text": "['js','jsx','json','ts','tsx','vue','css','html','vue','bash','md','mdc','yaml']"
                                                                          }
                                                                        ],
                                                                        "required": false,
                                                                        "type": "(BundledLanguage | LanguageRegistration)[] | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              16004,
                                                                              16055
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": "(BundledLanguage | LanguageRegistration)[] | undefined"
                                                                      },
                                                                      "themes": {
                                                                        "name": "themes",
                                                                        "global": false,
                                                                        "description": "Additional themes to be bundled loaded by Shiki",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "(BundledTheme | ThemeRegistrationAny)[] | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              16147,
                                                                              16196
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": {
                                                                          "kind": "enum",
                                                                          "type": "(BundledTheme | ThemeRegistrationAny)[] | undefined",
                                                                          "schema": {
                                                                            "0": "undefined",
                                                                            "1": {
                                                                              "kind": "array",
                                                                              "type": "(BundledTheme | ThemeRegistrationAny)[]",
                                                                              "schema": [
                                                                                {
                                                                                  "kind": "enum",
                                                                                  "type": "BundledTheme | ThemeRegistrationAny",
                                                                                  "schema": [
                                                                                    "\"andromeeda\"",
                                                                                    "\"aurora-x\"",
                                                                                    "\"ayu-dark\"",
                                                                                    "\"catppuccin-frappe\"",
                                                                                    "\"catppuccin-latte\"",
                                                                                    "\"catppuccin-macchiato\"",
                                                                                    "\"catppuccin-mocha\"",
                                                                                    "\"dark-plus\"",
                                                                                    "\"dracula\"",
                                                                                    "\"dracula-soft\"",
                                                                                    "\"github-dark\"",
                                                                                    "\"github-dark-default\"",
                                                                                    "\"github-dark-dimmed\"",
                                                                                    "\"github-light\"",
                                                                                    "\"github-light-default\"",
                                                                                    "\"houston\"",
                                                                                    "\"laserwave\"",
                                                                                    "\"light-plus\"",
                                                                                    "\"material-theme\"",
                                                                                    "\"material-theme-darker\"",
                                                                                    "\"material-theme-lighter\"",
                                                                                    "\"material-theme-ocean\"",
                                                                                    "\"material-theme-palenight\"",
                                                                                    "\"min-dark\"",
                                                                                    "\"min-light\"",
                                                                                    "\"monokai\"",
                                                                                    "\"night-owl\"",
                                                                                    "\"nord\"",
                                                                                    "\"one-dark-pro\"",
                                                                                    "\"one-light\"",
                                                                                    "\"poimandres\"",
                                                                                    "\"red\"",
                                                                                    "\"rose-pine\"",
                                                                                    "\"rose-pine-dawn\"",
                                                                                    "\"rose-pine-moon\"",
                                                                                    "\"slack-dark\"",
                                                                                    "\"slack-ochin\"",
                                                                                    "\"snazzy-light\"",
                                                                                    "\"solarized-dark\"",
                                                                                    "\"solarized-light\"",
                                                                                    "\"synthwave-84\"",
                                                                                    "\"tokyo-night\"",
                                                                                    "\"vesper\"",
                                                                                    "\"vitesse-black\"",
                                                                                    "\"vitesse-dark\"",
                                                                                    "\"vitesse-light\"",
                                                                                    {
                                                                                      "kind": "object",
                                                                                      "type": "ThemeRegistrationRaw",
                                                                                      "schema": {
                                                                                        "name": {
                                                                                          "name": "name",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                2288,
                                                                                                2311
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "settings": {
                                                                                          "name": "settings",
                                                                                          "global": false,
                                                                                          "description": "",
                                                                                          "tags": [],
                                                                                          "required": true,
                                                                                          "type": "IRawThemeSetting[]",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                2316,
                                                                                                2354
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": {
                                                                                            "kind": "array",
                                                                                            "type": "IRawThemeSetting[]",
                                                                                            "schema": {
                                                                                              "0": {
                                                                                                "kind": "object",
                                                                                                "type": "IRawThemeSetting",
                                                                                                "schema": {
                                                                                                  "name": {
                                                                                                    "name": "name",
                                                                                                    "global": false,
                                                                                                    "description": "",
                                                                                                    "tags": [],
                                                                                                    "required": false,
                                                                                                    "type": "string | undefined",
                                                                                                    "declarations": [
                                                                                                      {
                                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                        "range": [
                                                                                                          2425,
                                                                                                          2448
                                                                                                        ]
                                                                                                      }
                                                                                                    ],
                                                                                                    "schema": "string | undefined"
                                                                                                  },
                                                                                                  "scope": {
                                                                                                    "name": "scope",
                                                                                                    "global": false,
                                                                                                    "description": "",
                                                                                                    "tags": [],
                                                                                                    "required": false,
                                                                                                    "type": "string | string[] | undefined",
                                                                                                    "declarations": [
                                                                                                      {
                                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                        "range": [
                                                                                                          2453,
                                                                                                          2500
                                                                                                        ]
                                                                                                      }
                                                                                                    ],
                                                                                                    "schema": "string | string[] | undefined"
                                                                                                  },
                                                                                                  "settings": {
                                                                                                    "name": "settings",
                                                                                                    "global": false,
                                                                                                    "description": "",
                                                                                                    "tags": [],
                                                                                                    "required": true,
                                                                                                    "type": "{ readonly fontStyle?: string | undefined; readonly foreground?: string | undefined; readonly background?: string | undefined; }",
                                                                                                    "declarations": [
                                                                                                      {
                                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                        "range": [
                                                                                                          2505,
                                                                                                          2645
                                                                                                        ]
                                                                                                      }
                                                                                                    ],
                                                                                                    "schema": {
                                                                                                      "kind": "object",
                                                                                                      "type": "{ readonly fontStyle?: string | undefined; readonly foreground?: string | undefined; readonly background?: string | undefined; }",
                                                                                                      "schema": {
                                                                                                        "fontStyle": {
                                                                                                          "name": "fontStyle",
                                                                                                          "global": false,
                                                                                                          "description": "",
                                                                                                          "tags": [],
                                                                                                          "required": false,
                                                                                                          "type": "string | undefined",
                                                                                                          "declarations": [
                                                                                                            {
                                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                              "range": [
                                                                                                                2534,
                                                                                                                2562
                                                                                                              ]
                                                                                                            }
                                                                                                          ],
                                                                                                          "schema": "string | undefined"
                                                                                                        },
                                                                                                        "foreground": {
                                                                                                          "name": "foreground",
                                                                                                          "global": false,
                                                                                                          "description": "",
                                                                                                          "tags": [],
                                                                                                          "required": false,
                                                                                                          "type": "string | undefined",
                                                                                                          "declarations": [
                                                                                                            {
                                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                              "range": [
                                                                                                                2571,
                                                                                                                2600
                                                                                                              ]
                                                                                                            }
                                                                                                          ],
                                                                                                          "schema": "string | undefined"
                                                                                                        },
                                                                                                        "background": {
                                                                                                          "name": "background",
                                                                                                          "global": false,
                                                                                                          "description": "",
                                                                                                          "tags": [],
                                                                                                          "required": false,
                                                                                                          "type": "string | undefined",
                                                                                                          "declarations": [
                                                                                                            {
                                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                              "range": [
                                                                                                                2609,
                                                                                                                2638
                                                                                                              ]
                                                                                                            }
                                                                                                          ],
                                                                                                          "schema": "string | undefined"
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "type": {
                                                                                          "name": "type",
                                                                                          "global": false,
                                                                                          "description": "Light/dark theme",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "\"dark\" | \"light\" | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14389,
                                                                                                14412
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": {
                                                                                            "kind": "enum",
                                                                                            "type": "\"dark\" | \"light\" | undefined",
                                                                                            "schema": {
                                                                                              "0": "undefined",
                                                                                              "1": "\"dark\"",
                                                                                              "2": "\"light\""
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "displayName": {
                                                                                          "name": "displayName",
                                                                                          "global": false,
                                                                                          "description": "Display name",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14280,
                                                                                                14301
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "tokenColors": {
                                                                                          "name": "tokenColors",
                                                                                          "global": false,
                                                                                          "description": "Same as `settings`, will use as fallback if `settings` is not present.",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "IRawThemeSetting[] | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14580,
                                                                                                14613
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": {
                                                                                            "kind": "enum",
                                                                                            "type": "IRawThemeSetting[] | undefined",
                                                                                            "schema": {
                                                                                              "0": "undefined",
                                                                                              "1": "IRawThemeSetting[]"
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "fg": {
                                                                                          "name": "fg",
                                                                                          "global": false,
                                                                                          "description": "Default foreground color",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14709,
                                                                                                14720
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "bg": {
                                                                                          "name": "bg",
                                                                                          "global": false,
                                                                                          "description": "Background color",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14808,
                                                                                                14819
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "colorReplacements": {
                                                                                          "name": "colorReplacements",
                                                                                          "global": false,
                                                                                          "description": "A map of color names to new color values.\n\nThe color key starts with '#' and should be lowercased.",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "Record<string, string> | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15002,
                                                                                                15045
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": {
                                                                                            "kind": "enum",
                                                                                            "type": "Record<string, string> | undefined",
                                                                                            "schema": {
                                                                                              "0": "undefined",
                                                                                              "1": "Record<string, string>"
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "colors": {
                                                                                          "name": "colors",
                                                                                          "global": false,
                                                                                          "description": "Color map of VS Code options\n\nWill be used by shiki on `lang: 'ansi'` to find ANSI colors, and to find the default foreground/background colors.",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "Record<string, string> | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15231,
                                                                                                15263
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "Record<string, string> | undefined"
                                                                                        },
                                                                                        "$schema": {
                                                                                          "name": "$schema",
                                                                                          "global": false,
                                                                                          "description": "JSON schema path",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "not used by shiki"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15347,
                                                                                                15364
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "semanticHighlighting": {
                                                                                          "name": "semanticHighlighting",
                                                                                          "global": false,
                                                                                          "description": "Enable semantic highlighting",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "not used by shiki"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "boolean | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15460,
                                                                                                15491
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "boolean | undefined"
                                                                                        },
                                                                                        "semanticTokenColors": {
                                                                                          "name": "semanticTokenColors",
                                                                                          "global": false,
                                                                                          "description": "Tokens for semantic highlighting",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "not used by shiki"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "Record<string, string> | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15591,
                                                                                                15636
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "Record<string, string> | undefined"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "kind": "object",
                                                                                      "type": "ThemeRegistration",
                                                                                      "schema": {
                                                                                        "name": {
                                                                                          "name": "name",
                                                                                          "global": false,
                                                                                          "description": "Theme name",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14183,
                                                                                                14196
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "displayName": {
                                                                                          "name": "displayName",
                                                                                          "global": false,
                                                                                          "description": "Display name",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14280,
                                                                                                14301
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "type": {
                                                                                          "name": "type",
                                                                                          "global": false,
                                                                                          "description": "Light/dark theme",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "\"dark\" | \"light\" | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14389,
                                                                                                14412
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "\"dark\" | \"light\" | undefined"
                                                                                        },
                                                                                        "settings": {
                                                                                          "name": "settings",
                                                                                          "global": false,
                                                                                          "description": "Token rules",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "IRawThemeSetting[] | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14452,
                                                                                                14481
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "IRawThemeSetting[] | undefined"
                                                                                        },
                                                                                        "tokenColors": {
                                                                                          "name": "tokenColors",
                                                                                          "global": false,
                                                                                          "description": "Same as `settings`, will use as fallback if `settings` is not present.",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "IRawThemeSetting[] | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14580,
                                                                                                14613
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "IRawThemeSetting[] | undefined"
                                                                                        },
                                                                                        "fg": {
                                                                                          "name": "fg",
                                                                                          "global": false,
                                                                                          "description": "Default foreground color",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14709,
                                                                                                14720
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "bg": {
                                                                                          "name": "bg",
                                                                                          "global": false,
                                                                                          "description": "Background color",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14808,
                                                                                                14819
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "colorReplacements": {
                                                                                          "name": "colorReplacements",
                                                                                          "global": false,
                                                                                          "description": "A map of color names to new color values.\n\nThe color key starts with '#' and should be lowercased.",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "Record<string, string> | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15002,
                                                                                                15045
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "Record<string, string> | undefined"
                                                                                        },
                                                                                        "colors": {
                                                                                          "name": "colors",
                                                                                          "global": false,
                                                                                          "description": "Color map of VS Code options\n\nWill be used by shiki on `lang: 'ansi'` to find ANSI colors, and to find the default foreground/background colors.",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "Record<string, string> | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15231,
                                                                                                15263
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "Record<string, string> | undefined"
                                                                                        },
                                                                                        "$schema": {
                                                                                          "name": "$schema",
                                                                                          "global": false,
                                                                                          "description": "JSON schema path",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "not used by shiki"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15347,
                                                                                                15364
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "semanticHighlighting": {
                                                                                          "name": "semanticHighlighting",
                                                                                          "global": false,
                                                                                          "description": "Enable semantic highlighting",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "not used by shiki"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "boolean | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15460,
                                                                                                15491
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "boolean | undefined"
                                                                                        },
                                                                                        "semanticTokenColors": {
                                                                                          "name": "semanticTokenColors",
                                                                                          "global": false,
                                                                                          "description": "Tokens for semantic highlighting",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "not used by shiki"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "Record<string, string> | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15591,
                                                                                                15636
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "Record<string, string> | undefined"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "kind": "object",
                                                                                      "type": "ThemeRegistrationResolved",
                                                                                      "schema": {
                                                                                        "name": {
                                                                                          "name": "name",
                                                                                          "global": false,
                                                                                          "description": "Theme name",
                                                                                          "tags": [],
                                                                                          "required": true,
                                                                                          "type": "string",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14183,
                                                                                                14196
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string"
                                                                                        },
                                                                                        "displayName": {
                                                                                          "name": "displayName",
                                                                                          "global": false,
                                                                                          "description": "Display name",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14280,
                                                                                                14301
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "type": {
                                                                                          "name": "type",
                                                                                          "global": false,
                                                                                          "description": "Light/dark theme",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": true,
                                                                                          "type": "\"dark\" | \"light\"",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14389,
                                                                                                14412
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": {
                                                                                            "kind": "enum",
                                                                                            "type": "\"dark\" | \"light\"",
                                                                                            "schema": {
                                                                                              "0": "\"dark\"",
                                                                                              "1": "\"light\""
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "settings": {
                                                                                          "name": "settings",
                                                                                          "global": false,
                                                                                          "description": "Token rules",
                                                                                          "tags": [],
                                                                                          "required": true,
                                                                                          "type": "IRawThemeSetting[]",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14452,
                                                                                                14481
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "IRawThemeSetting[]"
                                                                                        },
                                                                                        "tokenColors": {
                                                                                          "name": "tokenColors",
                                                                                          "global": false,
                                                                                          "description": "Same as `settings`, will use as fallback if `settings` is not present.",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "IRawThemeSetting[] | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14580,
                                                                                                14613
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "IRawThemeSetting[] | undefined"
                                                                                        },
                                                                                        "fg": {
                                                                                          "name": "fg",
                                                                                          "global": false,
                                                                                          "description": "Default foreground color",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": true,
                                                                                          "type": "string",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14709,
                                                                                                14720
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string"
                                                                                        },
                                                                                        "bg": {
                                                                                          "name": "bg",
                                                                                          "global": false,
                                                                                          "description": "Background color",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": true,
                                                                                          "type": "string",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                14808,
                                                                                                14819
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string"
                                                                                        },
                                                                                        "colorReplacements": {
                                                                                          "name": "colorReplacements",
                                                                                          "global": false,
                                                                                          "description": "A map of color names to new color values.\n\nThe color key starts with '#' and should be lowercased.",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "shiki custom property"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "Record<string, string> | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15002,
                                                                                                15045
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "Record<string, string> | undefined"
                                                                                        },
                                                                                        "colors": {
                                                                                          "name": "colors",
                                                                                          "global": false,
                                                                                          "description": "Color map of VS Code options\n\nWill be used by shiki on `lang: 'ansi'` to find ANSI colors, and to find the default foreground/background colors.",
                                                                                          "tags": [],
                                                                                          "required": false,
                                                                                          "type": "Record<string, string> | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15231,
                                                                                                15263
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "Record<string, string> | undefined"
                                                                                        },
                                                                                        "$schema": {
                                                                                          "name": "$schema",
                                                                                          "global": false,
                                                                                          "description": "JSON schema path",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "not used by shiki"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "string | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15347,
                                                                                                15364
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "string | undefined"
                                                                                        },
                                                                                        "semanticHighlighting": {
                                                                                          "name": "semanticHighlighting",
                                                                                          "global": false,
                                                                                          "description": "Enable semantic highlighting",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "not used by shiki"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "boolean | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15460,
                                                                                                15491
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "boolean | undefined"
                                                                                        },
                                                                                        "semanticTokenColors": {
                                                                                          "name": "semanticTokenColors",
                                                                                          "global": false,
                                                                                          "description": "Tokens for semantic highlighting",
                                                                                          "tags": [
                                                                                            {
                                                                                              "name": "field",
                                                                                              "text": "not used by shiki"
                                                                                            }
                                                                                          ],
                                                                                          "required": false,
                                                                                          "type": "Record<string, string> | undefined",
                                                                                          "declarations": [
                                                                                            {
                                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                              "range": [
                                                                                                15591,
                                                                                                15636
                                                                                              ]
                                                                                            }
                                                                                          ],
                                                                                          "schema": "Record<string, string> | undefined"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "navigation": {
                                                              "name": "navigation",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "false | { fields: string[]; }",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29288,
                                                                    29328
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": {
                                                                "kind": "enum",
                                                                "type": "false | { fields: string[]; }",
                                                                "schema": {
                                                                  "0": "false",
                                                                  "1": {
                                                                    "kind": "object",
                                                                    "type": "{ fields: string[]; }",
                                                                    "schema": {
                                                                      "fields": {
                                                                        "name": "fields",
                                                                        "global": false,
                                                                        "description": "",
                                                                        "tags": [],
                                                                        "required": true,
                                                                        "type": "string[]",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              16579,
                                                                              16601
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": "string[]"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "search": {
                                                              "name": "search",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "{ ignoredTags?: string[] | undefined; filterQuery?: QueryBuilderWhere | undefined; indexed?: boolean | undefined; options?: Options | undefined; } | undefined",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29333,
                                                                    29381
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": {
                                                                "kind": "enum",
                                                                "type": "{ ignoredTags?: string[] | undefined; filterQuery?: QueryBuilderWhere | undefined; indexed?: boolean | undefined; options?: Options | undefined; } | undefined",
                                                                "schema": {
                                                                  "0": "undefined",
                                                                  "1": {
                                                                    "kind": "object",
                                                                    "type": "{ ignoredTags?: string[] | undefined; filterQuery?: QueryBuilderWhere | undefined; indexed?: boolean | undefined; options?: Options | undefined; }",
                                                                    "schema": {
                                                                      "ignoredTags": {
                                                                        "name": "ignoredTags",
                                                                        "global": false,
                                                                        "description": "List of tags where text must not be extracted.\n\nBy default, will extract text from each tag.",
                                                                        "tags": [
                                                                          {
                                                                            "name": "default",
                                                                            "text": "['script', 'style', 'pre']"
                                                                          }
                                                                        ],
                                                                        "required": false,
                                                                        "type": "string[] | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              18208,
                                                                              18236
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": "string[] | undefined"
                                                                      },
                                                                      "filterQuery": {
                                                                        "name": "filterQuery",
                                                                        "global": false,
                                                                        "description": "Query used to filter contents that must be searched.",
                                                                        "tags": [
                                                                          {
                                                                            "name": "default",
                                                                            "text": "{ _partial: false, _draft: false}"
                                                                          }
                                                                        ],
                                                                        "required": false,
                                                                        "type": "QueryBuilderWhere | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              18407,
                                                                              18439
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": {
                                                                          "kind": "enum",
                                                                          "type": "QueryBuilderWhere | undefined",
                                                                          "schema": {
                                                                            "0": "undefined",
                                                                            "1": {
                                                                              "kind": "object",
                                                                              "type": "QueryBuilderWhere",
                                                                              "schema": {
                                                                                "$and": {
                                                                                  "name": "$and",
                                                                                  "global": false,
                                                                                  "description": "Match only if all of nested conditions are true",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n $and: [\n   { score: { $gte: 5 } },\n   { score: { $lte: 10 } }\n ]\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "QueryBuilderWhere[] | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        5401,
                                                                                        5428
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "QueryBuilderWhere[] | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": {
                                                                                        "kind": "array",
                                                                                        "type": "QueryBuilderWhere[]",
                                                                                        "schema": [
                                                                                          "QueryBuilderWhere"
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "$or": {
                                                                                  "name": "$or",
                                                                                  "global": false,
                                                                                  "description": "Match if any of nested conditions is true",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n $or: [\n   { score: { $gt: 5 } },\n   { score: { $lt: 3 } }\n ]\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "QueryBuilderWhere[] | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        5672,
                                                                                        5698
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "QueryBuilderWhere[] | undefined"
                                                                                },
                                                                                "$not": {
                                                                                  "name": "$not",
                                                                                  "global": false,
                                                                                  "description": "Match is condition is false",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n title: {\n   $not: 'Hello World'\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        5895,
                                                                                        5957
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": "string",
                                                                                      "2": "number",
                                                                                      "3": "false",
                                                                                      "4": "true",
                                                                                      "5": {
                                                                                        "kind": "object",
                                                                                        "type": "RegExp",
                                                                                        "schema": {}
                                                                                      },
                                                                                      "6": "QueryBuilderWhere"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "$eq": {
                                                                                  "name": "$eq",
                                                                                  "global": false,
                                                                                  "description": "Match if item equals condition",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n title: {\n   $eq: 'Hello World'\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        6156,
                                                                                        6197
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "string | number | boolean | RegExp | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": "string",
                                                                                      "2": "number",
                                                                                      "3": "false",
                                                                                      "4": "true",
                                                                                      "5": "RegExp"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "$ne": {
                                                                                  "name": "$ne",
                                                                                  "global": false,
                                                                                  "description": "Match if item not equals condition",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n score: {\n   $ne: 100\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        6390,
                                                                                        6431
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string | number | boolean | RegExp | undefined"
                                                                                },
                                                                                "$gt": {
                                                                                  "name": "$gt",
                                                                                  "global": false,
                                                                                  "description": "Check if item is greater than condition",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n score: {\n   $gt: 99.5\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "number | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        6629,
                                                                                        6642
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "number | undefined"
                                                                                },
                                                                                "$gte": {
                                                                                  "name": "$gte",
                                                                                  "global": false,
                                                                                  "description": "Check if item is greater than or equal to condition",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n score: {\n   $gte: 99.5\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "number | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        6853,
                                                                                        6867
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "number | undefined"
                                                                                },
                                                                                "$lt": {
                                                                                  "name": "$lt",
                                                                                  "global": false,
                                                                                  "description": "Check if item is less than condition",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n score: {\n   $lt: 99.5\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "number | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        7062,
                                                                                        7075
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "number | undefined"
                                                                                },
                                                                                "$lte": {
                                                                                  "name": "$lte",
                                                                                  "global": false,
                                                                                  "description": "Check if item is less than or equal to condition",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n score: {\n   $lte: 99.5\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "number | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        7283,
                                                                                        7297
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "number | undefined"
                                                                                },
                                                                                "$regex": {
                                                                                  "name": "$regex",
                                                                                  "global": false,
                                                                                  "description": "Provides regular expression capabilities for pattern matching strings.",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n title: {\n   $regex: /^foo/\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string | RegExp | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        7531,
                                                                                        7556
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "string | RegExp | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": "string",
                                                                                      "2": "RegExp"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "$type": {
                                                                                  "name": "$type",
                                                                                  "global": false,
                                                                                  "description": "Match if type of item equals condition",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n field: {\n   $type: 'boolean'\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        7760,
                                                                                        7775
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string | undefined"
                                                                                },
                                                                                "$exists": {
                                                                                  "name": "$exists",
                                                                                  "global": false,
                                                                                  "description": "Check key existence",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n tag: {\n   $exists: false\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "boolean | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        7956,
                                                                                        7974
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "boolean | undefined"
                                                                                },
                                                                                "$contains": {
                                                                                  "name": "$contains",
                                                                                  "global": false,
                                                                                  "description": "Match if item contains every condition or match every rule in condition array",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n title: {\n   $contains: ['Hello', 'World']\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | (string | number | boolean)[] | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        8231,
                                                                                        8304
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "string | number | boolean | (string | number | boolean)[] | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": "string",
                                                                                      "2": "number",
                                                                                      "3": "false",
                                                                                      "4": "true",
                                                                                      "5": {
                                                                                        "kind": "array",
                                                                                        "type": "(string | number | boolean)[]",
                                                                                        "schema": [
                                                                                          {
                                                                                            "kind": "enum",
                                                                                            "type": "string | number | boolean",
                                                                                            "schema": [
                                                                                              "string",
                                                                                              "number",
                                                                                              "false",
                                                                                              "true"
                                                                                            ]
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "$containsAny": {
                                                                                  "name": "$containsAny",
                                                                                  "global": false,
                                                                                  "description": "Match if item contains at least one rule from condition array",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n title: {\n   $containsAny: ['Hello', 'World']\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "(string | number | boolean)[] | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        8547,
                                                                                        8595
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "(string | number | boolean)[] | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": "(string | number | boolean)[]"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "$icontains": {
                                                                                  "name": "$icontains",
                                                                                  "global": false,
                                                                                  "description": "Ignore case contains",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n title: {\n   $icontains: 'hello world'\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        8791,
                                                                                        8811
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string | undefined"
                                                                                },
                                                                                "$in": {
                                                                                  "name": "$in",
                                                                                  "global": false,
                                                                                  "description": "Match if item is in condition array",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "example",
                                                                                      "text": "```ts\nqueryContent().where({\n category: {\n   $in: ['sport', 'nature', 'travel']\n }\n})\n```"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string | (string | number | boolean)[] | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                      "range": [
                                                                                        9034,
                                                                                        9082
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "string | (string | number | boolean)[] | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": "string",
                                                                                      "2": "(string | number | boolean)[]"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "title": {
                                                                                  "name": "title",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                  "declarations": [],
                                                                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                                                                },
                                                                                "_id": {
                                                                                  "name": "_id",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                  "declarations": [],
                                                                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                                                                },
                                                                                "_source": {
                                                                                  "name": "_source",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                  "declarations": [],
                                                                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                                                                },
                                                                                "_path": {
                                                                                  "name": "_path",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                  "declarations": [],
                                                                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                                                                },
                                                                                "_draft": {
                                                                                  "name": "_draft",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                  "declarations": [],
                                                                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                                                                },
                                                                                "_partial": {
                                                                                  "name": "_partial",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                  "declarations": [],
                                                                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                                                                },
                                                                                "_locale": {
                                                                                  "name": "_locale",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                  "declarations": [],
                                                                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                                                                },
                                                                                "_type": {
                                                                                  "name": "_type",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                  "declarations": [],
                                                                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                                                                },
                                                                                "_file": {
                                                                                  "name": "_file",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                  "declarations": [],
                                                                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                                                                },
                                                                                "_extension": {
                                                                                  "name": "_extension",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string | number | boolean | RegExp | QueryBuilderWhere | undefined",
                                                                                  "declarations": [],
                                                                                  "schema": "string | number | boolean | RegExp | QueryBuilderWhere | undefined"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "indexed": {
                                                                        "name": "indexed",
                                                                        "global": false,
                                                                        "description": "API return indexed contents to improve client-side load time.\nThis option will use MiniSearch to create the index.\nIf you disable this option, API will return raw contents instead\nyou can use with any client-side search.",
                                                                        "tags": [
                                                                          {
                                                                            "name": "default",
                                                                            "text": "true"
                                                                          }
                                                                        ],
                                                                        "required": false,
                                                                        "type": "boolean | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              18809,
                                                                              18827
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": "boolean | undefined"
                                                                      },
                                                                      "options": {
                                                                        "name": "options",
                                                                        "global": false,
                                                                        "description": "MiniSearch Options. When using `indexed` option,\nthis options will be used to configure MiniSearch\nin order to have the same options on both server and client side.",
                                                                        "tags": [
                                                                          {
                                                                            "name": "default",
                                                                            "text": "{\n  fields: ['title', 'content', 'titles'],\n  storeFields: ['title', 'content', 'titles'],\n  searchOptions: {\n    prefix: true,\n    fuzzy: 0.2,\n    boost: {\n      title: 4,\n      content: 2,\n      titles: 1\n    }\n  }\n}"
                                                                          },
                                                                          {
                                                                            "name": "see",
                                                                            "text": "https://lucaong.github.io/minisearch/modules/_minisearch_.html#options"
                                                                          }
                                                                        ],
                                                                        "required": false,
                                                                        "type": "Options | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              19641,
                                                                              19659
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": {
                                                                          "kind": "enum",
                                                                          "type": "Options | undefined",
                                                                          "schema": {
                                                                            "0": "undefined",
                                                                            "1": {
                                                                              "kind": "object",
                                                                              "type": "Options",
                                                                              "schema": {
                                                                                "fields": {
                                                                                  "name": "fields",
                                                                                  "global": false,
                                                                                  "description": "Names of the document fields to be indexed.",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "string[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                      "range": [
                                                                                        17887,
                                                                                        17904
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string[]"
                                                                                },
                                                                                "idField": {
                                                                                  "name": "idField",
                                                                                  "global": false,
                                                                                  "description": "Name of the ID field, uniquely identifying a document.",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                      "range": [
                                                                                        17987,
                                                                                        18004
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string | undefined"
                                                                                },
                                                                                "storeFields": {
                                                                                  "name": "storeFields",
                                                                                  "global": false,
                                                                                  "description": "Names of fields to store, so that search results would include them. By\ndefault none, so results would only contain the id field.",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string[] | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                      "range": [
                                                                                        18169,
                                                                                        18192
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string[] | undefined"
                                                                                },
                                                                                "extractField": {
                                                                                  "name": "extractField",
                                                                                  "global": false,
                                                                                  "description": "Function used to extract the value of each field in documents. By default,\nthe documents are assumed to be plain objects with field names as keys,\nbut by specifying a custom `extractField` function one can completely\ncustomize how the fields are extracted.\n\nThe function takes as arguments the document, and the name of the field to\nextract from it. It should return the field value as a string.",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "remarks",
                                                                                      "text": "The returned string is fed into the `tokenize` function to split it up\ninto tokens."
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "((document: any, fieldName: string) => string) | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                      "range": [
                                                                                        18778,
                                                                                        18836
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "((document: any, fieldName: string) => string) | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": {
                                                                                        "kind": "event",
                                                                                        "type": "(document: any, fieldName: string): string",
                                                                                        "schema": []
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "tokenize": {
                                                                                  "name": "tokenize",
                                                                                  "global": false,
                                                                                  "description": "Function used to split a field value into individual terms to be indexed.\nThe default tokenizer separates terms by space or punctuation, but a\ncustom tokenizer can be provided for custom logic.\n\nThe function takes as arguments string to tokenize, and the name of the\nfield it comes from. It should return the terms as an array of strings.\nWhen used for tokenizing a search query instead of a document field, the\n`fieldName` is undefined.",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "remarks",
                                                                                      "text": "This function is called after `extractField` extracts a truthy value from a\nfield. This function is then expected to split the extracted `text` document\ninto tokens (more commonly referred to as \"terms\" in this context). The resulting\nsplit might be simple, like for example on word boundaries, or it might be more\ncomplex, taking into account certain encoding, or parsing needs, or even just\nspecial cases. Think about how one might need to go about indexing the term\n\"short-term\". You would likely want to treat this case specially, and return two\nterms instead, `[ \"short\", \"term\" ]`.\n\nOr, you could let such a case be handled by the `processTerm` function,\nwhich is designed to turn each token/term into whole terms or sub-terms. In any\ncase, the purpose of this function is to split apart the provided `text` document\ninto parts that can be processed by the `processTerm` function."
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "((text: string, fieldName?: string | undefined) => string[]) | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                      "range": [
                                                                                        20350,
                                                                                        20408
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "((text: string, fieldName?: string | undefined) => string[]) | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": {
                                                                                        "kind": "event",
                                                                                        "type": "(text: string, fieldName?: string | undefined): string[]",
                                                                                        "schema": []
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "processTerm": {
                                                                                  "name": "processTerm",
                                                                                  "global": false,
                                                                                  "description": "Function used to process a term before indexing or search. This can be\nused for normalization (such as stemming). By default, terms are\ndowncased, and otherwise no other normalization is performed.\n\nThe function takes as arguments a term to process, and the name of the\nfield it comes from. It should return the processed term as a string, or a\nfalsy value to reject the term entirely.\n\nIt can also return an array of strings, in which case each string in the\nreturned array is indexed as a separate term.",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "remarks",
                                                                                      "text": "During the document indexing phase, the first step is to call the `extractField`\nfunction to fetch the requested value/field from the document. This is then\npassed off to the `tokenizer`, which will break apart each value into \"terms\".\nThese terms are then individually passed through the `processTerm` function\nto compute each term individually. A term might for example be something\nlike \"lbs\", in which case one would likely want to return\n`[ \"lbs\", \"lb\", \"pound\", \"pounds\" ]`. You may also return a single string value,\nor a falsy value if you would like to skip indexing entirely for a specific term.\n\nTruthy return value(s) are then fed to the indexer as positive matches for this\ndocument. In our example above, all four of the `[ \"lbs\", \"lb\", \"pound\", \"pounds\" ]`\nterms would be added to the indexing engine, matching against the current document\nbeing computed.\n\n*Note: Whatever values are returned from this function will receive no further\nprocessing before being indexed. This means for example, if you include whitespace\nat the beginning or end of a word, it will also be indexed that way, with the\nincluded whitespace.*"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "((term: string, fieldName?: string | undefined) => string | false | string[] | null | undefined) | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                      "range": [
                                                                                        22284,
                                                                                        22381
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "((term: string, fieldName?: string | undefined) => string | false | string[] | null | undefined) | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": {
                                                                                        "kind": "event",
                                                                                        "type": "(term: string, fieldName?: string | undefined): string | false | string[] | null | undefined",
                                                                                        "schema": []
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "logger": {
                                                                                  "name": "logger",
                                                                                  "global": false,
                                                                                  "description": "Function called to log messages. Arguments are a log level ('debug',\n'info', 'warn', or 'error'), a log message, and an optional string code\nthat identifies the reason for the log.\n\nThe default implementation uses `console`, if defined.",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "((level: LogLevel, message: string, code?: string | undefined) => void) | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                      "range": [
                                                                                        22673,
                                                                                        22740
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "((level: LogLevel, message: string, code?: string | undefined) => void) | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": {
                                                                                        "kind": "event",
                                                                                        "type": "(level: LogLevel, message: string, code?: string | undefined): void",
                                                                                        "schema": []
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "autoVacuum": {
                                                                                  "name": "autoVacuum",
                                                                                  "global": false,
                                                                                  "description": "If `true` (the default), vacuuming is performed automatically as soon as\n{@link MiniSearch#discard } is called a certain number of times, cleaning up\nobsolete references from the index. If `false`, no automatic vacuuming is\nperformed. Custom settings controlling auto vacuuming thresholds, as well\nas batching behavior, can be passed as an object (see the {@link * AutoVacuumOptions} type).",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "boolean | AutoVacuumOptions | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                      "range": [
                                                                                        23191,
                                                                                        23232
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "boolean | AutoVacuumOptions | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": "false",
                                                                                      "2": "true",
                                                                                      "3": {
                                                                                        "kind": "object",
                                                                                        "type": "AutoVacuumOptions",
                                                                                        "schema": {
                                                                                          "batchSize": {
                                                                                            "name": "batchSize",
                                                                                            "global": false,
                                                                                            "description": "Size of each vacuuming batch (the number of terms in the index that will be\ntraversed in each batch). Defaults to 1000.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "number | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  27098,
                                                                                                  27117
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": "number | undefined"
                                                                                          },
                                                                                          "batchWait": {
                                                                                            "name": "batchWait",
                                                                                            "global": false,
                                                                                            "description": "Wait time between each vacuuming batch in milliseconds. Defaults to 10.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "number | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  27217,
                                                                                                  27236
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": "number | undefined"
                                                                                          },
                                                                                          "minDirtCount": {
                                                                                            "name": "minDirtCount",
                                                                                            "global": false,
                                                                                            "description": "Minimum `dirtCount` (number of discarded documents since the last vacuuming)\nunder which auto vacuum is not triggered. It defaults to 20.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "number | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  27546,
                                                                                                  27568
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": "number | undefined"
                                                                                          },
                                                                                          "minDirtFactor": {
                                                                                            "name": "minDirtFactor",
                                                                                            "global": false,
                                                                                            "description": "Minimum `dirtFactor` (proportion of discarded documents over the total)\nunder which auto vacuum is not triggered. It defaults to 0.1.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "number | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  27737,
                                                                                                  27760
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": "number | undefined"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "searchOptions": {
                                                                                  "name": "searchOptions",
                                                                                  "global": false,
                                                                                  "description": "Default search options (see the {@link SearchOptions} type and the {@link * MiniSearch#search} method for details)",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "SearchOptions | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                      "range": [
                                                                                        23380,
                                                                                        23410
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "SearchOptions | undefined",
                                                                                    "schema": {
                                                                                      "0": "undefined",
                                                                                      "1": {
                                                                                        "kind": "object",
                                                                                        "type": "SearchOptions",
                                                                                        "schema": {
                                                                                          "fields": {
                                                                                            "name": "fields",
                                                                                            "global": false,
                                                                                            "description": "Names of the fields to search in. If omitted, all fields are searched.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "string[] | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  9538,
                                                                                                  9556
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": "string[] | undefined"
                                                                                          },
                                                                                          "filter": {
                                                                                            "name": "filter",
                                                                                            "global": false,
                                                                                            "description": "Function used to filter search results, for example on the basis of stored\nfields. It takes as argument each search result and should return a boolean\nto indicate if the result should be kept or not.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "((result: SearchResult) => boolean) | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  9798,
                                                                                                  9841
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "enum",
                                                                                              "type": "((result: SearchResult) => boolean) | undefined",
                                                                                              "schema": {
                                                                                                "0": "undefined",
                                                                                                "1": {
                                                                                                  "kind": "event",
                                                                                                  "type": "(result: SearchResult): boolean",
                                                                                                  "schema": []
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "boost": {
                                                                                            "name": "boost",
                                                                                            "global": false,
                                                                                            "description": "Key-value object of field names to boosting values. By default, fields are\nassigned a boosting factor of 1. If one assigns to a field a boosting value\nof 2, a result that matches the query in that field is assigned a score\ntwice as high as a result matching the query in another field, all else\nbeing equal.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "{ [fieldName: string]: number; } | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  10205,
                                                                                                  10258
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "enum",
                                                                                              "type": "{ [fieldName: string]: number; } | undefined",
                                                                                              "schema": {
                                                                                                "0": "undefined",
                                                                                                "1": {
                                                                                                  "kind": "object",
                                                                                                  "type": "{ [fieldName: string]: number; }",
                                                                                                  "schema": {}
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "boostTerm": {
                                                                                            "name": "boostTerm",
                                                                                            "global": false,
                                                                                            "description": "Function to calculate a boost factor for each term.\n\nThis function, if provided, is called for each query term (as split by\n`tokenize` and processed by `processTerm`). The arguments passed to the\nfunction are the query term, the positional index of the term in the query,\nand the array of all query terms. It is expected to return a numeric boost\nfactor for the term. A factor lower than 1 reduces the importance of the\nterm, a factor greater than 1 increases it. A factor of exactly 1 is\nneutral, and does not affect the term's importance.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "((term: string, i: number, terms: string[]) => number) | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  10882,
                                                                                                  10947
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "enum",
                                                                                              "type": "((term: string, i: number, terms: string[]) => number) | undefined",
                                                                                              "schema": {
                                                                                                "0": "undefined",
                                                                                                "1": {
                                                                                                  "kind": "event",
                                                                                                  "type": "(term: string, i: number, terms: string[]): number",
                                                                                                  "schema": []
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "weights": {
                                                                                            "name": "weights",
                                                                                            "global": false,
                                                                                            "description": "Relative weights to assign to prefix search results and fuzzy search\nresults. Exact matches are assigned a weight of 1.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "{ fuzzy: number; prefix: number; } | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  11102,
                                                                                                  11167
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "enum",
                                                                                              "type": "{ fuzzy: number; prefix: number; } | undefined",
                                                                                              "schema": {
                                                                                                "0": "undefined",
                                                                                                "1": {
                                                                                                  "kind": "object",
                                                                                                  "type": "{ fuzzy: number; prefix: number; }",
                                                                                                  "schema": {
                                                                                                    "fuzzy": {
                                                                                                      "name": "fuzzy",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": true,
                                                                                                      "type": "number",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                          "range": [
                                                                                                            11122,
                                                                                                            11136
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "number"
                                                                                                    },
                                                                                                    "prefix": {
                                                                                                      "name": "prefix",
                                                                                                      "global": false,
                                                                                                      "description": "",
                                                                                                      "tags": [],
                                                                                                      "required": true,
                                                                                                      "type": "number",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                          "range": [
                                                                                                            11145,
                                                                                                            11160
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "number"
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "boostDocument": {
                                                                                            "name": "boostDocument",
                                                                                            "global": false,
                                                                                            "description": "Function to calculate a boost factor for documents. It takes as arguments\nthe document ID, and a term that matches the search in that document, and\nthe value of the stored fields for the document (if any).  It should return\na boosting factor: a number higher than 1 increases the computed score, a\nnumber lower than 1 decreases the score, and a falsy value skips the search\nresult completely.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "((documentId: any, term: string, storedFields?: Record<string, unknown> | undefined) => number) | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  11623,
                                                                                                  11721
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "enum",
                                                                                              "type": "((documentId: any, term: string, storedFields?: Record<string, unknown> | undefined) => number) | undefined",
                                                                                              "schema": {
                                                                                                "0": "undefined",
                                                                                                "1": {
                                                                                                  "kind": "event",
                                                                                                  "type": "(documentId: any, term: string, storedFields?: Record<string, unknown> | undefined): number",
                                                                                                  "schema": []
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "prefix": {
                                                                                            "name": "prefix",
                                                                                            "global": false,
                                                                                            "description": "Controls whether to perform prefix search. It can be a simple boolean, or a\nfunction.\n\nIf a boolean is passed, prefix search is performed if true.\n\nIf a function is passed, it is called upon search with a search term, the\npositional index of that search term in the tokenized search query, and the\ntokenized search query. The function should return a boolean to indicate\nwhether to perform prefix search for that search term.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "boolean | ((term: string, index: number, terms: string[]) => boolean) | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  12229,
                                                                                                  12308
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "enum",
                                                                                              "type": "boolean | ((term: string, index: number, terms: string[]) => boolean) | undefined",
                                                                                              "schema": {
                                                                                                "0": "undefined",
                                                                                                "1": "false",
                                                                                                "2": "true",
                                                                                                "3": {
                                                                                                  "kind": "event",
                                                                                                  "type": "(term: string, index: number, terms: string[]): boolean",
                                                                                                  "schema": []
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "fuzzy": {
                                                                                            "name": "fuzzy",
                                                                                            "global": false,
                                                                                            "description": "Controls whether to perform fuzzy search. It can be a simple boolean, or a\nnumber, or a function.\n\nIf a boolean is given, fuzzy search with a default fuzziness parameter is\nperformed if true.\n\nIf a number higher or equal to 1 is given, fuzzy search is performed, with\na maximum edit distance (Levenshtein) equal to the number.\n\nIf a number between 0 and 1 is given, fuzzy search is performed within a\nmaximum edit distance corresponding to that fraction of the term length,\napproximated to the nearest integer. For example, 0.2 would mean an edit\ndistance of 20% of the term length, so 1 character in a 5-characters term.\nThe calculated fuzziness value is limited by the `maxFuzzy` option, to\nprevent slowdown for very long queries.\n\nIf a function is passed, the function is called upon search with a search\nterm, a positional index of that term in the tokenized search query, and\nthe tokenized search query. It should return a boolean or a number, with\nthe meaning documented above.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "number | boolean | ((term: string, index: number, terms: string[]) => number | boolean) | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  13449,
                                                                                                  13545
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "enum",
                                                                                              "type": "number | boolean | ((term: string, index: number, terms: string[]) => number | boolean) | undefined",
                                                                                              "schema": {
                                                                                                "0": "undefined",
                                                                                                "1": "number",
                                                                                                "2": "false",
                                                                                                "3": "true",
                                                                                                "4": {
                                                                                                  "kind": "event",
                                                                                                  "type": "(term: string, index: number, terms: string[]): number | boolean",
                                                                                                  "schema": []
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "maxFuzzy": {
                                                                                            "name": "maxFuzzy",
                                                                                            "global": false,
                                                                                            "description": "Controls the maximum fuzziness when using a fractional fuzzy value. This is\nset to 6 by default. Very high edit distances usually don't produce\nmeaningful results, but can excessively impact search performance.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "number | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  13798,
                                                                                                  13816
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": "number | undefined"
                                                                                          },
                                                                                          "combineWith": {
                                                                                            "name": "combineWith",
                                                                                            "global": false,
                                                                                            "description": "The operand to combine partial results for each term. By default it is\n\"OR\", so results matching _any_ of the search terms are returned by a\nsearch. If \"AND\" is given, only results matching _all_ the search terms are\nreturned by a search.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "CombinationOperator | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  14104,
                                                                                                  14138
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "enum",
                                                                                              "type": "CombinationOperator | undefined",
                                                                                              "schema": {
                                                                                                "0": "undefined",
                                                                                                "1": "\"or\"",
                                                                                                "2": "\"and\"",
                                                                                                "3": "\"and_not\"",
                                                                                                "4": "\"OR\"",
                                                                                                "5": "\"AND\"",
                                                                                                "6": "\"AND_NOT\"",
                                                                                                "7": "\"Or\"",
                                                                                                "8": "\"And\"",
                                                                                                "9": "\"And_not\""
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "tokenize": {
                                                                                            "name": "tokenize",
                                                                                            "global": false,
                                                                                            "description": "Function to tokenize the search query. By default, the same tokenizer used\nfor indexing is used also for search.",
                                                                                            "tags": [
                                                                                              {
                                                                                                "name": "remarks",
                                                                                                "text": "This function is called after `extractField` extracts a truthy\nvalue from a field. This function is then expected to split the extracted\n`text` document into tokens (more commonly referred to as \"terms\" in this\ncontext). The resulting split might be simple, like for example on word\nboundaries, or it might be more complex, taking into account certain\nencoding, or parsing needs, or even just special cases. Think about how one\nmight need to go about indexing the term \"short-term\". You would likely\nwant to treat this case specially, and return two terms instead, `[\n\"short\", \"term\" ]`.\n\nOr, you could let such a case be handled by the `processTerm` function,\nwhich is designed to turn each token/term into whole terms or sub-terms. In\nany case, the purpose of this function is to split apart the provided\n`text` document into parts that can be processed by the `processTerm`\nfunction."
                                                                                              }
                                                                                            ],
                                                                                            "required": false,
                                                                                            "type": "((text: string) => string[]) | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  15293,
                                                                                                  15331
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "enum",
                                                                                              "type": "((text: string) => string[]) | undefined",
                                                                                              "schema": {
                                                                                                "0": "undefined",
                                                                                                "1": {
                                                                                                  "kind": "event",
                                                                                                  "type": "(text: string): string[]",
                                                                                                  "schema": []
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "processTerm": {
                                                                                            "name": "processTerm",
                                                                                            "global": false,
                                                                                            "description": "Function to process or normalize terms in the search query. By default, the\nsame term processor used for indexing is used also for search.",
                                                                                            "tags": [
                                                                                              {
                                                                                                "name": "remarks",
                                                                                                "text": "During the document indexing phase, the first step is to call the\n`extractField` function to fetch the requested value/field from the\ndocument. This is then passed off to the `tokenize` function, which will\nbreak apart each value into \"terms\". These terms are then individually\npassed through this function to compute each term individually. A term\nmight for example be something like \"lbs\", in which case one would likely\nwant to return `[ \"lbs\", \"lb\", \"pound\", \"pounds\" ]`. You may also return\njust a single string, or a falsy value if you would like to skip indexing\nentirely for a specific term.\n\nTruthy return value(s) are then fed to the indexer as positive matches for\nthis document. In our example above, all four of the `[ \"lbs\", \"lb\",\n\"pound\", \"pounds\" ]` terms would be added to the indexing engine, matching\nagainst the current document being computed.\n\n*Note: Whatever values are returned from this function will receive no\nfurther processing before being indexed. This means for example, if you\ninclude whitespace at the beginning or end of a word, it will also be\nindexed that way, with the included whitespace.*"
                                                                                              }
                                                                                            ],
                                                                                            "required": false,
                                                                                            "type": "((term: string) => string | false | string[] | null | undefined) | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  16787,
                                                                                                  16864
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "enum",
                                                                                              "type": "((term: string) => string | false | string[] | null | undefined) | undefined",
                                                                                              "schema": {
                                                                                                "0": "undefined",
                                                                                                "1": {
                                                                                                  "kind": "event",
                                                                                                  "type": "(term: string): string | false | string[] | null | undefined",
                                                                                                  "schema": []
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "bm25": {
                                                                                            "name": "bm25",
                                                                                            "global": false,
                                                                                            "description": "BM25+ algorithm parameters. Customizing these is almost never necessary,\nand finetuning them requires an understanding of the BM25 scoring model. In\nmost cases, it is best to omit this option to use defaults, and instead use\nboosting to tweak scoring for specific use cases.",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "BM25Params | undefined",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                "range": [
                                                                                                  17188,
                                                                                                  17206
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "enum",
                                                                                              "type": "BM25Params | undefined",
                                                                                              "schema": {
                                                                                                "0": "undefined",
                                                                                                "1": {
                                                                                                  "kind": "object",
                                                                                                  "type": "BM25Params",
                                                                                                  "schema": {
                                                                                                    "k": {
                                                                                                      "name": "k",
                                                                                                      "global": false,
                                                                                                      "description": "Term frequency saturation point.\n\nRecommended values are between `1.2` and `2`. Higher values increase the\ndifference in score between documents with higher and lower term\nfrequencies. Setting this to `0` or a negative value is invalid. Defaults\nto `1.2`",
                                                                                                      "tags": [],
                                                                                                      "required": true,
                                                                                                      "type": "number",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                          "range": [
                                                                                                            56110,
                                                                                                            56120
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "number"
                                                                                                    },
                                                                                                    "b": {
                                                                                                      "name": "b",
                                                                                                      "global": false,
                                                                                                      "description": "Length normalization impact.\n\nRecommended values are around `0.75`. Higher values increase the weight\nthat field length has on scoring. Setting this to `0` (not recommended)\nmeans that the field length has no effect on scoring. Negative values are\ninvalid. Defaults to `0.7`.",
                                                                                                      "tags": [],
                                                                                                      "required": true,
                                                                                                      "type": "number",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                          "range": [
                                                                                                            56458,
                                                                                                            56468
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "number"
                                                                                                    },
                                                                                                    "d": {
                                                                                                      "name": "d",
                                                                                                      "global": false,
                                                                                                      "description": "BM25+ frequency normalization lower bound (usually called δ).\n\nRecommended values are between `0.5` and `1`. Increasing this parameter\nincreases the minimum relevance of one occurrence of a search term\nregardless of its (possibly very long) field length. Negative values are\ninvalid. Defaults to `0.5`.",
                                                                                                      "tags": [],
                                                                                                      "required": true,
                                                                                                      "type": "number",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                                          "range": [
                                                                                                            56833,
                                                                                                            56843
                                                                                                          ]
                                                                                                        }
                                                                                                      ],
                                                                                                      "schema": "number"
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "autoSuggestOptions": {
                                                                                  "name": "autoSuggestOptions",
                                                                                  "global": false,
                                                                                  "description": "Default auto suggest options (see the {@link SearchOptions} type and the\n{@link MiniSearch#autoSuggest } method for details)",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "SearchOptions | undefined",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/minisearch/dist/es/index.d.ts",
                                                                                      "range": [
                                                                                        23569,
                                                                                        23604
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "SearchOptions | undefined"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "contentHead": {
                                                              "name": "contentHead",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "boolean | undefined",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29386,
                                                                    29428
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "boolean | undefined"
                                                            },
                                                            "documentDriven": {
                                                              "name": "documentDriven",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "boolean | { host?: string | undefined; page?: boolean | undefined; navigation?: boolean | undefined; surround?: boolean | undefined; globals?: { [key: string]: QueryBuilderParams; } | undefined; layoutFallbacks?: string[] | undefined; injectPage?: boolean | undefined; trailingSlash?: boolean | undefined; }",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                  "range": [
                                                                    29433,
                                                                    29481
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": {
                                                                "kind": "enum",
                                                                "type": "boolean | { host?: string | undefined; page?: boolean | undefined; navigation?: boolean | undefined; surround?: boolean | undefined; globals?: { [key: string]: QueryBuilderParams; } | undefined; layoutFallbacks?: string[] | undefined; injectPage?: boolean | undefined; trailingSlash?: boolean | undefined; }",
                                                                "schema": {
                                                                  "0": "false",
                                                                  "1": "true",
                                                                  "2": {
                                                                    "kind": "object",
                                                                    "type": "{ host?: string | undefined; page?: boolean | undefined; navigation?: boolean | undefined; surround?: boolean | undefined; globals?: { [key: string]: QueryBuilderParams; } | undefined; layoutFallbacks?: string[] | undefined; injectPage?: boolean | undefined; trailingSlash?: boolean | undefined; }",
                                                                    "schema": {
                                                                      "host": {
                                                                        "name": "host",
                                                                        "global": false,
                                                                        "description": "",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "string | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              17130,
                                                                              17144
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": "string | undefined"
                                                                      },
                                                                      "page": {
                                                                        "name": "page",
                                                                        "global": false,
                                                                        "description": "",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "boolean | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              17153,
                                                                              17168
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": "boolean | undefined"
                                                                      },
                                                                      "navigation": {
                                                                        "name": "navigation",
                                                                        "global": false,
                                                                        "description": "",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "boolean | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              17177,
                                                                              17198
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": "boolean | undefined"
                                                                      },
                                                                      "surround": {
                                                                        "name": "surround",
                                                                        "global": false,
                                                                        "description": "",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "boolean | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              17207,
                                                                              17226
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": "boolean | undefined"
                                                                      },
                                                                      "globals": {
                                                                        "name": "globals",
                                                                        "global": false,
                                                                        "description": "",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "{ [key: string]: QueryBuilderParams; } | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              17235,
                                                                              17304
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": {
                                                                          "kind": "enum",
                                                                          "type": "{ [key: string]: QueryBuilderParams; } | undefined",
                                                                          "schema": {
                                                                            "0": "undefined",
                                                                            "1": {
                                                                              "kind": "object",
                                                                              "type": "{ [key: string]: QueryBuilderParams; }",
                                                                              "schema": {}
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "layoutFallbacks": {
                                                                        "name": "layoutFallbacks",
                                                                        "global": false,
                                                                        "description": "",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "string[] | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              17313,
                                                                              17340
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": "string[] | undefined"
                                                                      },
                                                                      "injectPage": {
                                                                        "name": "injectPage",
                                                                        "global": false,
                                                                        "description": "",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "boolean | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              17349,
                                                                              17370
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": "boolean | undefined"
                                                                      },
                                                                      "trailingSlash": {
                                                                        "name": "trailingSlash",
                                                                        "global": false,
                                                                        "description": "",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "boolean | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/module.d.ts",
                                                                            "range": [
                                                                              17379,
                                                                              17403
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": "boolean | undefined"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "mdc": {
                                                        "name": "mdc",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "{ components: { prose: boolean; map: Record<string, string>; }; headings: { anchorLinks?: boolean | { h1?: boolean | undefined; h2?: boolean | undefined; h3?: boolean | undefined; h4?: boolean | undefined; h5?: boolean | undefined; h6?: boolean | undefined; } | undefined; } | undefined; useNuxtImage?: boolean | unde...",
                                                        "declarations": [
                                                          {
                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                            "range": [
                                                              13165,
                                                              13385
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "object",
                                                          "type": "{ components: { prose: boolean; map: Record<string, string>; }; headings: { anchorLinks?: boolean | { h1?: boolean | undefined; h2?: boolean | undefined; h3?: boolean | undefined; h4?: boolean | undefined; h5?: boolean | undefined; h6?: boolean | undefined; } | undefined; } | undefined; useNuxtImage?: boolean | unde...",
                                                          "schema": {
                                                            "components": {
                                                              "name": "components",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "{ prose: boolean; map: Record<string, string>; }",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                                  "range": [
                                                                    13184,
                                                                    13289
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": {
                                                                "kind": "object",
                                                                "type": "{ prose: boolean; map: Record<string, string>; }",
                                                                "schema": {
                                                                  "prose": {
                                                                    "name": "prose",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "boolean",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                                        "range": [
                                                                          13214,
                                                                          13229
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean"
                                                                  },
                                                                  "map": {
                                                                    "name": "map",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "Record<string, string>",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                                        "range": [
                                                                          13246,
                                                                          13274
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "Record<string, string>"
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "headings": {
                                                              "name": "headings",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "{ anchorLinks?: boolean | { h1?: boolean | undefined; h2?: boolean | undefined; h3?: boolean | undefined; h4?: boolean | undefined; h5?: boolean | undefined; h6?: boolean | undefined; } | undefined; } | undefined",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                                  "range": [
                                                                    13302,
                                                                    13338
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": {
                                                                "kind": "enum",
                                                                "type": "{ anchorLinks?: boolean | { h1?: boolean | undefined; h2?: boolean | undefined; h3?: boolean | undefined; h4?: boolean | undefined; h5?: boolean | undefined; h6?: boolean | undefined; } | undefined; } | undefined",
                                                                "schema": {
                                                                  "0": "undefined",
                                                                  "1": {
                                                                    "kind": "object",
                                                                    "type": "{ anchorLinks?: boolean | { h1?: boolean | undefined; h2?: boolean | undefined; h3?: boolean | undefined; h4?: boolean | undefined; h5?: boolean | undefined; h6?: boolean | undefined; } | undefined; }",
                                                                    "schema": {
                                                                      "anchorLinks": {
                                                                        "name": "anchorLinks",
                                                                        "global": false,
                                                                        "description": "",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "boolean | { h1?: boolean | undefined; h2?: boolean | undefined; h3?: boolean | undefined; h4?: boolean | undefined; h5?: boolean | undefined; h6?: boolean | undefined; } | undefined",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                                            "range": [
                                                                              3983,
                                                                              4095
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": {
                                                                          "kind": "enum",
                                                                          "type": "boolean | { h1?: boolean | undefined; h2?: boolean | undefined; h3?: boolean | undefined; h4?: boolean | undefined; h5?: boolean | undefined; h6?: boolean | undefined; } | undefined",
                                                                          "schema": {
                                                                            "0": "undefined",
                                                                            "1": "false",
                                                                            "2": "true",
                                                                            "3": "{ h1?: boolean | undefined; h2?: boolean | undefined; h3?: boolean | undefined; h4?: boolean | undefined; h5?: boolean | undefined; h6?: boolean | undefined; }"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "useNuxtImage": {
                                                              "name": "useNuxtImage",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": false,
                                                              "type": "boolean | undefined",
                                                              "declarations": [
                                                                {
                                                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                                  "range": [
                                                                    13351,
                                                                    13374
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "boolean | undefined"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "isHydrating": {
                                            "name": "isHydrating",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": false,
                                            "type": "boolean | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  6005,
                                                  6027
                                                ]
                                              }
                                            ],
                                            "schema": "boolean | undefined"
                                          },
                                          "deferHydration": {
                                            "name": "deferHydration",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "() => () => void | Promise<void>",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  6032,
                                                  6081
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "event",
                                              "type": "(): () => void | Promise<void>"
                                            }
                                          },
                                          "ssrContext": {
                                            "name": "ssrContext",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": false,
                                            "type": "NuxtSSRContext | undefined",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  6086,
                                                  6114
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "enum",
                                              "type": "NuxtSSRContext | undefined",
                                              "schema": {
                                                "0": "undefined",
                                                "1": {
                                                  "kind": "object",
                                                  "type": "NuxtSSRContext",
                                                  "schema": {
                                                    "url": {
                                                      "name": "url",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "string",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            2839,
                                                            2851
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "string"
                                                    },
                                                    "event": {
                                                      "name": "event",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "H3Event<EventHandlerRequest>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            2856,
                                                            2871
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "H3Event<EventHandlerRequest>"
                                                    },
                                                    "runtimeConfig": {
                                                      "name": "runtimeConfig",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "RuntimeConfig",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            2876,
                                                            2905
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "RuntimeConfig"
                                                    },
                                                    "noSSR": {
                                                      "name": "noSSR",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "boolean",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            2910,
                                                            2925
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "boolean"
                                                    },
                                                    "error": {
                                                      "name": "error",
                                                      "global": false,
                                                      "description": "whether we are rendering an SSR error",
                                                      "tags": [],
                                                      "required": false,
                                                      "type": "boolean | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            2979,
                                                            2995
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "boolean | undefined"
                                                    },
                                                    "nuxt": {
                                                      "name": "nuxt",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "_NuxtApp",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            3000,
                                                            3015
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "object",
                                                        "type": "_NuxtApp",
                                                        "schema": {
                                                          "_name": {
                                                            "name": "_name",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": true,
                                                            "type": "string",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4060,
                                                                  4074
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "string"
                                                          },
                                                          "vueApp": {
                                                            "name": "vueApp",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "App<Element>",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4079,
                                                                  4100
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "App<Element>"
                                                          },
                                                          "globalName": {
                                                            "name": "globalName",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "string",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4105,
                                                                  4124
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "string"
                                                          },
                                                          "versions": {
                                                            "name": "versions",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "Record<string, string>",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4129,
                                                                  4162
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "Record<string, string>"
                                                          },
                                                          "hooks": {
                                                            "name": "hooks",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "Hookable<RuntimeNuxtHooks, HookKeys<RuntimeNuxtHooks>>",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4167,
                                                                  4201
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "Hookable<RuntimeNuxtHooks, HookKeys<RuntimeNuxtHooks>>"
                                                          },
                                                          "hook": {
                                                            "name": "hook",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, function_: InferCallback<RuntimeNuxtHooks, NameT>, options?: { ...; } | undefined) => () => void",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4206,
                                                                  4238
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, function_: InferCallback<RuntimeNuxtHooks, NameT>, options?: { ...; } | undefined) => () => void"
                                                          },
                                                          "callHook": {
                                                            "name": "callHook",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, ...arguments_: Parameters<InferCallback<RuntimeNuxtHooks, NameT>>) => Promise<...>",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4243,
                                                                  4283
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, ...arguments_: Parameters<InferCallback<RuntimeNuxtHooks, NameT>>) => Promise<...>"
                                                          },
                                                          "runWithContext": {
                                                            "name": "runWithContext",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "<T extends () => any>(fn: T) => ReturnType<T> | Promise<Awaited<ReturnType<T>>>",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4288,
                                                                  4384
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "<T extends () => any>(fn: T) => ReturnType<T> | Promise<Awaited<ReturnType<T>>>"
                                                          },
                                                          "_cookies": {
                                                            "name": "_cookies",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": false,
                                                            "type": "Record<string, unknown> | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4438,
                                                                  4473
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "Record<string, unknown> | undefined"
                                                          },
                                                          "_id": {
                                                            "name": "_id",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": false,
                                                            "type": "number | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4499,
                                                                  4512
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "number | undefined"
                                                          },
                                                          "_scope": {
                                                            "name": "_scope",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": true,
                                                            "type": "EffectScope",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4538,
                                                                  4558
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "EffectScope"
                                                          },
                                                          "_asyncDataPromises": {
                                                            "name": "_asyncDataPromises",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": true,
                                                            "type": "Record<string, Promise<any> | undefined>",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4584,
                                                                  4645
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "Record<string, Promise<any> | undefined>"
                                                          },
                                                          "_asyncData": {
                                                            "name": "_asyncData",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": true,
                                                            "type": "Record<string, { data: Ref<unknown>; pending: Ref<boolean>; error: Ref<Error | null>; status: Ref<AsyncDataRequestStatus>; _default: () => unknown; } | undefined>",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  4671,
                                                                  5031
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "Record<string, { data: Ref<unknown>; pending: Ref<boolean>; error: Ref<Error | null>; status: Ref<AsyncDataRequestStatus>; _default: () => unknown; } | undefined>"
                                                          },
                                                          "_loadingIndicator": {
                                                            "name": "_loadingIndicator",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": false,
                                                            "type": "LoadingIndicator | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5057,
                                                                  5094
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "LoadingIndicator | undefined"
                                                          },
                                                          "_loadingIndicatorDeps": {
                                                            "name": "_loadingIndicatorDeps",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": false,
                                                            "type": "number | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5120,
                                                                  5151
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "number | undefined"
                                                          },
                                                          "_middleware": {
                                                            "name": "_middleware",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": true,
                                                            "type": "{ global: RouteMiddleware[]; named: Record<string, RouteMiddleware>; }",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5177,
                                                                  5281
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "{ global: RouteMiddleware[]; named: Record<string, RouteMiddleware>; }"
                                                          },
                                                          "_once": {
                                                            "name": "_once",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": true,
                                                            "type": "{ [key: string]: Promise<any>; }",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5307,
                                                                  5359
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "{ [key: string]: Promise<any>; }"
                                                          },
                                                          "_observer": {
                                                            "name": "_observer",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": false,
                                                            "type": "{ observe: (element: Element, callback: () => void) => () => void; } | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5385,
                                                                  5478
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "{ observe: (element: Element, callback: () => void) => () => void; } | undefined"
                                                          },
                                                          "_payloadCache": {
                                                            "name": "_payloadCache",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": false,
                                                            "type": "Record<string, Record<string, any> | Promise<Record<string, any>> | null> | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5504,
                                                                  5594
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "Record<string, Record<string, any> | Promise<Record<string, any>> | null> | undefined"
                                                          },
                                                          "_appConfig": {
                                                            "name": "_appConfig",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": true,
                                                            "type": "AppConfig",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5620,
                                                                  5642
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "AppConfig"
                                                          },
                                                          "_route": {
                                                            "name": "_route",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": true,
                                                            "type": "RouteLocationNormalizedLoadedGeneric",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5668,
                                                                  5706
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "RouteLocationNormalizedLoadedGeneric"
                                                          },
                                                          "_islandPromises": {
                                                            "name": "_islandPromises",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": false,
                                                            "type": "Record<string, Promise<any>> | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5732,
                                                                  5779
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "Record<string, Promise<any>> | undefined"
                                                          },
                                                          "_payloadRevivers": {
                                                            "name": "_payloadRevivers",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": true,
                                                            "type": "Record<string, (data: any) => any>",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5805,
                                                                  5858
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "Record<string, (data: any) => any>"
                                                          },
                                                          "_routeAnnouncer": {
                                                            "name": "_routeAnnouncer",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": false,
                                                            "type": "RouteAnnouncer | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5884,
                                                                  5917
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "RouteAnnouncer | undefined"
                                                          },
                                                          "_routeAnnouncerDeps": {
                                                            "name": "_routeAnnouncerDeps",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [
                                                              {
                                                                "name": "internal"
                                                              }
                                                            ],
                                                            "required": false,
                                                            "type": "number | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5943,
                                                                  5972
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "number | undefined"
                                                          },
                                                          "$config": {
                                                            "name": "$config",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "RuntimeConfig",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  5977,
                                                                  6000
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "RuntimeConfig"
                                                          },
                                                          "isHydrating": {
                                                            "name": "isHydrating",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "boolean | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  6005,
                                                                  6027
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "boolean | undefined"
                                                          },
                                                          "deferHydration": {
                                                            "name": "deferHydration",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "() => () => void | Promise<void>",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  6032,
                                                                  6081
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "() => () => void | Promise<void>"
                                                          },
                                                          "ssrContext": {
                                                            "name": "ssrContext",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "NuxtSSRContext | undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  6086,
                                                                  6114
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "NuxtSSRContext | undefined"
                                                          },
                                                          "payload": {
                                                            "name": "payload",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "NuxtPayload",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  6119,
                                                                  6140
                                                                ]
                                                              }
                                                            ],
                                                            "schema": {
                                                              "kind": "object",
                                                              "type": "NuxtPayload",
                                                              "schema": {
                                                                "path": {
                                                                  "name": "path",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": false,
                                                                  "type": "string | undefined",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                      "range": [
                                                                        3661,
                                                                        3675
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": "string | undefined"
                                                                },
                                                                "serverRendered": {
                                                                  "name": "serverRendered",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": false,
                                                                  "type": "boolean | undefined",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                      "range": [
                                                                        3680,
                                                                        3705
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": "boolean | undefined"
                                                                },
                                                                "prerenderedAt": {
                                                                  "name": "prerenderedAt",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": false,
                                                                  "type": "number | undefined",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                      "range": [
                                                                        3710,
                                                                        3733
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": "number | undefined"
                                                                },
                                                                "data": {
                                                                  "name": "data",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": true,
                                                                  "type": "Record<string, any>",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                      "range": [
                                                                        3738,
                                                                        3764
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": "Record<string, any>"
                                                                },
                                                                "state": {
                                                                  "name": "state",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": true,
                                                                  "type": "Record<string, any>",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                      "range": [
                                                                        3769,
                                                                        3796
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": "Record<string, any>"
                                                                },
                                                                "once": {
                                                                  "name": "once",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": true,
                                                                  "type": "Set<string>",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                      "range": [
                                                                        3801,
                                                                        3819
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": "Set<string>"
                                                                },
                                                                "config": {
                                                                  "name": "config",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": false,
                                                                  "type": "Pick<RuntimeConfig, \"public\" | \"app\"> | undefined",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                      "range": [
                                                                        3824,
                                                                        3871
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": {
                                                                    "kind": "enum",
                                                                    "type": "Pick<RuntimeConfig, \"public\" | \"app\"> | undefined",
                                                                    "schema": {
                                                                      "0": "undefined",
                                                                      "1": "Pick<RuntimeConfig, \"public\" | \"app\">"
                                                                    }
                                                                  }
                                                                },
                                                                "error": {
                                                                  "name": "error",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": false,
                                                                  "type": "NuxtError<unknown> | null | undefined",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                      "range": [
                                                                        3876,
                                                                        3914
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": {
                                                                    "kind": "enum",
                                                                    "type": "NuxtError<unknown> | null | undefined",
                                                                    "schema": {
                                                                      "0": "undefined",
                                                                      "1": "null",
                                                                      "2": "NuxtError<unknown>"
                                                                    }
                                                                  }
                                                                },
                                                                "_errors": {
                                                                  "name": "_errors",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": true,
                                                                  "type": "Record<string, NuxtError<unknown> | null>",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                      "range": [
                                                                        3919,
                                                                        3983
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": "Record<string, NuxtError<unknown> | null>"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "static": {
                                                            "name": "static",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "{ data: Record<string, any>; }",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  6145,
                                                                  6196
                                                                ]
                                                              }
                                                            ],
                                                            "schema": {
                                                              "kind": "object",
                                                              "type": "{ data: Record<string, any>; }",
                                                              "schema": {
                                                                "data": {
                                                                  "name": "data",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": true,
                                                                  "type": "Record<string, any>",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                      "range": [
                                                                        6163,
                                                                        6189
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": "Record<string, any>"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "provide": {
                                                            "name": "provide",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "(name: string, value: any) => void",
                                                            "declarations": [
                                                              {
                                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                "range": [
                                                                  6201,
                                                                  6245
                                                                ]
                                                              }
                                                            ],
                                                            "schema": {
                                                              "kind": "event",
                                                              "type": "(name: string, value: any): void",
                                                              "schema": {}
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "payload": {
                                                      "name": "payload",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "Partial<NuxtPayload>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            3020,
                                                            3050
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Partial<NuxtPayload>"
                                                    },
                                                    "head": {
                                                      "name": "head",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": true,
                                                      "type": "VueHeadClient<MergeHead>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            3055,
                                                            3086
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "VueHeadClient<MergeHead>",
                                                        "schema": {
                                                          "0": {
                                                            "kind": "object",
                                                            "type": "Unhead<MaybeComputedRef<ReactiveHead<MergeHead>>> & ObjectPlugin<any[]>",
                                                            "schema": {
                                                              "plugins": {
                                                                "name": "plugins",
                                                                "global": false,
                                                                "description": "Registered plugins.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "HeadPlugin[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      4780,
                                                                      4802
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "array",
                                                                  "type": "HeadPlugin[]",
                                                                  "schema": {
                                                                    "0": {
                                                                      "kind": "object",
                                                                      "type": "HeadPlugin",
                                                                      "schema": {
                                                                        "hooks": {
                                                                          "name": "hooks",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "NestedHooks<HeadHooks> | undefined",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                              "range": [
                                                                                4478,
                                                                                4509
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "enum",
                                                                            "type": "NestedHooks<HeadHooks> | undefined",
                                                                            "schema": {
                                                                              "0": "undefined",
                                                                              "1": {
                                                                                "kind": "object",
                                                                                "type": "Partial<StripGeneric<HeadHooks>> & Partial<{ entries: NestedHooks<WithoutNamespace<HeadHooks, \"entries\">>; ... 4 more ...; script: NestedHooks<...>; }> & Partial<...>",
                                                                                "schema": {
                                                                                  "init": {
                                                                                    "name": "init",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: Unhead<any>) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          1358,
                                                                                          1399
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: Unhead<any>) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: Unhead<any>): HookResult",
                                                                                          "schema": [
                                                                                            "any"
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "entries:updated": {
                                                                                    "name": "entries:updated",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: Unhead<any>) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          1404,
                                                                                          1456
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: Unhead<any>) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: Unhead<any>): HookResult",
                                                                                          "schema": [
                                                                                            "any"
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "entries:resolve": {
                                                                                    "name": "entries:resolve",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: EntryResolveCtx<any>) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          1461,
                                                                                          1522
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: EntryResolveCtx<any>) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: EntryResolveCtx<any>): HookResult",
                                                                                          "schema": [
                                                                                            "any"
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "tag:normalise": {
                                                                                    "name": "tag:normalise",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          1527,
                                                                                          1670
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "tags:beforeResolve": {
                                                                                    "name": "tags:beforeResolve",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          1675,
                                                                                          1751
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: { tags: HeadTag[]; }): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "tags:resolve": {
                                                                                    "name": "tags:resolve",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          1756,
                                                                                          1826
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: { tags: HeadTag[]; }): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "tags:afterResolve": {
                                                                                    "name": "tags:afterResolve",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          1831,
                                                                                          1906
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: { tags: HeadTag[]; }): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "dom:beforeRender": {
                                                                                    "name": "dom:beforeRender",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: DomBeforeRenderCtx) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          1911,
                                                                                          1971
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: DomBeforeRenderCtx) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: DomBeforeRenderCtx): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "dom:renderTag": {
                                                                                    "name": "dom:renderTag",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: DomRenderTagContext, document: Document, track: any) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          1976,
                                                                                          2066
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: DomRenderTagContext, document: Document, track: any) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: DomRenderTagContext, document: Document, track: any): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "dom:rendered": {
                                                                                    "name": "dom:rendered",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: { renders: DomRenderTagContext[]; }) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          2071,
                                                                                          2156
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: { renders: DomRenderTagContext[]; }) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: { renders: DomRenderTagContext[]; }): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "ssr:beforeRender": {
                                                                                    "name": "ssr:beforeRender",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: ShouldRenderContext) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          2161,
                                                                                          2222
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: ShouldRenderContext) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: ShouldRenderContext): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "ssr:render": {
                                                                                    "name": "ssr:render",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          2227,
                                                                                          2295
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: { tags: HeadTag[]; }): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "ssr:rendered": {
                                                                                    "name": "ssr:rendered",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: SSRRenderContext) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          2300,
                                                                                          2354
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: SSRRenderContext) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: SSRRenderContext): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "script:updated": {
                                                                                    "name": "script:updated",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: { script: ScriptInstance<any>; }) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          2359,
                                                                                          2443
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: { script: ScriptInstance<any>; }) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: { script: ScriptInstance<any>; }): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "script:instance-fn": {
                                                                                    "name": "script:instance-fn",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }) => HookResult) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                        "range": [
                                                                                          2448,
                                                                                          2590
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }) => HookResult) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }): HookResult",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "entries": {
                                                                                    "name": "entries",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"entries\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "NestedHooks<WithoutNamespace<HeadHooks, \"entries\">> | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"entries\">>> & Partial<{}> & Partial<{ updated: (ctx: Unhead<any>) => HookResult; resolve: (ctx: EntryResolveCtx<...>) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "updated": {
                                                                                              "name": "updated",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: Unhead<any>) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: Unhead<any>) => HookResult) | undefined"
                                                                                            },
                                                                                            "resolve": {
                                                                                              "name": "resolve",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: EntryResolveCtx<any>) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: EntryResolveCtx<any>) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "2": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"entries\">>> & Partial<{}> & Partial<{ updated: (ctx: Unhead<any>) => HookResult; resolve: (ctx: EntryResolveCtx<...>) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "updated": {
                                                                                              "name": "updated",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: Unhead<any>) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: Unhead<any>) => HookResult) | undefined"
                                                                                            },
                                                                                            "resolve": {
                                                                                              "name": "resolve",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: EntryResolveCtx<any>) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: EntryResolveCtx<any>) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "tag": {
                                                                                    "name": "tag",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tag\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tag\">> | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"tag\">>> & Partial<{}> & Partial<{ normalise: (ctx: { tag: HeadTag; entry: HeadEntry<...>; resolvedOptions: CreateHeadOptions; }) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "normalise": {
                                                                                              "name": "normalise",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "2": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"tag\">>> & Partial<{}> & Partial<{ normalise: (ctx: { tag: HeadTag; entry: HeadEntry<...>; resolvedOptions: CreateHeadOptions; }) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "normalise": {
                                                                                              "name": "normalise",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "tags": {
                                                                                    "name": "tags",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tags\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tags\">> | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"tags\">>> & Partial<{}> & Partial<{ resolve: (ctx: { tags: HeadTag[]; }) => HookResult; beforeResolve: (ctx: { ...; }) => HookResult; afterResolve: (ctx: { ...; }) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "resolve": {
                                                                                              "name": "resolve",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined"
                                                                                            },
                                                                                            "beforeResolve": {
                                                                                              "name": "beforeResolve",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined"
                                                                                            },
                                                                                            "afterResolve": {
                                                                                              "name": "afterResolve",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "2": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"tags\">>> & Partial<{}> & Partial<{ resolve: (ctx: { tags: HeadTag[]; }) => HookResult; beforeResolve: (ctx: { ...; }) => HookResult; afterResolve: (ctx: { ...; }) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "resolve": {
                                                                                              "name": "resolve",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined"
                                                                                            },
                                                                                            "beforeResolve": {
                                                                                              "name": "beforeResolve",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined"
                                                                                            },
                                                                                            "afterResolve": {
                                                                                              "name": "afterResolve",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "dom": {
                                                                                    "name": "dom",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"dom\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "NestedHooks<WithoutNamespace<HeadHooks, \"dom\">> | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"dom\">>> & Partial<{}> & Partial<{ beforeRender: (ctx: DomBeforeRenderCtx) => HookResult; renderTag: (ctx: DomRenderTagContext, document: Document, track: any) => HookResult; rendered: (ctx: { ...; }) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "beforeRender": {
                                                                                              "name": "beforeRender",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: DomBeforeRenderCtx) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: DomBeforeRenderCtx) => HookResult) | undefined"
                                                                                            },
                                                                                            "renderTag": {
                                                                                              "name": "renderTag",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: DomRenderTagContext, document: Document, track: any) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: DomRenderTagContext, document: Document, track: any) => HookResult) | undefined"
                                                                                            },
                                                                                            "rendered": {
                                                                                              "name": "rendered",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { renders: DomRenderTagContext[]; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { renders: DomRenderTagContext[]; }) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "2": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"dom\">>> & Partial<{}> & Partial<{ beforeRender: (ctx: DomBeforeRenderCtx) => HookResult; renderTag: (ctx: DomRenderTagContext, document: Document, track: any) => HookResult; rendered: (ctx: { ...; }) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "beforeRender": {
                                                                                              "name": "beforeRender",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: DomBeforeRenderCtx) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: DomBeforeRenderCtx) => HookResult) | undefined"
                                                                                            },
                                                                                            "renderTag": {
                                                                                              "name": "renderTag",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: DomRenderTagContext, document: Document, track: any) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: DomRenderTagContext, document: Document, track: any) => HookResult) | undefined"
                                                                                            },
                                                                                            "rendered": {
                                                                                              "name": "rendered",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { renders: DomRenderTagContext[]; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { renders: DomRenderTagContext[]; }) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "ssr": {
                                                                                    "name": "ssr",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"ssr\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "NestedHooks<WithoutNamespace<HeadHooks, \"ssr\">> | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"ssr\">>> & Partial<{}> & Partial<{ render: (ctx: { tags: HeadTag[]; }) => HookResult; beforeRender: (ctx: ShouldRenderContext) => HookResult; rendered: (ctx: SSRRenderContext) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "render": {
                                                                                              "name": "render",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined"
                                                                                            },
                                                                                            "beforeRender": {
                                                                                              "name": "beforeRender",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: ShouldRenderContext) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: ShouldRenderContext) => HookResult) | undefined"
                                                                                            },
                                                                                            "rendered": {
                                                                                              "name": "rendered",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: SSRRenderContext) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: SSRRenderContext) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "2": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"ssr\">>> & Partial<{}> & Partial<{ render: (ctx: { tags: HeadTag[]; }) => HookResult; beforeRender: (ctx: ShouldRenderContext) => HookResult; rendered: (ctx: SSRRenderContext) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "render": {
                                                                                              "name": "render",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { tags: HeadTag[]; }) => HookResult) | undefined"
                                                                                            },
                                                                                            "beforeRender": {
                                                                                              "name": "beforeRender",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: ShouldRenderContext) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: ShouldRenderContext) => HookResult) | undefined"
                                                                                            },
                                                                                            "rendered": {
                                                                                              "name": "rendered",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: SSRRenderContext) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: SSRRenderContext) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "script": {
                                                                                    "name": "script",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"script\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "NestedHooks<WithoutNamespace<HeadHooks, \"script\">> | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"script\">>> & Partial<{}> & Partial<{ updated: (ctx: { script: ScriptInstance<any>; }) => HookResult; \"instance-fn\": (ctx: { ...; }) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "updated": {
                                                                                              "name": "updated",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { script: ScriptInstance<any>; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { script: ScriptInstance<any>; }) => HookResult) | undefined"
                                                                                            },
                                                                                            "instance-fn": {
                                                                                              "name": "instance-fn",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "2": {
                                                                                          "kind": "object",
                                                                                          "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"script\">>> & Partial<{}> & Partial<{ updated: (ctx: { script: ScriptInstance<any>; }) => HookResult; \"instance-fn\": (ctx: { ...; }) => HookResult; }>",
                                                                                          "schema": {
                                                                                            "updated": {
                                                                                              "name": "updated",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { script: ScriptInstance<any>; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { script: ScriptInstance<any>; }) => HookResult) | undefined"
                                                                                            },
                                                                                            "instance-fn": {
                                                                                              "name": "instance-fn",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "((ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }) => HookResult) | undefined",
                                                                                              "declarations": [],
                                                                                              "schema": "((ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }) => HookResult) | undefined"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "2": {
                                                                                "kind": "object",
                                                                                "type": "Partial<OnlyGeneric<HeadHooks>> & Partial<{ entries: NestedHooks<WithoutNamespace<HeadHooks, \"entries\">>; ... 4 more ...; script: NestedHooks<...>; }> & Partial<...>",
                                                                                "schema": {
                                                                                  "entries": {
                                                                                    "name": "entries",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"entries\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"entries\">> | undefined"
                                                                                  },
                                                                                  "tag": {
                                                                                    "name": "tag",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tag\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"tag\">> | undefined"
                                                                                  },
                                                                                  "tags": {
                                                                                    "name": "tags",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tags\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"tags\">> | undefined"
                                                                                  },
                                                                                  "dom": {
                                                                                    "name": "dom",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"dom\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"dom\">> | undefined"
                                                                                  },
                                                                                  "ssr": {
                                                                                    "name": "ssr",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"ssr\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"ssr\">> | undefined"
                                                                                  },
                                                                                  "script": {
                                                                                    "name": "script",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "NestedHooks<WithoutNamespace<HeadHooks, \"script\">> | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"script\">> | undefined"
                                                                                  },
                                                                                  "init": {
                                                                                    "name": "init",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((ctx: Unhead<any>) => HookResult) | undefined",
                                                                                    "declarations": [],
                                                                                    "schema": "((ctx: Unhead<any>) => HookResult) | undefined"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        "domDelayFn": {
                                                                          "name": "domDelayFn",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "((fn: () => void) => void) | undefined",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                              "range": [
                                                                                4377,
                                                                                4415
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "enum",
                                                                            "type": "((fn: () => void) => void) | undefined",
                                                                            "schema": {
                                                                              "0": "undefined",
                                                                              "1": {
                                                                                "kind": "event",
                                                                                "type": "(fn: () => void): void",
                                                                                "schema": []
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        "document": {
                                                                          "name": "document",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "Document | undefined",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                              "range": [
                                                                                4420,
                                                                                4440
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "enum",
                                                                            "type": "Document | undefined",
                                                                            "schema": {
                                                                              "0": "undefined",
                                                                              "1": {
                                                                                "kind": "object",
                                                                                "type": "Document",
                                                                                "schema": {
                                                                                  "startViewTransition": {
                                                                                    "name": "startViewTransition",
                                                                                    "global": false,
                                                                                    "description": "",
                                                                                    "tags": [],
                                                                                    "required": false,
                                                                                    "type": "((callback: () => void | Promise<void>) => ViewTransition) | undefined",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/plugins/view-transitions.client.d.ts",
                                                                                        "range": [
                                                                                          338,
                                                                                          417
                                                                                        ]
                                                                                      }
                                                                                    ],
                                                                                    "schema": {
                                                                                      "kind": "enum",
                                                                                      "type": "((callback: () => void | Promise<void>) => ViewTransition) | undefined",
                                                                                      "schema": {
                                                                                        "0": "undefined",
                                                                                        "1": {
                                                                                          "kind": "event",
                                                                                          "type": "(callback: () => void | Promise<void>): ViewTransition",
                                                                                          "schema": []
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        "mode": {
                                                                          "name": "mode",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "RuntimeMode | undefined",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                              "range": [
                                                                                3712,
                                                                                3731
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "enum",
                                                                            "type": "RuntimeMode | undefined",
                                                                            "schema": {
                                                                              "0": "undefined",
                                                                              "1": "\"server\"",
                                                                              "2": "\"client\""
                                                                            }
                                                                          }
                                                                        },
                                                                        "key": {
                                                                          "name": "key",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string | undefined",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                              "range": [
                                                                                3911,
                                                                                3924
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string | undefined"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "headEntries": {
                                                                "name": "headEntries",
                                                                "global": false,
                                                                "description": "The active head entries.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "() => HeadEntry<MaybeComputedRef<ReactiveHead<MergeHead>>>[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      4855,
                                                                      4893
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "event",
                                                                  "type": "(): HeadEntry<MaybeComputedRef<ReactiveHead<MergeHead>>>[]"
                                                                }
                                                              },
                                                              "push": {
                                                                "name": "push",
                                                                "global": false,
                                                                "description": "Create a new head entry.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "(entry: MaybeComputedRef<ReactiveHead<MergeHead>>, options?: HeadEntryOptions | undefined) => ActiveHeadEntry<MaybeComputedRef<ReactiveHead<MergeHead>>>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      4946,
                                                                      5021
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "event",
                                                                  "type": "(entry: MaybeComputedRef<ReactiveHead<MergeHead>>, options?: HeadEntryOptions | undefined): ActiveHeadEntry<MaybeComputedRef<ReactiveHead<MergeHead>>>",
                                                                  "schema": {}
                                                                }
                                                              },
                                                              "resolveTags": {
                                                                "name": "resolveTags",
                                                                "global": false,
                                                                "description": "Resolve tags from head entries.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "() => Promise<HeadTag[]>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      5081,
                                                                      5119
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "event",
                                                                  "type": "(): Promise<HeadTag[]>"
                                                                }
                                                              },
                                                              "hooks": {
                                                                "name": "hooks",
                                                                "global": false,
                                                                "description": "Exposed hooks for easier extension.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Hookable<HeadHooks, HookKeys<HeadHooks>>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      5183,
                                                                      5210
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Hookable<HeadHooks, HookKeys<HeadHooks>>"
                                                              },
                                                              "resolvedOptions": {
                                                                "name": "resolvedOptions",
                                                                "global": false,
                                                                "description": "Resolved options",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "CreateHeadOptions",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      5255,
                                                                      5290
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "object",
                                                                  "type": "CreateHeadOptions",
                                                                  "schema": {
                                                                    "domDelayFn": {
                                                                      "name": "domDelayFn",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "((fn: () => void) => void) | undefined",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                          "range": [
                                                                            4377,
                                                                            4415
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "((fn: () => void) => void) | undefined"
                                                                    },
                                                                    "document": {
                                                                      "name": "document",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "Document | undefined",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                          "range": [
                                                                            4420,
                                                                            4440
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "Document | undefined"
                                                                    },
                                                                    "plugins": {
                                                                      "name": "plugins",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "HeadPluginInput[] | undefined",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                          "range": [
                                                                            4445,
                                                                            4473
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "HeadPluginInput[] | undefined",
                                                                        "schema": {
                                                                          "0": "undefined",
                                                                          "1": {
                                                                            "kind": "array",
                                                                            "type": "HeadPluginInput[]",
                                                                            "schema": [
                                                                              {
                                                                                "kind": "enum",
                                                                                "type": "HeadPluginInput",
                                                                                "schema": [
                                                                                  {
                                                                                    "kind": "object",
                                                                                    "type": "Omit<CreateHeadOptions, \"plugins\"> & { mode?: RuntimeMode | undefined; } & { key?: string | undefined; }",
                                                                                    "schema": {
                                                                                      "hooks": {
                                                                                        "name": "hooks",
                                                                                        "global": false,
                                                                                        "description": "",
                                                                                        "tags": [],
                                                                                        "required": false,
                                                                                        "type": "NestedHooks<HeadHooks> | undefined",
                                                                                        "declarations": [
                                                                                          {
                                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                            "range": [
                                                                                              4478,
                                                                                              4509
                                                                                            ]
                                                                                          }
                                                                                        ],
                                                                                        "schema": "NestedHooks<HeadHooks> | undefined"
                                                                                      },
                                                                                      "domDelayFn": {
                                                                                        "name": "domDelayFn",
                                                                                        "global": false,
                                                                                        "description": "",
                                                                                        "tags": [],
                                                                                        "required": false,
                                                                                        "type": "((fn: () => void) => void) | undefined",
                                                                                        "declarations": [
                                                                                          {
                                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                            "range": [
                                                                                              4377,
                                                                                              4415
                                                                                            ]
                                                                                          }
                                                                                        ],
                                                                                        "schema": "((fn: () => void) => void) | undefined"
                                                                                      },
                                                                                      "document": {
                                                                                        "name": "document",
                                                                                        "global": false,
                                                                                        "description": "",
                                                                                        "tags": [],
                                                                                        "required": false,
                                                                                        "type": "Document | undefined",
                                                                                        "declarations": [
                                                                                          {
                                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                            "range": [
                                                                                              4420,
                                                                                              4440
                                                                                            ]
                                                                                          }
                                                                                        ],
                                                                                        "schema": "Document | undefined"
                                                                                      },
                                                                                      "mode": {
                                                                                        "name": "mode",
                                                                                        "global": false,
                                                                                        "description": "",
                                                                                        "tags": [],
                                                                                        "required": false,
                                                                                        "type": "RuntimeMode | undefined",
                                                                                        "declarations": [
                                                                                          {
                                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                            "range": [
                                                                                              3712,
                                                                                              3731
                                                                                            ]
                                                                                          }
                                                                                        ],
                                                                                        "schema": "RuntimeMode | undefined"
                                                                                      },
                                                                                      "key": {
                                                                                        "name": "key",
                                                                                        "global": false,
                                                                                        "description": "",
                                                                                        "tags": [],
                                                                                        "required": false,
                                                                                        "type": "string | undefined",
                                                                                        "declarations": [
                                                                                          {
                                                                                            "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                            "range": [
                                                                                              3785,
                                                                                              3798
                                                                                            ]
                                                                                          }
                                                                                        ],
                                                                                        "schema": "string | undefined"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "kind": "event",
                                                                                    "type": "(head: Unhead<Head<SchemaAugmentations>>): Omit<CreateHeadOptions, \"plugins\"> & { mode?: RuntimeMode | undefined; } & { ...; }",
                                                                                    "schema": [
                                                                                      "Head<SchemaAugmentations>"
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "hooks": {
                                                                      "name": "hooks",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "NestedHooks<HeadHooks> | undefined",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                          "range": [
                                                                            4478,
                                                                            4509
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "NestedHooks<HeadHooks> | undefined"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "use": {
                                                                "name": "use",
                                                                "global": false,
                                                                "description": "Use a head plugin, loads the plugins hooks.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "(plugin: HeadPluginInput) => void",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      5362,
                                                                      5401
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "event",
                                                                  "type": "(plugin: HeadPluginInput): void",
                                                                  "schema": {}
                                                                }
                                                              },
                                                              "ssr": {
                                                                "name": "ssr",
                                                                "global": false,
                                                                "description": "Is it a server-side render context.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      5465,
                                                                      5478
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "_dom": {
                                                                "name": "_dom",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [
                                                                  {
                                                                    "name": "internal"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "DomState | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      5516,
                                                                      5532
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "DomState | undefined",
                                                                  "schema": {
                                                                    "0": "undefined",
                                                                    "1": {
                                                                      "kind": "object",
                                                                      "type": "DomState",
                                                                      "schema": {
                                                                        "pendingSideEffects": {
                                                                          "name": "pendingSideEffects",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": true,
                                                                          "type": "SideEffectsRecord",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                              "range": [
                                                                                5883,
                                                                                5921
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "SideEffectsRecord"
                                                                        },
                                                                        "sideEffects": {
                                                                          "name": "sideEffects",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": true,
                                                                          "type": "SideEffectsRecord",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                              "range": [
                                                                                5926,
                                                                                5957
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "SideEffectsRecord"
                                                                        },
                                                                        "elMap": {
                                                                          "name": "elMap",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": true,
                                                                          "type": "Record<string, Element>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                              "range": [
                                                                                5962,
                                                                                5993
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "Record<string, Element>"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "_domUpdatePromise": {
                                                                "name": "_domUpdatePromise",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [
                                                                  {
                                                                    "name": "internal"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "Promise<void> | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      5570,
                                                                      5604
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "Promise<void> | undefined",
                                                                  "schema": {
                                                                    "0": "undefined",
                                                                    "1": "Promise<void>"
                                                                  }
                                                                }
                                                              },
                                                              "dirty": {
                                                                "name": "dirty",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [
                                                                  {
                                                                    "name": "internal"
                                                                  }
                                                                ],
                                                                "required": true,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      5642,
                                                                      5657
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "_scripts": {
                                                                "name": "_scripts",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [
                                                                  {
                                                                    "name": "internal"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "Record<string, any> | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      5695,
                                                                      5726
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "Record<string, any> | undefined",
                                                                  "schema": {
                                                                    "0": "undefined",
                                                                    "1": "Record<string, any>"
                                                                  }
                                                                }
                                                              },
                                                              "_templateParams": {
                                                                "name": "_templateParams",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [
                                                                  {
                                                                    "name": "internal"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "TemplateParams | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      5764,
                                                                      5797
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "TemplateParams | undefined",
                                                                  "schema": {
                                                                    "0": "undefined",
                                                                    "1": {
                                                                      "kind": "object",
                                                                      "type": "TemplateParams",
                                                                      "schema": {
                                                                        "separator": {
                                                                          "name": "separator",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string | undefined",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                              "range": [
                                                                                8207,
                                                                                8244
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string | undefined"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "_separator": {
                                                                "name": "_separator",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [
                                                                  {
                                                                    "name": "internal"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "string | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@unhead/schema/dist/index.d.ts",
                                                                    "range": [
                                                                      5835,
                                                                      5855
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string | undefined"
                                                              },
                                                              "install": {
                                                                "name": "install",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "(app: App<any>, ...options: any[]) => any",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                    "range": [
                                                                      45840,
                                                                      45880
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "event",
                                                                  "type": "(app: App<any>, ...options: any[]): any",
                                                                  "schema": {
                                                                    "0": "any"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "1": {
                                                            "kind": "event",
                                                            "type": "(app: App<any>, ...options: any[]): any",
                                                            "schema": [
                                                              "any"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "config": {
                                                      "name": "config",
                                                      "global": false,
                                                      "description": "This is used solely to render runtime config with SPA renderer.",
                                                      "tags": [],
                                                      "required": false,
                                                      "type": "Pick<RuntimeConfig, \"public\" | \"app\"> | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            3166,
                                                            3213
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Pick<RuntimeConfig, \"public\" | \"app\"> | undefined"
                                                    },
                                                    "teleports": {
                                                      "name": "teleports",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": false,
                                                      "type": "Record<string, string> | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            3218,
                                                            3253
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Record<string, string> | undefined"
                                                    },
                                                    "islandContext": {
                                                      "name": "islandContext",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": false,
                                                      "type": "NuxtIslandContext | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            3258,
                                                            3292
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "NuxtIslandContext | undefined",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": {
                                                            "kind": "object",
                                                            "type": "NuxtIslandContext",
                                                            "schema": {
                                                              "id": {
                                                                "name": "id",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "string | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                                    "range": [
                                                                      482,
                                                                      494
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string | undefined"
                                                              },
                                                              "name": {
                                                                "name": "name",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "string",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                                    "range": [
                                                                      499,
                                                                      512
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string"
                                                              },
                                                              "props": {
                                                                "name": "props",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "Record<string, any> | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                                    "range": [
                                                                      517,
                                                                      545
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, any> | undefined"
                                                              },
                                                              "url": {
                                                                "name": "url",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "string | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                                    "range": [
                                                                      550,
                                                                      563
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string | undefined"
                                                              },
                                                              "slots": {
                                                                "name": "slots",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Record<string, Omit<NuxtIslandSlotResponse, \"html\" | \"fallback\">>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                                    "range": [
                                                                      568,
                                                                      641
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, Omit<NuxtIslandSlotResponse, \"html\" | \"fallback\">>"
                                                              },
                                                              "components": {
                                                                "name": "components",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Record<string, Omit<NuxtIslandClientResponse, \"html\">>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                                    "range": [
                                                                      646,
                                                                      713
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, Omit<NuxtIslandClientResponse, \"html\">>"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "_renderResponse": {
                                                      "name": "_renderResponse",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [
                                                        {
                                                          "name": "internal"
                                                        }
                                                      ],
                                                      "required": false,
                                                      "type": "Partial<RenderResponse> | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            3318,
                                                            3360
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "Partial<RenderResponse> | undefined",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": "Partial<RenderResponse>"
                                                        }
                                                      }
                                                    },
                                                    "_payloadReducers": {
                                                      "name": "_payloadReducers",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [
                                                        {
                                                          "name": "internal"
                                                        }
                                                      ],
                                                      "required": true,
                                                      "type": "Record<string, (data: any) => any>",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            3386,
                                                            3439
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Record<string, (data: any) => any>"
                                                    },
                                                    "_sharedPrerenderCache": {
                                                      "name": "_sharedPrerenderCache",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [
                                                        {
                                                          "name": "internal"
                                                        }
                                                      ],
                                                      "required": false,
                                                      "type": "{ get<T = unknown>(key: string): Promise<T> | undefined; set<T>(key: string, value: Promise<T>): Promise<void>; } | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                          "range": [
                                                            3465,
                                                            3623
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "{ get<T = unknown>(key: string): Promise<T> | undefined; set<T>(key: string, value: Promise<T>): Promise<void>; } | undefined",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": {
                                                            "kind": "object",
                                                            "type": "{ get<T = unknown>(key: string): Promise<T> | undefined; set<T>(key: string, value: Promise<T>): Promise<void>; }",
                                                            "schema": {
                                                              "get": {
                                                                "name": "get",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "<T = unknown>(key: string) => Promise<T> | undefined",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                    "range": [
                                                                      3499,
                                                                      3553
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "event",
                                                                  "type": "<T = unknown>(key: string): Promise<T> | undefined",
                                                                  "schema": {}
                                                                }
                                                              },
                                                              "set": {
                                                                "name": "set",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "<T>(key: string, value: Promise<T>) => Promise<void>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                                    "range": [
                                                                      3562,
                                                                      3616
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "event",
                                                                  "type": "<T>(key: string, value: Promise<T>): Promise<void>",
                                                                  "schema": {}
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "renderResourceHints": {
                                                      "name": "renderResourceHints",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": false,
                                                      "type": "((...args: unknown[]) => unknown) | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                          "range": [
                                                            326,
                                                            380
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "((...args: unknown[]) => unknown) | undefined",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": {
                                                            "kind": "event",
                                                            "type": "(...args: unknown[]): unknown",
                                                            "schema": [
                                                              "unknown"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "renderScripts": {
                                                      "name": "renderScripts",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": false,
                                                      "type": "((...args: unknown[]) => unknown) | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                          "range": [
                                                            385,
                                                            433
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "((...args: unknown[]) => unknown) | undefined",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": {
                                                            "kind": "event",
                                                            "type": "(...args: unknown[]): unknown",
                                                            "schema": [
                                                              "unknown"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "renderStyles": {
                                                      "name": "renderStyles",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": false,
                                                      "type": "((...args: unknown[]) => unknown) | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                          "range": [
                                                            438,
                                                            485
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "((...args: unknown[]) => unknown) | undefined",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": {
                                                            "kind": "event",
                                                            "type": "(...args: unknown[]): unknown",
                                                            "schema": [
                                                              "unknown"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "modules": {
                                                      "name": "modules",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": false,
                                                      "type": "Set<string> | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                          "range": [
                                                            490,
                                                            512
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "Set<string> | undefined",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": "Set<string>"
                                                        }
                                                      }
                                                    },
                                                    "_registeredComponents": {
                                                      "name": "_registeredComponents",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": false,
                                                      "type": "Set<string> | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                          "range": [
                                                            517,
                                                            553
                                                          ]
                                                        }
                                                      ],
                                                      "schema": "Set<string> | undefined"
                                                    },
                                                    "_requestDependencies": {
                                                      "name": "_requestDependencies",
                                                      "global": false,
                                                      "description": "",
                                                      "tags": [],
                                                      "required": false,
                                                      "type": "ModuleDependencies | undefined",
                                                      "declarations": [
                                                        {
                                                          "file": "/home/msrody/Workspace/therodysite/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                          "range": [
                                                            558,
                                                            600
                                                          ]
                                                        }
                                                      ],
                                                      "schema": {
                                                        "kind": "enum",
                                                        "type": "ModuleDependencies | undefined",
                                                        "schema": {
                                                          "0": "undefined",
                                                          "1": {
                                                            "kind": "object",
                                                            "type": "ModuleDependencies",
                                                            "schema": {
                                                              "scripts": {
                                                                "name": "scripts",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Record<string, ResourceMeta>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                                    "range": [
                                                                      129,
                                                                      167
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, ResourceMeta>"
                                                              },
                                                              "styles": {
                                                                "name": "styles",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Record<string, ResourceMeta>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                                    "range": [
                                                                      172,
                                                                      209
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, ResourceMeta>"
                                                              },
                                                              "preload": {
                                                                "name": "preload",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Record<string, ResourceMeta>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                                    "range": [
                                                                      214,
                                                                      252
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, ResourceMeta>"
                                                              },
                                                              "prefetch": {
                                                                "name": "prefetch",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Record<string, ResourceMeta>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "/home/msrody/Workspace/therodysite/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                                    "range": [
                                                                      257,
                                                                      296
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, ResourceMeta>"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "payload": {
                                            "name": "payload",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "NuxtPayload",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  6119,
                                                  6140
                                                ]
                                              }
                                            ],
                                            "schema": "NuxtPayload"
                                          },
                                          "static": {
                                            "name": "static",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "{ data: Record<string, any>; }",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  6145,
                                                  6196
                                                ]
                                              }
                                            ],
                                            "schema": "{ data: Record<string, any>; }"
                                          },
                                          "provide": {
                                            "name": "provide",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "(name: string, value: any) => void",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                "range": [
                                                  6201,
                                                  6245
                                                ]
                                              }
                                            ],
                                            "schema": "(name: string, value: any) => void"
                                          },
                                          "$colorMode": {
                                            "name": "$colorMode",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "ColorModeInstance",
                                            "declarations": [
                                              {
                                                "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                                "range": [
                                                  676,
                                                  706
                                                ]
                                              }
                                            ],
                                            "schema": {
                                              "kind": "object",
                                              "type": "ColorModeInstance",
                                              "schema": {
                                                "preference": {
                                                  "name": "preference",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "string",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                                      "range": [
                                                        41,
                                                        60
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "string"
                                                },
                                                "value": {
                                                  "name": "value",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "string",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                                      "range": [
                                                        65,
                                                        79
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "string"
                                                },
                                                "unknown": {
                                                  "name": "unknown",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "boolean",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                                      "range": [
                                                        84,
                                                        101
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "boolean"
                                                },
                                                "forced": {
                                                  "name": "forced",
                                                  "global": false,
                                                  "description": "",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "boolean",
                                                  "declarations": [
                                                    {
                                                      "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                                      "range": [
                                                        106,
                                                        122
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "boolean"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "$colorMode": {
                                      "name": "$colorMode",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "ColorModeInstance",
                                      "declarations": [
                                        {
                                          "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                          "range": [
                                            676,
                                            706
                                          ]
                                        }
                                      ],
                                      "schema": "ColorModeInstance"
                                    }
                                  }
                                }
                              },
                              "errorHandler": {
                                "name": "errorHandler",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "((err: unknown, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => void) | undefined",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      44770,
                                      44864
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "enum",
                                  "type": "((err: unknown, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => void) | undefined",
                                  "schema": {
                                    "0": "undefined",
                                    "1": {
                                      "kind": "event",
                                      "type": "(err: unknown, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string): void",
                                      "schema": []
                                    }
                                  }
                                }
                              },
                              "warnHandler": {
                                "name": "warnHandler",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "((msg: string, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, trace: string) => void) | undefined",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      44869,
                                      44962
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "enum",
                                  "type": "((msg: string, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, trace: string) => void) | undefined",
                                  "schema": {
                                    "0": "undefined",
                                    "1": {
                                      "kind": "event",
                                      "type": "(msg: string, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, trace: string): void",
                                      "schema": []
                                    }
                                  }
                                }
                              },
                              "compilerOptions": {
                                "name": "compilerOptions",
                                "global": false,
                                "description": "Options to pass to `@vue/compiler-dom`.\nOnly supported in runtime compiler build.",
                                "tags": [],
                                "required": true,
                                "type": "RuntimeCompilerOptions",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      45079,
                                      45119
                                    ]
                                  }
                                ],
                                "schema": "RuntimeCompilerOptions"
                              },
                              "isCustomElement": {
                                "name": "isCustomElement",
                                "global": false,
                                "description": "",
                                "tags": [
                                  {
                                    "name": "deprecated",
                                    "text": "use config.compilerOptions.isCustomElement"
                                  }
                                ],
                                "required": false,
                                "type": "((tag: string) => boolean) | undefined",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      45202,
                                      45245
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "enum",
                                  "type": "((tag: string) => boolean) | undefined",
                                  "schema": {
                                    "0": "undefined",
                                    "1": {
                                      "kind": "event",
                                      "type": "(tag: string): boolean",
                                      "schema": []
                                    }
                                  }
                                }
                              },
                              "warnRecursiveComputed": {
                                "name": "warnRecursiveComputed",
                                "global": false,
                                "description": "TODO document for 3.5\nEnable warnings for computed getters that recursively trigger itself.",
                                "tags": [],
                                "required": false,
                                "type": "boolean | undefined",
                                "declarations": [
                                  {
                                    "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      45372,
                                      45404
                                    ]
                                  }
                                ],
                                "schema": "boolean | undefined"
                              }
                            }
                          }
                        },
                        "mixins": {
                          "name": "mixins",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "ComponentOptions<{}, any, any, any, any, any, any, any, any>[]",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                45478,
                                45505
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "array",
                            "type": "ComponentOptions<{}, any, any, any, any, any, any, any, any>[]",
                            "schema": {
                              "0": {
                                "kind": "object",
                                "type": "ComponentOptions<{}, any, any, any, any, any, any, any, any>",
                                "schema": {
                                  "setup": {
                                    "name": "setup",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((this: void, props: LooseRequired<{}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }) => any) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30057,
                                          30283
                                        ]
                                      }
                                    ],
                                    "schema": "((this: void, props: LooseRequired<{}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }) => any) | undefined"
                                  },
                                  "name": {
                                    "name": "name",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30288,
                                          30302
                                        ]
                                      }
                                    ],
                                    "schema": "string | undefined"
                                  },
                                  "template": {
                                    "name": "template",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | object | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30307,
                                          30334
                                        ]
                                      }
                                    ],
                                    "schema": "string | object | undefined"
                                  },
                                  "render": {
                                    "name": "render",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Function | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30339,
                                          30357
                                        ]
                                      }
                                    ],
                                    "schema": "Function | undefined"
                                  },
                                  "components": {
                                    "name": "components",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30362,
                                          30401
                                        ]
                                      }
                                    ],
                                    "schema": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>> | undefined"
                                  },
                                  "directives": {
                                    "name": "directives",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, Directive<any, any>> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30406,
                                          30445
                                        ]
                                      }
                                    ],
                                    "schema": "Record<string, Directive<any, any>> | undefined"
                                  },
                                  "inheritAttrs": {
                                    "name": "inheritAttrs",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "boolean | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30450,
                                          30473
                                        ]
                                      }
                                    ],
                                    "schema": "boolean | undefined"
                                  },
                                  "emits": {
                                    "name": "emits",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30478,
                                          30514
                                        ]
                                      }
                                    ],
                                    "schema": "any"
                                  },
                                  "slots": {
                                    "name": "slots",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "{} | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30519,
                                          30529
                                        ]
                                      }
                                    ],
                                    "schema": "{} | undefined"
                                  },
                                  "expose": {
                                    "name": "expose",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "string[] | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30534,
                                          30552
                                        ]
                                      }
                                    ],
                                    "schema": "string[] | undefined"
                                  },
                                  "serverPrefetch": {
                                    "name": "serverPrefetch",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void | Promise<any>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30557,
                                          30596
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void | Promise<any>) | undefined"
                                  },
                                  "compilerOptions": {
                                    "name": "compilerOptions",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "RuntimeCompilerOptions | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30601,
                                          30642
                                        ]
                                      }
                                    ],
                                    "schema": "RuntimeCompilerOptions | undefined"
                                  },
                                  "call": {
                                    "name": "call",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((this: unknown, ...args: unknown[]) => never) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30647,
                                          30699
                                        ]
                                      }
                                    ],
                                    "schema": "((this: unknown, ...args: unknown[]) => never) | undefined"
                                  },
                                  "___isFragment": {
                                    "name": "___isFragment",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30704,
                                          30725
                                        ]
                                      }
                                    ],
                                    "schema": "undefined"
                                  },
                                  "___isTeleport": {
                                    "name": "___isTeleport",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30730,
                                          30751
                                        ]
                                      }
                                    ],
                                    "schema": "undefined"
                                  },
                                  "___isSuspense": {
                                    "name": "___isSuspense",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30756,
                                          30777
                                        ]
                                      }
                                    ],
                                    "schema": "undefined"
                                  },
                                  "___defaults": {
                                    "name": "___defaults",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30782,
                                          30804
                                        ]
                                      }
                                    ],
                                    "schema": "any"
                                  },
                                  "compatConfig": {
                                    "name": "compatConfig",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "CompatConfig | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35367,
                                          35395
                                        ]
                                      }
                                    ],
                                    "schema": "CompatConfig | undefined"
                                  },
                                  "data": {
                                    "name": "data",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<{}, {}, {}, {}, MethodOptions, any, any, {}, {}, {}, false, {}, {}, OptionTypesType<{}, {}, {}, ComputedOptions, MethodOptions, {}> & OptionTypesType<...>, ... 5 more ..., {}>) => any) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35424,
                                          35609
                                        ]
                                      }
                                    ],
                                    "schema": "((this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<{}, {}, {}, {}, MethodOptions, any, any, {}, {}, {}, false, {}, {}, OptionTypesType<{}, {}, {}, ComputedOptions, MethodOptions, {}> & OptionTypesType<...>, ... 5 more ..., {}>) => any) | undefined"
                                  },
                                  "computed": {
                                    "name": "computed",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35614,
                                          35627
                                        ]
                                      }
                                    ],
                                    "schema": "any"
                                  },
                                  "methods": {
                                    "name": "methods",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35632,
                                          35644
                                        ]
                                      }
                                    ],
                                    "schema": "any"
                                  },
                                  "watch": {
                                    "name": "watch",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "ComponentWatchOptions | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35649,
                                          35679
                                        ]
                                      }
                                    ],
                                    "schema": "ComponentWatchOptions | undefined"
                                  },
                                  "provide": {
                                    "name": "provide",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "ComponentProvideOptions | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35684,
                                          35718
                                        ]
                                      }
                                    ],
                                    "schema": "ComponentProvideOptions | undefined"
                                  },
                                  "inject": {
                                    "name": "inject",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "{} | string[] | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35723,
                                          35741
                                        ]
                                      }
                                    ],
                                    "schema": "{} | string[] | undefined"
                                  },
                                  "filters": {
                                    "name": "filters",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, Function> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35746,
                                          35781
                                        ]
                                      }
                                    ],
                                    "schema": "Record<string, Function> | undefined"
                                  },
                                  "mixins": {
                                    "name": "mixins",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any[] | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35786,
                                          35803
                                        ]
                                      }
                                    ],
                                    "schema": "any[] | undefined"
                                  },
                                  "extends": {
                                    "name": "extends",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35808,
                                          35826
                                        ]
                                      }
                                    ],
                                    "schema": "any"
                                  },
                                  "beforeCreate": {
                                    "name": "beforeCreate",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35831,
                                          35853
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "created": {
                                    "name": "created",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35858,
                                          35875
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "beforeMount": {
                                    "name": "beforeMount",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35880,
                                          35901
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "mounted": {
                                    "name": "mounted",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35906,
                                          35923
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "beforeUpdate": {
                                    "name": "beforeUpdate",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35928,
                                          35950
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "updated": {
                                    "name": "updated",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35955,
                                          35972
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "activated": {
                                    "name": "activated",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35977,
                                          35996
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "deactivated": {
                                    "name": "deactivated",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36001,
                                          36022
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "beforeDestroy": {
                                    "name": "beforeDestroy",
                                    "global": false,
                                    "description": "",
                                    "tags": [
                                      {
                                        "name": "deprecated",
                                        "text": "use `beforeUnmount` instead"
                                      }
                                    ],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36078,
                                          36101
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "beforeUnmount": {
                                    "name": "beforeUnmount",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36106,
                                          36129
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "destroyed": {
                                    "name": "destroyed",
                                    "global": false,
                                    "description": "",
                                    "tags": [
                                      {
                                        "name": "deprecated",
                                        "text": "use `unmounted` instead"
                                      }
                                    ],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36181,
                                          36200
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "unmounted": {
                                    "name": "unmounted",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36205,
                                          36224
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void) | undefined"
                                  },
                                  "renderTracked": {
                                    "name": "renderTracked",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "DebuggerHook | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36229,
                                          36258
                                        ]
                                      }
                                    ],
                                    "schema": "DebuggerHook | undefined"
                                  },
                                  "renderTriggered": {
                                    "name": "renderTriggered",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "DebuggerHook | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36263,
                                          36294
                                        ]
                                      }
                                    ],
                                    "schema": "DebuggerHook | undefined"
                                  },
                                  "errorCaptured": {
                                    "name": "errorCaptured",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "ErrorCapturedHook<unknown> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36299,
                                          36333
                                        ]
                                      }
                                    ],
                                    "schema": "ErrorCapturedHook<unknown> | undefined"
                                  },
                                  "delimiters": {
                                    "name": "delimiters",
                                    "global": false,
                                    "description": "runtime compile only",
                                    "tags": [
                                      {
                                        "name": "deprecated",
                                        "text": "use `compilerOptions.delimiters` instead."
                                      }
                                    ],
                                    "required": false,
                                    "type": "[string, string] | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36443,
                                          36473
                                        ]
                                      }
                                    ],
                                    "schema": "[string, string] | undefined"
                                  },
                                  "___differentiator": {
                                    "name": "___differentiator",
                                    "global": false,
                                    "description": "#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | number | symbol | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36783,
                                          36830
                                        ]
                                      }
                                    ],
                                    "schema": "string | number | symbol | undefined"
                                  },
                                  "___isBuiltIn": {
                                    "name": "___isBuiltIn",
                                    "global": false,
                                    "description": "Compat build only, for bailing out of certain compatibility behavior",
                                    "tags": [],
                                    "required": false,
                                    "type": "boolean | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          55921,
                                          55943
                                        ]
                                      }
                                    ],
                                    "schema": "boolean | undefined"
                                  },
                                  "___file": {
                                    "name": "___file",
                                    "global": false,
                                    "description": "This one should be exposed so that devtools can make use of it",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          56034,
                                          56050
                                        ]
                                      }
                                    ],
                                    "schema": "string | undefined"
                                  },
                                  "___name": {
                                    "name": "___name",
                                    "global": false,
                                    "description": "name inferred from filename",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          56106,
                                          56122
                                        ]
                                      }
                                    ],
                                    "schema": "string | undefined"
                                  },
                                  "beforeRouteEnter": {
                                    "name": "beforeRouteEnter",
                                    "global": false,
                                    "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
                                    "tags": [
                                      {
                                        "name": "param",
                                        "text": "to - RouteLocationRaw we are navigating to"
                                      },
                                      {
                                        "name": "param",
                                        "text": "from - RouteLocationRaw we are navigating from"
                                      },
                                      {
                                        "name": "param",
                                        "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                      }
                                    ],
                                    "required": false,
                                    "type": "NavigationGuardWithThis<undefined> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                        "range": [
                                          60091,
                                          60218
                                        ]
                                      }
                                    ],
                                    "schema": "NavigationGuardWithThis<undefined> | undefined"
                                  },
                                  "beforeRouteUpdate": {
                                    "name": "beforeRouteUpdate",
                                    "global": false,
                                    "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
                                    "tags": [
                                      {
                                        "name": "param",
                                        "text": "to - RouteLocationRaw we are navigating to"
                                      },
                                      {
                                        "name": "param",
                                        "text": "from - RouteLocationRaw we are navigating from"
                                      },
                                      {
                                        "name": "param",
                                        "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                      }
                                    ],
                                    "required": false,
                                    "type": "NavigationGuard | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                        "range": [
                                          60665,
                                          60775
                                        ]
                                      }
                                    ],
                                    "schema": "NavigationGuard | undefined"
                                  },
                                  "beforeRouteLeave": {
                                    "name": "beforeRouteLeave",
                                    "global": false,
                                    "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
                                    "tags": [
                                      {
                                        "name": "param",
                                        "text": "to - RouteLocationRaw we are navigating to"
                                      },
                                      {
                                        "name": "param",
                                        "text": "from - RouteLocationRaw we are navigating from"
                                      },
                                      {
                                        "name": "param",
                                        "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                      }
                                    ],
                                    "required": false,
                                    "type": "NavigationGuard | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                        "range": [
                                          61140,
                                          61248
                                        ]
                                      }
                                    ],
                                    "schema": "NavigationGuard | undefined"
                                  },
                                  "head": {
                                    "name": "head",
                                    "global": false,
                                    "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
                                    "tags": [],
                                    "required": false,
                                    "type": "((nuxtApp: NuxtApp) => UseHeadInput) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/types/augments.d.ts",
                                        "range": [
                                          1615,
                                          1652
                                        ]
                                      }
                                    ],
                                    "schema": "((nuxtApp: NuxtApp) => UseHeadInput) | undefined"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "components": {
                          "name": "components",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                45510,
                                45548
                              ]
                            }
                          ],
                          "schema": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"
                        },
                        "directives": {
                          "name": "directives",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "Record<string, Directive<any, any>>",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                45553,
                                45591
                              ]
                            }
                          ],
                          "schema": "Record<string, Directive<any, any>>"
                        },
                        "provides": {
                          "name": "provides",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "Record<string | symbol, any>",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                45596,
                                45635
                              ]
                            }
                          ],
                          "schema": "Record<string | symbol, any>"
                        }
                      }
                    }
                  },
                  "vnode": {
                    "name": "vnode",
                    "global": false,
                    "description": "Vnode representing this component in its parent's vdom tree",
                    "tags": [],
                    "required": true,
                    "type": "VNode<RendererNode, RendererElement, { [key: string]: any; }>",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58568,
                          58581
                        ]
                      }
                    ],
                    "schema": "VNode<RendererNode, RendererElement, { [key: string]: any; }>"
                  },
                  "subTree": {
                    "name": "subTree",
                    "global": false,
                    "description": "Root vnode of this component's own vdom tree",
                    "tags": [],
                    "required": true,
                    "type": "VNode<RendererNode, RendererElement, { [key: string]: any; }>",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58654,
                          58669
                        ]
                      }
                    ],
                    "schema": "VNode<RendererNode, RendererElement, { [key: string]: any; }>"
                  },
                  "effect": {
                    "name": "effect",
                    "global": false,
                    "description": "Render effect instance",
                    "tags": [],
                    "required": true,
                    "type": "ReactiveEffect<any>",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58720,
                          58743
                        ]
                      }
                    ],
                    "schema": "ReactiveEffect<any>"
                  },
                  "update": {
                    "name": "update",
                    "global": false,
                    "description": "Bound effect runner to be passed to schedulers",
                    "tags": [],
                    "required": true,
                    "type": "SchedulerJob",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58818,
                          58839
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "object",
                      "type": "SchedulerJob",
                      "schema": {
                        "id": {
                          "name": "id",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "number | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                2125,
                                2137
                              ]
                            }
                          ],
                          "schema": "number | undefined"
                        },
                        "pre": {
                          "name": "pre",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "boolean | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                2142,
                                2156
                              ]
                            }
                          ],
                          "schema": "boolean | undefined"
                        },
                        "active": {
                          "name": "active",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "boolean | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                2161,
                                2178
                              ]
                            }
                          ],
                          "schema": "boolean | undefined"
                        },
                        "computed": {
                          "name": "computed",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "boolean | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                2183,
                                2202
                              ]
                            }
                          ],
                          "schema": "boolean | undefined"
                        },
                        "allowRecurse": {
                          "name": "allowRecurse",
                          "global": false,
                          "description": "Indicates whether the effect is allowed to recursively trigger itself\nwhen managed by the scheduler.\n\nBy default, a job cannot trigger itself because some built-in method calls,\ne.g. Array.prototype.push actually performs reads as well (#1740) which\ncan lead to confusing infinite loops.\nThe allowed cases are component update functions and watch callbacks.\nComponent update functions may update child component props, which in turn\ntrigger flush: \"pre\" watch callbacks that mutates state that the parent\nrelies on (#1801). Watch callbacks doesn't track its dependencies so if it\ntriggers itself again, it's likely intentional and it is the user's\nresponsibility to perform recursive state mutation that eventually\nstabilizes (#1727).",
                          "tags": [],
                          "required": false,
                          "type": "boolean | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                3048,
                                3071
                              ]
                            }
                          ],
                          "schema": "boolean | undefined"
                        },
                        "i": {
                          "name": "i",
                          "global": false,
                          "description": "Attached by renderer.ts when setting up a component's render effect\nUsed to obtain component information when reporting max recursive updates.",
                          "tags": [],
                          "required": false,
                          "type": "ComponentInternalInstance | undefined",
                          "declarations": [
                            {
                              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                3249,
                                3279
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "ComponentInternalInstance | undefined",
                            "schema": {
                              "0": "undefined",
                              "1": "ComponentInternalInstance"
                            }
                          }
                        }
                      }
                    }
                  },
                  "proxy": {
                    "name": "proxy",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58844,
                          58882
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null",
                      "schema": {
                        "0": "null",
                        "1": {
                          "kind": "object",
                          "type": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>",
                          "schema": {
                            "$": {
                              "name": "$",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "ComponentInternalInstance",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8244,
                                    8273
                                  ]
                                }
                              ],
                              "schema": "ComponentInternalInstance"
                            },
                            "$data": {
                              "name": "$data",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "{}",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8278,
                                    8287
                                  ]
                                }
                              ],
                              "schema": "{}"
                            },
                            "$props": {
                              "name": "$props",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "{}",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8292,
                                    8432
                                  ]
                                }
                              ],
                              "schema": "{}"
                            },
                            "$attrs": {
                              "name": "$attrs",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "Data",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8437,
                                    8450
                                  ]
                                }
                              ],
                              "schema": "Data"
                            },
                            "$refs": {
                              "name": "$refs",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "Data",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8455,
                                    8467
                                  ]
                                }
                              ],
                              "schema": "Data"
                            },
                            "$slots": {
                              "name": "$slots",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "Readonly<InternalSlots>",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8472,
                                    8499
                                  ]
                                }
                              ],
                              "schema": "Readonly<InternalSlots>"
                            },
                            "$root": {
                              "name": "$root",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8504,
                                    8542
                                  ]
                                }
                              ],
                              "schema": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null"
                            },
                            "$parent": {
                              "name": "$parent",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8547,
                                    8587
                                  ]
                                }
                              ],
                              "schema": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null"
                            },
                            "$emit": {
                              "name": "$emit",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "(event: string, ...args: any[]) => void",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8592,
                                    8609
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "event",
                                "type": "(event: string, ...args: any[]): void",
                                "schema": {}
                              }
                            },
                            "$el": {
                              "name": "$el",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "any",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8614,
                                    8623
                                  ]
                                }
                              ],
                              "schema": "any"
                            },
                            "$options": {
                              "name": "$options",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}> & MergedComponentOptionsOverride",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8628,
                                    8679
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "object",
                                "type": "ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}> & MergedComponentOptionsOverride",
                                "schema": {
                                  "setup": {
                                    "name": "setup",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((this: void, props: LooseRequired<any>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }) => any) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30057,
                                          30283
                                        ]
                                      }
                                    ],
                                    "schema": "((this: void, props: LooseRequired<any>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed | undefined) => void; }) => any) | undefined"
                                  },
                                  "name": {
                                    "name": "name",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30288,
                                          30302
                                        ]
                                      }
                                    ],
                                    "schema": "string | undefined"
                                  },
                                  "template": {
                                    "name": "template",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | object | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30307,
                                          30334
                                        ]
                                      }
                                    ],
                                    "schema": "string | object | undefined"
                                  },
                                  "render": {
                                    "name": "render",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Function | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30339,
                                          30357
                                        ]
                                      }
                                    ],
                                    "schema": "Function | undefined"
                                  },
                                  "components": {
                                    "name": "components",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30362,
                                          30401
                                        ]
                                      }
                                    ],
                                    "schema": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>> | undefined"
                                  },
                                  "directives": {
                                    "name": "directives",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, Directive<any, any>> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30406,
                                          30445
                                        ]
                                      }
                                    ],
                                    "schema": "Record<string, Directive<any, any>> | undefined"
                                  },
                                  "inheritAttrs": {
                                    "name": "inheritAttrs",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "boolean | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30450,
                                          30473
                                        ]
                                      }
                                    ],
                                    "schema": "boolean | undefined"
                                  },
                                  "emits": {
                                    "name": "emits",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30478,
                                          30514
                                        ]
                                      }
                                    ],
                                    "schema": "any"
                                  },
                                  "slots": {
                                    "name": "slots",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "{} | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30519,
                                          30529
                                        ]
                                      }
                                    ],
                                    "schema": "{} | undefined"
                                  },
                                  "expose": {
                                    "name": "expose",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "string[] | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30534,
                                          30552
                                        ]
                                      }
                                    ],
                                    "schema": "string[] | undefined"
                                  },
                                  "serverPrefetch": {
                                    "name": "serverPrefetch",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(() => void | Promise<any>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30557,
                                          30596
                                        ]
                                      }
                                    ],
                                    "schema": "(() => void | Promise<any>) | undefined"
                                  },
                                  "compilerOptions": {
                                    "name": "compilerOptions",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "RuntimeCompilerOptions | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30601,
                                          30642
                                        ]
                                      }
                                    ],
                                    "schema": "RuntimeCompilerOptions | undefined"
                                  },
                                  "call": {
                                    "name": "call",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((this: unknown, ...args: unknown[]) => never) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30647,
                                          30699
                                        ]
                                      }
                                    ],
                                    "schema": "((this: unknown, ...args: unknown[]) => never) | undefined"
                                  },
                                  "___isFragment": {
                                    "name": "___isFragment",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30704,
                                          30725
                                        ]
                                      }
                                    ],
                                    "schema": "undefined"
                                  },
                                  "___isTeleport": {
                                    "name": "___isTeleport",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30730,
                                          30751
                                        ]
                                      }
                                    ],
                                    "schema": "undefined"
                                  },
                                  "___isSuspense": {
                                    "name": "___isSuspense",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30756,
                                          30777
                                        ]
                                      }
                                    ],
                                    "schema": "undefined"
                                  },
                                  "___defaults": {
                                    "name": "___defaults",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "{} | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          30782,
                                          30804
                                        ]
                                      }
                                    ],
                                    "schema": "{} | undefined"
                                  },
                                  "compatConfig": {
                                    "name": "compatConfig",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "CompatConfig | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35367,
                                          35395
                                        ]
                                      }
                                    ],
                                    "schema": "CompatConfig | undefined"
                                  },
                                  "data": {
                                    "name": "data",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((this: any, vm: any) => any) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35424,
                                          35609
                                        ]
                                      }
                                    ],
                                    "schema": "((this: any, vm: any) => any) | undefined"
                                  },
                                  "computed": {
                                    "name": "computed",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35614,
                                          35627
                                        ]
                                      }
                                    ],
                                    "schema": "any"
                                  },
                                  "methods": {
                                    "name": "methods",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35632,
                                          35644
                                        ]
                                      }
                                    ],
                                    "schema": "any"
                                  },
                                  "watch": {
                                    "name": "watch",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "ComponentWatchOptions | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35649,
                                          35679
                                        ]
                                      }
                                    ],
                                    "schema": "ComponentWatchOptions | undefined"
                                  },
                                  "provide": {
                                    "name": "provide",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "ComponentProvideOptions | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35684,
                                          35718
                                        ]
                                      }
                                    ],
                                    "schema": "ComponentProvideOptions | undefined"
                                  },
                                  "inject": {
                                    "name": "inject",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "{} | string[] | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35723,
                                          35741
                                        ]
                                      }
                                    ],
                                    "schema": "{} | string[] | undefined"
                                  },
                                  "filters": {
                                    "name": "filters",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "Record<string, Function> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35746,
                                          35781
                                        ]
                                      }
                                    ],
                                    "schema": "Record<string, Function> | undefined"
                                  },
                                  "mixins": {
                                    "name": "mixins",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any[] | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35786,
                                          35803
                                        ]
                                      }
                                    ],
                                    "schema": "any[] | undefined"
                                  },
                                  "extends": {
                                    "name": "extends",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "any",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35808,
                                          35826
                                        ]
                                      }
                                    ],
                                    "schema": "any"
                                  },
                                  "beforeCreate": {
                                    "name": "beforeCreate",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35831,
                                          35853
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36920,
                                          36946
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "created": {
                                    "name": "created",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35858,
                                          35875
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36951,
                                          36972
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "beforeMount": {
                                    "name": "beforeMount",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35880,
                                          35901
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36977,
                                          37002
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "mounted": {
                                    "name": "mounted",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35906,
                                          35923
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37007,
                                          37028
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "beforeUpdate": {
                                    "name": "beforeUpdate",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35928,
                                          35950
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37033,
                                          37059
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "updated": {
                                    "name": "updated",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35955,
                                          35972
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37064,
                                          37085
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "activated": {
                                    "name": "activated",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          35977,
                                          35996
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37090,
                                          37113
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "deactivated": {
                                    "name": "deactivated",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36001,
                                          36022
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37118,
                                          37143
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "beforeDestroy": {
                                    "name": "beforeDestroy",
                                    "global": false,
                                    "description": "",
                                    "tags": [
                                      {
                                        "name": "deprecated",
                                        "text": "use `beforeUnmount` instead"
                                      },
                                      {
                                        "name": "deprecated",
                                        "text": "use `beforeUnmount` instead"
                                      }
                                    ],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36078,
                                          36101
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37199,
                                          37226
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "beforeUnmount": {
                                    "name": "beforeUnmount",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36106,
                                          36129
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37231,
                                          37258
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "destroyed": {
                                    "name": "destroyed",
                                    "global": false,
                                    "description": "",
                                    "tags": [
                                      {
                                        "name": "deprecated",
                                        "text": "use `unmounted` instead"
                                      },
                                      {
                                        "name": "deprecated",
                                        "text": "use `unmounted` instead"
                                      }
                                    ],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36181,
                                          36200
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37310,
                                          37333
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "unmounted": {
                                    "name": "unmounted",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "((() => void) & MergedHook<() => void>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36205,
                                          36224
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37338,
                                          37361
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "((() => void) & MergedHook<() => void>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": {
                                          "kind": "event",
                                          "type": "(): void"
                                        },
                                        "2": {
                                          "kind": "array",
                                          "type": "(() => void) & (() => void)[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "renderTracked": {
                                    "name": "renderTracked",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(DebuggerHook & MergedHook<DebuggerHook>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36229,
                                          36258
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37366,
                                          37407
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "(DebuggerHook & MergedHook<DebuggerHook>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": "DebuggerHook",
                                        "2": {
                                          "kind": "array",
                                          "type": "DebuggerHook & DebuggerHook[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "renderTriggered": {
                                    "name": "renderTriggered",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(DebuggerHook & MergedHook<DebuggerHook>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36263,
                                          36294
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37412,
                                          37455
                                        ]
                                      }
                                    ],
                                    "schema": "(DebuggerHook & MergedHook<DebuggerHook>) | undefined"
                                  },
                                  "errorCaptured": {
                                    "name": "errorCaptured",
                                    "global": false,
                                    "description": "",
                                    "tags": [],
                                    "required": false,
                                    "type": "(ErrorCapturedHook<unknown> & MergedHook<ErrorCapturedHook<unknown>>) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36299,
                                          36333
                                        ]
                                      },
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          37460,
                                          37506
                                        ]
                                      }
                                    ],
                                    "schema": {
                                      "kind": "enum",
                                      "type": "(ErrorCapturedHook<unknown> & MergedHook<ErrorCapturedHook<unknown>>) | undefined",
                                      "schema": {
                                        "0": "undefined",
                                        "1": "ErrorCapturedHook<unknown>",
                                        "2": {
                                          "kind": "array",
                                          "type": "ErrorCapturedHook<unknown> & ErrorCapturedHook<unknown>[]",
                                          "schema": []
                                        }
                                      }
                                    }
                                  },
                                  "delimiters": {
                                    "name": "delimiters",
                                    "global": false,
                                    "description": "runtime compile only",
                                    "tags": [
                                      {
                                        "name": "deprecated",
                                        "text": "use `compilerOptions.delimiters` instead."
                                      }
                                    ],
                                    "required": false,
                                    "type": "[string, string] | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36443,
                                          36473
                                        ]
                                      }
                                    ],
                                    "schema": "[string, string] | undefined"
                                  },
                                  "___differentiator": {
                                    "name": "___differentiator",
                                    "global": false,
                                    "description": "#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | number | symbol | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          36783,
                                          36830
                                        ]
                                      }
                                    ],
                                    "schema": "string | number | symbol | undefined"
                                  },
                                  "___isBuiltIn": {
                                    "name": "___isBuiltIn",
                                    "global": false,
                                    "description": "Compat build only, for bailing out of certain compatibility behavior",
                                    "tags": [],
                                    "required": false,
                                    "type": "boolean | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          55921,
                                          55943
                                        ]
                                      }
                                    ],
                                    "schema": "boolean | undefined"
                                  },
                                  "___file": {
                                    "name": "___file",
                                    "global": false,
                                    "description": "This one should be exposed so that devtools can make use of it",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          56034,
                                          56050
                                        ]
                                      }
                                    ],
                                    "schema": "string | undefined"
                                  },
                                  "___name": {
                                    "name": "___name",
                                    "global": false,
                                    "description": "name inferred from filename",
                                    "tags": [],
                                    "required": false,
                                    "type": "string | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                        "range": [
                                          56106,
                                          56122
                                        ]
                                      }
                                    ],
                                    "schema": "string | undefined"
                                  },
                                  "beforeRouteEnter": {
                                    "name": "beforeRouteEnter",
                                    "global": false,
                                    "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
                                    "tags": [
                                      {
                                        "name": "param",
                                        "text": "to - RouteLocationRaw we are navigating to"
                                      },
                                      {
                                        "name": "param",
                                        "text": "from - RouteLocationRaw we are navigating from"
                                      },
                                      {
                                        "name": "param",
                                        "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                      }
                                    ],
                                    "required": false,
                                    "type": "NavigationGuardWithThis<undefined> | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                        "range": [
                                          60091,
                                          60218
                                        ]
                                      }
                                    ],
                                    "schema": "NavigationGuardWithThis<undefined> | undefined"
                                  },
                                  "beforeRouteUpdate": {
                                    "name": "beforeRouteUpdate",
                                    "global": false,
                                    "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
                                    "tags": [
                                      {
                                        "name": "param",
                                        "text": "to - RouteLocationRaw we are navigating to"
                                      },
                                      {
                                        "name": "param",
                                        "text": "from - RouteLocationRaw we are navigating from"
                                      },
                                      {
                                        "name": "param",
                                        "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                      }
                                    ],
                                    "required": false,
                                    "type": "NavigationGuard | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                        "range": [
                                          60665,
                                          60775
                                        ]
                                      }
                                    ],
                                    "schema": "NavigationGuard | undefined"
                                  },
                                  "beforeRouteLeave": {
                                    "name": "beforeRouteLeave",
                                    "global": false,
                                    "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
                                    "tags": [
                                      {
                                        "name": "param",
                                        "text": "to - RouteLocationRaw we are navigating to"
                                      },
                                      {
                                        "name": "param",
                                        "text": "from - RouteLocationRaw we are navigating from"
                                      },
                                      {
                                        "name": "param",
                                        "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                      }
                                    ],
                                    "required": false,
                                    "type": "NavigationGuard | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                        "range": [
                                          61140,
                                          61248
                                        ]
                                      }
                                    ],
                                    "schema": "NavigationGuard | undefined"
                                  },
                                  "head": {
                                    "name": "head",
                                    "global": false,
                                    "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
                                    "tags": [],
                                    "required": false,
                                    "type": "((nuxtApp: NuxtApp) => UseHeadInput) | undefined",
                                    "declarations": [
                                      {
                                        "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/types/augments.d.ts",
                                        "range": [
                                          1615,
                                          1652
                                        ]
                                      }
                                    ],
                                    "schema": "((nuxtApp: NuxtApp) => UseHeadInput) | undefined"
                                  }
                                }
                              }
                            },
                            "$forceUpdate": {
                              "name": "$forceUpdate",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "() => void",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8684,
                                    8709
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "event",
                                "type": "(): void"
                              }
                            },
                            "$nextTick": {
                              "name": "$nextTick",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "<T = void, R = void>(this: T, fn?: ((this: T) => R) | undefined) => Promise<Awaited<R>>",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8714,
                                    8741
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "event",
                                "type": "<T = void, R = void>(this: T, fn?: ((this: T) => R) | undefined): Promise<Awaited<R>>",
                                "schema": {}
                              }
                            },
                            "$watch": {
                              "name": "$watch",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "<T extends string | ((...args: any) => any)>(source: T, cb: T extends (...args: any) => infer R ? (args_0: R, args_1: R, args_2: OnCleanup) => any : (args_0: any, args_1: any, args_2: OnCleanup) => any, options?: WatchOptions<...> | undefined) => WatchStopHandle",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                  "range": [
                                    8746,
                                    8970
                                  ]
                                }
                              ],
                              "schema": {
                                "kind": "event",
                                "type": "<T extends string | ((...args: any) => any)>(source: T, cb: T extends (...args: any) => infer R ? (args_0: R, args_1: R, args_2: OnCleanup) => any : (args_0: any, args_1: any, args_2: OnCleanup) => any, options?: WatchOptions<...> | undefined): WatchStopHandle",
                                "schema": {}
                              }
                            },
                            "$route": {
                              "name": "$route",
                              "global": false,
                              "description": "Normalized current location. See {@link RouteLocationNormalizedLoaded}.",
                              "tags": [],
                              "required": true,
                              "type": "RouteLocationNormalizedLoadedGeneric",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                  "range": [
                                    61400,
                                    61501
                                  ]
                                }
                              ],
                              "schema": "RouteLocationNormalizedLoadedGeneric"
                            },
                            "$router": {
                              "name": "$router",
                              "global": false,
                              "description": "{@link Router} instance used by the application.",
                              "tags": [],
                              "required": true,
                              "type": "Router",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/vue-router/dist/vue-router.d.ts",
                                  "range": [
                                    61578,
                                    61646
                                  ]
                                }
                              ],
                              "schema": "Router"
                            },
                            "$dt": {
                              "name": "$dt",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "DtFunction",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/index.d.ts",
                                  "range": [
                                    4532,
                                    4548
                                  ]
                                }
                              ],
                              "schema": "DtFunction"
                            },
                            "$pinceau": {
                              "name": "$pinceau",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "ComputedRef<string>",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/index.d.ts",
                                  "range": [
                                    4557,
                                    4587
                                  ]
                                }
                              ],
                              "schema": "ComputedRef<string>"
                            },
                            "$pinceauTheme": {
                              "name": "$pinceauTheme",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "{ $tokens: TokensFunction; updateToken: (path: string | string[], value: any, mq?: PinceauMediaQueries | undefined) => void; updateTheme: (value: Theme<...>) => void; reactiveToken: (path: GeneratedPinceauPaths | ({} & string)) => WritableComputedRef<...>; resolveStylesheet: () => void; theme: any; }",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/index.d.ts",
                                  "range": [
                                    4596,
                                    4651
                                  ]
                                }
                              ],
                              "schema": "{ $tokens: TokensFunction; updateToken: (path: string | string[], value: any, mq?: PinceauMediaQueries | undefined) => void; updateTheme: (value: Theme<...>) => void; reactiveToken: (path: GeneratedPinceauPaths | ({} & string)) => WritableComputedRef<...>; resolveStylesheet: () => void; theme: any; }"
                            },
                            "$pinceauRuntime": {
                              "name": "$pinceauRuntime",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "any",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/pinceau/dist/index.d.ts",
                                  "range": [
                                    4660,
                                    4681
                                  ]
                                }
                              ],
                              "schema": "any"
                            },
                            "$nuxt": {
                              "name": "$nuxt",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "NuxtApp",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/types/augments.d.ts",
                                  "range": [
                                    1298,
                                    1312
                                  ]
                                }
                              ],
                              "schema": "NuxtApp"
                            },
                            "$colorMode": {
                              "name": "$colorMode",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "ColorModeInstance",
                              "declarations": [
                                {
                                  "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                  "range": [
                                    676,
                                    706
                                  ]
                                }
                              ],
                              "schema": "ColorModeInstance"
                            }
                          }
                        }
                      }
                    }
                  },
                  "exposed": {
                    "name": "exposed",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "Record<string, any> | null",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58887,
                          58923
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "Record<string, any> | null",
                      "schema": {
                        "0": "null",
                        "1": "Record<string, any>"
                      }
                    }
                  },
                  "exposeProxy": {
                    "name": "exposeProxy",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "Record<string, any> | null",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58928,
                          58968
                        ]
                      }
                    ],
                    "schema": "Record<string, any> | null"
                  },
                  "data": {
                    "name": "data",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "Data",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58973,
                          58984
                        ]
                      }
                    ],
                    "schema": "Data"
                  },
                  "props": {
                    "name": "props",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "Data",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          58989,
                          59001
                        ]
                      }
                    ],
                    "schema": "Data"
                  },
                  "attrs": {
                    "name": "attrs",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "Data",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          59006,
                          59018
                        ]
                      }
                    ],
                    "schema": "Data"
                  },
                  "slots": {
                    "name": "slots",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "InternalSlots",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          59023,
                          59044
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "object",
                      "type": "InternalSlots",
                      "schema": {}
                    }
                  },
                  "refs": {
                    "name": "refs",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "Data",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          59049,
                          59060
                        ]
                      }
                    ],
                    "schema": "Data"
                  },
                  "emit": {
                    "name": "emit",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "(event: string, ...args: any[]) => void",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          59065,
                          59078
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "event",
                      "type": "(event: string, ...args: any[]): void",
                      "schema": {}
                    }
                  },
                  "isMounted": {
                    "name": "isMounted",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "boolean",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          59083,
                          59102
                        ]
                      }
                    ],
                    "schema": "boolean"
                  },
                  "isUnmounted": {
                    "name": "isUnmounted",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "boolean",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          59107,
                          59128
                        ]
                      }
                    ],
                    "schema": "boolean"
                  },
                  "isDeactivated": {
                    "name": "isDeactivated",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "boolean",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                        "range": [
                          59133,
                          59156
                        ]
                      }
                    ],
                    "schema": "boolean"
                  },
                  "_nuxtOnBeforeMountCbs": {
                    "name": "_nuxtOnBeforeMountCbs",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "Function[]",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/types/augments.d.ts",
                        "range": [
                          1361,
                          1394
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "array",
                      "type": "Function[]",
                      "schema": {
                        "0": "Function"
                      }
                    }
                  },
                  "_nuxtIdIndex": {
                    "name": "_nuxtIdIndex",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "Record<string, number> | undefined",
                    "declarations": [
                      {
                        "file": "/home/msrody/Workspace/therodysite/node_modules/nuxt/dist/app/types/augments.d.ts",
                        "range": [
                          1399,
                          1436
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "Record<string, number> | undefined",
                      "schema": {
                        "0": "undefined",
                        "1": "Record<string, number>"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProsePre": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
    "pascalName": "ProsePre",
    "kebabName": "prose-pre",
    "chunkName": "components/prose-pre",
    "shortPath": "node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "meta",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                485,
                532
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "null"
        },
        {
          "name": "code",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                248,
                293
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        },
        {
          "name": "language",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                297,
                348
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "null"
        },
        {
          "name": "filename",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                352,
                403
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "null"
        },
        {
          "name": "highlights",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "number[] | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                407,
                481
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "number[] | undefined",
            "schema": {
              "0": "undefined",
              "1": {
                "kind": "array",
                "type": "number[]",
                "schema": [
                  "number"
                ]
              }
            }
          },
          "default": "[]"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8472,
                8499
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "((_: {}) => any) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "((_: {}) => any) | undefined",
                  "schema": {
                    "0": "undefined",
                    "1": {
                      "kind": "event",
                      "type": "(_: {}): any",
                      "schema": []
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "class",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                536,
                584
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "style",
          "type": "string | Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                588,
                646
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | Record<string, any>",
            "schema": {
              "0": "string",
              "1": "Record<string, any>"
            }
          }
        },
        {
          "name": "meta",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                485,
                532
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "code",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                248,
                293
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "language",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                297,
                348
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "filename",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                352,
                403
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "highlights",
          "type": "number[]",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                407,
                481
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "number[]",
            "schema": {
              "0": "number"
            }
          }
        }
      ]
    }
  },
  "ProseScript": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue",
    "pascalName": "ProseScript",
    "kebabName": "prose-script",
    "chunkName": "components/prose-script",
    "shortPath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "src",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue",
              "range": [
                285,
                329
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          },
          "default": "\"\""
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "src",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "/home/msrody/Workspace/therodysite/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue",
              "range": [
                285,
                329
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  }
}