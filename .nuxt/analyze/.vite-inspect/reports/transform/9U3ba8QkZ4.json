{
  "resolvedId": "/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/NuxtImg.vue?nuxt_component=async&nuxt_component_name=NuxtImg&nuxt_component_export=default",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script lang=\"ts\">\nimport { withBase } from 'ufo'\nimport type { PropType } from 'vue'\n\ntype NuxtThemedImg = {\n  light: string\n  dark: string\n}\ntype NuxtImg = string & NuxtThemedImg\n\nexport default defineComponent({\n  props: {\n    src: {\n      type: [String, Object] as PropType<NuxtImg>,\n      default: null\n    }\n  },\n  setup (props) {\n    const srcWithBase = (src?: string) => {\n      if (src && src.startsWith('/') && !src.startsWith('//')) {\n        return withBase(src, useRuntimeConfig().app.baseURL)\n      }\n\n      return src\n    }\n\n    const imgSrc = computed(() => {\n      let src: NuxtImg = props.src\n\n      try {\n        src = JSON.parse(src as any)\n      } catch (e) {\n        src = props.src\n      }\n\n      if (typeof src === 'string') { return srcWithBase(props.src) }\n\n      return {\n        light: srcWithBase((src as NuxtThemedImg).light),\n        dark: srcWithBase((src as NuxtThemedImg).dark)\n      }\n    })\n\n    return {\n      imgSrc\n    }\n  },\n  render ({ imgSrc }) {\n    // String as `src`; return a single image\n    if (typeof imgSrc === 'string') { return h('img', { src: imgSrc, ...this.$attrs }) }\n\n    // Object as `src`; return a light and dark image if present\n    const nodes = []\n    if (imgSrc.light) { nodes.push(h('img', { src: imgSrc.light, class: ['dark-img'], ...this.$attrs })) }\n    if (imgSrc.dark) { nodes.push(h('img', { src: imgSrc.dark, class: ['light-img'], ...this.$attrs })) }\n\n    return nodes\n  }\n})\n</script>\n",
      "start": 1721696476783,
      "end": 1721696476909,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721696476909,
      "end": 1721696476909,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721696476910,
      "end": 1721696476910,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "start": 1721696476910,
      "end": 1721696476910,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1721696476910,
      "end": 1721696476910,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1721696476910,
      "end": 1721696476910,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1721696476910,
      "end": 1721696476910,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1721696476910,
      "end": 1721696476910,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1721696476910,
      "end": 1721696476910,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import _sfc_main from \"/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/NuxtImg.vue?vue&type=script&lang.ts\";\nexport * from \"/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/NuxtImg.vue?vue&type=script&lang.ts\";\nexport default _sfc_main;\n",
      "start": 1721696476910,
      "end": 1721696476972,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1721696476972,
      "end": 1721696476972,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721696476973,
      "end": 1721696476973,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721696476973,
      "end": 1721696476973,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1721696476974,
      "end": 1721696476975,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1721696476975,
      "end": 1721696476975,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/NuxtImg.vue\").then(r => r[\"default\"] || r.default || r))",
      "start": 1721696476976,
      "end": 1721696476977,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1721696476977,
      "end": 1721696476977,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1721696476977,
      "end": 1721696476977,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1721696476978,
      "end": 1721696476978,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1721696476978,
      "end": 1721696476978,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1721696476978,
      "end": 1721696476978,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1721696476979,
      "end": 1721696476979,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1721696476979,
      "end": 1721696476979,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1721696476979,
      "end": 1721696476979,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1721696476980,
      "end": 1721696476980,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1721696476980,
      "end": 1721696476980,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721696476981,
      "end": 1721696476982,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721696476983,
      "end": 1721696476987,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721696476988,
      "end": 1721696476989,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721696476990,
      "end": 1721696476991,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1721696476992,
      "end": 1721696476992,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1721696476993,
      "end": 1721696476994,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1721696476994,
      "end": 1721696476995,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1721696476996,
      "end": 1721696476997,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => __vitePreload(() => import(\"/home/msrody/Workspace/therodysite/node_modules/@nuxt-themes/elements/components/globals/NuxtImg.vue\"),__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0,import.meta.url).then(r => r[\"default\"] || r.default || r))",
      "start": 1721696476997,
      "end": 1721696476998,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1721696476999,
      "end": 1721696476999,
      "order": "normal"
    }
  ]
}
